<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SpringBoot + Spring Security 学习笔记（五）实现短信验证码+登录功能]]></title>
    <url>%2F2019%2F04%2F24%2F030%2F</url>
    <content type="text"><![CDATA[&#x5728; Spring Security &#x4E2D;&#x57FA;&#x4E8E;&#x8868;&#x5355;&#x7684;&#x8BA4;&#x8BC1;&#x6A21;&#x5F0F;&#xFF0C;&#x9ED8;&#x8BA4;&#x5C31;&#x662F;&#x5BC6;&#x7801;&#x5E10;&#x53F7;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x4E8E;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;+&#x767B;&#x5F55;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;Spring Security &#x6CA1;&#x6709;&#x73B0;&#x6210;&#x7684;&#x63A5;&#x53E3;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x7684;&#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x7684;&#x8BA4;&#x8BC1;&#x8FC7;&#x6EE4;&#x5668;&#x548C;&#x8BA4;&#x8BC1;&#x5904;&#x7406;&#x5668;&#x5B9E;&#x73B0;&#x77ED;&#x4FE1;&#x8BA4;&#x8BC1;&#x3002; &#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x8BA4;&#x8BC1;&#x9A8C;&#x8BC1;&#x7801;&#x5BF9;&#x8C61;&#x7C7B;&#x8BBE;&#x8BA1;&#x548C;&#x56FE;&#x7247;&#x9A8C;&#x8BC1;&#x7801;&#x4E00;&#x6837;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6765;&#x751F;&#x6210;&#x624B;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x5E76;&#x53D1;&#x9001;&#x7ED9;&#x624B;&#x673A;&#x3002;&#x56E0;&#x4E3A;&#x56FE;&#x7247;&#x9A8C;&#x8BC1;&#x7801;&#x548C;&#x624B;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x5BF9;&#x8C61;&#x7684;&#x533A;&#x522B;&#x5C31;&#x5728;&#x4E8E;&#x524D;&#x8005;&#x591A;&#x4E86;&#x4E2A;&#x56FE;&#x7247;&#x5BF9;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x4E24;&#x8005;&#x5171;&#x540C;&#x90E8;&#x5206;&#x62BD;&#x8C61;&#x51FA;&#x6765;&#x53EF;&#x4EE5;&#x8BBE;&#x8BA1;&#x6210;&#x4E00;&#x4E2A;ValidateCode&#x7C7B;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x91CC;&#x9762;&#x53EA;&#x5B58;&#x653E;&#x9A8C;&#x8BC1;&#x7801;&#x548C;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#xFF0C;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x7C7B;&#x5373;&#x53EF;&#xFF1A; 1234567891011121314151617181920212223242526import java.time.LocalDateTime;import lombok.Data;@Datapublic class ValidateCode { private String code; private LocalDateTime expireTime; public ValidateCode(String code, int expireIn){ this.code = code; this.expireTime = LocalDateTime.now().plusSeconds(expireIn); } public boolean isExpried() { return LocalDateTime.now().isAfter(getExpireTime()); } public ValidateCode(String code, LocalDateTime expireTime) { super(); this.code = code; this.expireTime = expireTime; }} &#x56FE;&#x7247;&#x9A8C;&#x8BC1;&#x7801;&#x627F;&#x7EE7;&#x6B64;&#x7C7B;&#xFF1A; 12345678910111213141516171819202122232425import java.awt.image.BufferedImage;import java.time.LocalDateTime;import org.woodwhales.king.validate.code.ValidateCode;import lombok.Data;import lombok.EqualsAndHashCode;@Data@EqualsAndHashCode(callSuper=false)public class ImageCode extends ValidateCode { private BufferedImage image; public ImageCode(BufferedImage image, String code, int expireId) { super(code, LocalDateTime.now().plusSeconds(expireId)); this.image = image; } public ImageCode(BufferedImage image, String code, LocalDateTime localDateTime) { super(code, localDateTime); this.image = image; }} &#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x7C7B;&#x8BBE;&#x8BA1;&#x7531;&#x4E8E;&#x56FE;&#x7247;&#x548C;&#x77ED;&#x4FE1;&#x7C7B;&#x5747;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x76F8;&#x5E94;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x63A5;&#x53E3;&#xFF0C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7C7B;&#x6839;&#x636E;&#x4E1A;&#x52A1;&#x8FDB;&#x884C;&#x5B9E;&#x73B0;&#xFF1A; 1234567import org.springframework.web.context.request.ServletWebRequest;public interface ValidateCodeGenerator { ValidateCode generate(ServletWebRequest request);} &#x8FD9;&#x91CC;&#x7684;&#x4F20;&#x53C2;&#x8BBE;&#x8BA1;&#x6210;&#x4E86;ServletWebRequest&#x662F;&#x80FD;&#x591F;&#x6839;&#x636E;&#x524D;&#x7AEF;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7684;&#x4E1A;&#x52A1;&#x5B9E;&#x73B0; &#x76EE;&#x524D;&#x5B9E;&#x73B0;&#x7D2F;&#x53EA;&#x6709;&#x56FE;&#x7247;&#x751F;&#x6210;&#x5668;&#x548C;&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x5668;&#xFF1A; 123456789101112131415161718192021222324252627282930// &#x56FE;&#x7247;&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x5668;@Component(&quot;imageCodeGenerator&quot;)public class ImageCodeGenerator implements ValidateCodeGenerator { /** * &#x751F;&#x6210;&#x56FE;&#x5F62;&#x9A8C;&#x8BC1;&#x7801; * @param request * @return */ @Override public ValidateCode generate(ServletWebRequest request) { &#x2026;&#x2026; return new ImageCode(image, sRand, SecurityConstants.EXPIRE_SECOND); }}// &#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x5668;@Component(&quot;smsCodeGenerator&quot;)public class SmsCodeGenerator implements ValidateCodeGenerator { @Override public ValidateCode generate(ServletWebRequest request) { String code = RandomStringUtils.randomNumeric(SecurityConstants.SMS_RANDOM_SIZE); return new ValidateCode(code, SecurityConstants.SMS_EXPIRE_SECOND); }} &#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x53D1;&#x9001;&#x63A5;&#x53E3;&#x8BBE;&#x8BA1;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x8BBE;&#x8BA1;&#x63A5;&#x53E3;&#x4F9D;&#x8D56;&#x77ED;&#x4FE1;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x5546;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x7801;&#x53D1;&#x9001;&#xFF0C;&#x56E0;&#x6B64;&#x81F3;&#x5C11;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x7EDF;&#x4E00;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x4F9B;&#x77ED;&#x4FE1;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x5546;&#x751F;&#x6210;&#x53D1;&#x9001;&#x77ED;&#x4FE1;&#x670D;&#x52A1;&#xFF1A; 12345public interface SmsCodeSender { //&#x3000;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x624B;&#x673A;&#x53F7;&#x548C;&#x9A8C;&#x8BC1;&#x7801; void send(String mobile, String code);} &#x4E3A;&#x4E86;&#x6F14;&#x793A;&#xFF0C;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x865A;&#x62DF;&#x7684;&#x9ED8;&#x8BA4;&#x77ED;&#x4FE1;&#x53D1;&#x9001;&#x5668;&#xFF0C;&#x53EA;&#x5728;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x4E2D;&#x6253;&#x5370;&#x4E00;&#x884C;log&#xFF1A; 123456789101112131415161718import org.springframework.stereotype.Service;import lombok.extern.slf4j.Slf4j;/** * &#x77ED;&#x4FE1;&#x53D1;&#x9001;&#x6A21;&#x62DF; * @author Administrator * */@Slf4j@Servicepublic class DefaultSmsCodeSender implements SmsCodeSender { @Override public void send(String mobile, String code) { log.debug(&quot;send to mobile &#xFF1A;{}, code : {}&quot;, mobile, code); }} &#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x8BF7;&#x6C42;Controller&#x6240;&#x6709;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x8BF7;&#x6C42;&#x90FD;&#x5728;&#x7EDF;&#x4E00;&#x7684;ValidateCodeController&#x91CC;&#xFF0C;&#x8FD9;&#x91CC;&#x6CE8;&#x5165;&#x4E86;&#x4E24;&#x4E2A;&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x5668;ValidateCodeGenerator&#xFF0C;&#x540E;&#x671F;&#x53EF;&#x4EE5;&#x5229;&#x7528; spring &#x7684;&#x4F9D;&#x8D56;&#x67E5;&#x627E;/&#x641C;&#x7D22;&#x6280;&#x5DE7;&#x6765;&#x91CD;&#x6784;&#x4EE3;&#x7801;&#xFF0C;&#x53E6;&#x5916;&#x6240;&#x6709;&#x7684;&#x8BF7;&#x6C42;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x505A;&#x6210;&#x52A8;&#x6001;&#x914D;&#x7F6E;&#xFF0C;&#x8FD9;&#x91CC;&#x4E34;&#x65F6;&#x5168;&#x90E8; hardCode &#x5728;&#x4EE3;&#x7801;&#x91CC;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849import java.io.IOException;import javax.imageio.ImageIO;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.social.connect.web.SessionStrategy;import org.springframework.web.bind.ServletRequestBindingException;import org.springframework.web.bind.ServletRequestUtils;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.context.request.ServletWebRequest;import org.woodwhales.king.core.commons.SecurityConstants;import org.woodwhales.king.validate.code.ValidateCode;import org.woodwhales.king.validate.code.ValidateCodeGenerator;import org.woodwhales.king.validate.code.image.ImageCode;import org.woodwhales.king.validate.code.sms.DefaultSmsCodeSender;@RestControllerpublic class ValidateCodeController { @Autowired private SessionStrategy sessionStrategy; @Autowired private ValidateCodeGenerator imageCodeGenerator; @Autowired private ValidateCodeGenerator smsCodeGenerator; @Autowired private DefaultSmsCodeSender defaultSmsCodeSender; @GetMapping(&quot;code/image&quot;) public void createImageCode(HttpServletRequest request, HttpServletResponse response) throws IOException { ImageCode imageCode = (ImageCode)imageCodeGenerator.generate(new ServletWebRequest(request)); sessionStrategy.setAttribute(new ServletWebRequest(request), SecurityConstants.SESSION_KEY, imageCode); ImageIO.write(imageCode.getImage(), &quot;JPEG&quot;, response.getOutputStream()); } @GetMapping(&quot;code/sms&quot;) public void createSmsCode(HttpServletRequest request, HttpServletResponse response) throws ServletRequestBindingException { ValidateCode smsCode = smsCodeGenerator.generate(new ServletWebRequest(request)); sessionStrategy.setAttribute(new ServletWebRequest(request), SecurityConstants.SESSION_KEY, smsCode); String mobile = ServletRequestUtils.getStringParameter(request, &quot;mobile&quot;); defaultSmsCodeSender.send(mobile, smsCode.getCode()); }} &#x4ECE;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x56FE;&#x7247;&#x9A8C;&#x8BC1;&#x7801;&#x548C;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x751F;&#x6210;&#x8BF7;&#x6C42;&#x903B;&#x8F91;&#x662F;&#x76F8;&#x4F3C;&#x7684;&#xFF1A;&#x9996;&#x5148;&#x8C03;&#x7528;&#x9A8C;&#x8BC1;&#x7801;&#x751F;&#x6210;&#x63A5;&#x53E3;&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x9A8C;&#x8BC1;&#x7801;&#x653E;&#x5165; session &#x4E2D;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x9A8C;&#x8BC1;&#x7801;&#x8FD4;&#x56DE;&#x7ED9;&#x524D;&#x7AEF;&#x6216;&#x8005;&#x7528;&#x6237;&#x3002;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x5957;&#x8DEF;&#x6D41;&#x7A0B;&#x53EF;&#x4EE5;&#x62BD;&#x8C61;&#x6210;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x65B9;&#x6CD5;&#xFF0C;&#x4EE5;&#x589E;&#x5F3A;&#x4EE3;&#x7801;&#x7684;&#x53EF;&#x7EF4;&#x62A4;&#x6027;&#x548C;&#x53EF;&#x6269;&#x5C55;&#x6027;&#x3002; &#x7528;&#x4E00;&#x5F20;&#x56FE;&#x6765;&#x8868;&#x8FF0;&#x91CD;&#x6784;&#x540E;&#x7684;&#x4EE3;&#x7801;&#x7ED3;&#x6784;&#xFF1A; &#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x8BBE;&#x8BA1;&#x7531;&#x4E8E;&#x56FE;&#x7247;&#x548C;&#x624B;&#x673A;&#x90FD;&#x4F1A;&#x4EA7;&#x751F;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x540E;&#x671F;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x767B;&#x5F55;&#x9A8C;&#x8BC1;&#xFF0C;&#x56E0;&#x6B64;&#x5C06;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x8BA4;&#x8BC1;&#x53EF;&#x4EE5;&#x72EC;&#x7ACB;&#x5C01;&#x88C5;&#x5728;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x4E2D;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x5728;&#x6574;&#x4E2A; spring security &#x8FC7;&#x6EE4;&#x5668;&#x94FE;&#x7684;&#x6700;&#x524D;&#x7AEF;&#xFF08;&#x5B83;&#x662F;&#x7B2C;&#x4E00;&#x9053;&#x8BA4;&#x8BC1;&#x5899;&#xFF09;&#x3002; &#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x53EA;&#x8981;&#x7EE7;&#x627F; spring &#x6846;&#x67B6;&#x4E2D;&#x7684;OncePerRequestFilter&#x5373;&#x53EF;&#x4FDD;&#x8BC1;&#x8FD9;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x5728;&#x8BF7;&#x6C42;&#x6765;&#x7684;&#x65F6;&#x5019;&#x53EA;&#x88AB;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#xFF0C;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x53C2;&#x89C1;&#x6587;&#x672B;&#x6E90;&#x7801;&#x3002; &#x8FD9;&#x91CC;&#x91CD;&#x70B9;&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#x5982;&#x4F55;&#x5C06;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x914D;&#x7F6E;&#x5230; spring security &#x8FC7;&#x6EE4;&#x5668;&#x8BA4;&#x8BC1;&#x6700;&#x524D;&#x7AEF;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x5199;SecurityConfigurerAdapter&#x7684;configure()&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x5C06;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x653E;&#x5230;AbstractPreAuthenticatedProcessingFilter&#x8FC7;&#x6EE4;&#x5668;&#x4E4B;&#x524D;&#x5373;&#x53EF;&#xFF1A; 12345678910111213141516171819202122import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.config.annotation.SecurityConfigurerAdapter;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.web.DefaultSecurityFilterChain;import org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter;import org.springframework.stereotype.Component;import javax.servlet.Filter;@Componentpublic class ValidateCodeSecurityConfig extends SecurityConfigurerAdapter&lt;DefaultSecurityFilterChain, HttpSecurity&gt; { @Autowired private Filter validateCodeFilter; @Override public void configure(HttpSecurity http) throws Exception { super.configure(http); http.addFilterBefore(validateCodeFilter, AbstractPreAuthenticatedProcessingFilter.class); }} &#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x8BA4;&#x8BC1;&#x5728;&#x81EA;&#x5B9A;&#x4E49;&#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;&#x4E4B;&#x524D;&#xFF0C;&#x5EFA;&#x8BAE;&#x53EF;&#x4EE5;&#x79FB;&#x6B65;&#x5230;&#x4E4B;&#x524D;&#x7684;&#x6587;&#x7AE0;&#xFF1A;SpringBoot + Spring Security &#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;&#x6E90;&#x7801;&#x8BE6;&#x89E3;&#xFF0C;&#x4E86;&#x89E3;&#x6E05;&#x9664;&#x7528;&#x6237;&#x5BC6;&#x7801;&#x7684;&#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;&#x624D;&#x80FD;&#x66F4;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x4E0B;&#x9762;&#x8FD9;&#x5F20;&#x7ECF;&#x5178;&#x7684;&#x6D41;&#x7A0B;&#x56FE;&#xFF1A; &#x5DE6;&#x4FA7;&#x662F;&#x7528;&#x6237;+&#x5BC6;&#x7801;&#x7684;&#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;&#xFF0C;&#x6574;&#x4F53;&#x7684;&#x6D41;&#x7A0B;&#x5C31;&#x662F;&#x7ECF;&#x8FC7;&#x7528;&#x6237;&#x540D;+&#x5BC6;&#x7801;&#x8BA4;&#x8BC1;&#x8FC7;&#x6EE4;&#x5668;&#x8BA4;&#x8BC1;&#xFF0C;&#x5C06;&#x8BF7;&#x6C42;&#x5C01;&#x88C5;&#x6210; token &#x5E76;&#x6CE8;&#x5165;&#x5230; AutheticationMananger &#x4E2D;&#xFF0C;&#x4E4B;&#x540E;&#x7531;&#x9ED8;&#x8BA4;&#x7684;&#x8BA4;&#x8BC1;&#x6821;&#x9A8C;&#x5668;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF0C;&#x5728;&#x6821;&#x9A8C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x8C03;&#x7528; UserDetailsService &#x63A5;&#x53E3;&#x8FDB;&#x884C; token &#x6821;&#x9A8C;&#xFF0C;&#x5F53;&#x6821;&#x9A8C;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x5DF2;&#x7ECF;&#x8BA4;&#x8BC1;&#x7684; token &#x653E;&#x5230; SecurityContextHolder &#x4E2D;&#x3002; &#x540C;&#x7406;&#xFF0C;&#x7531;&#x4E8E;&#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x65B9;&#x5F0F;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x5BC6;&#x7801;&#x767B;&#x5F55;&#x529F;&#x80FD;&#xFF0C;&#x5F53;&#x6821;&#x9A8C;&#x6210;&#x529F;&#x4E4B;&#x540E;&#x5C31;&#x8BA4;&#x4E3A;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4EFF;&#x9020;&#x5DE6;&#x4FA7;&#x7684;&#x6D41;&#x7A0B;&#x5F00;&#x53D1;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1; token&#xFF0C;&#x8FD9;&#x4E2A; token &#x53EA;&#x9700;&#x8981;&#x5B58;&#x653E;&#x624B;&#x673A;&#x53F7;&#x5373;&#x53EF;&#xFF0C;&#x5728;token &#x6821;&#x9A8C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x6821;&#x9A8C;&#x5668;&#x4E86;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5F00;&#x53D1;&#x6821;&#x9A8C;&#x5F53;&#x524D;&#x81EA;&#x5B9A;&#x4E49; token &#x7684;&#x6821;&#x9A8C;&#x5668;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x548C;&#x6821;&#x9A8C;&#x5668;&#x914D;&#x7F6E;&#x5230; spring security &#x6846;&#x67B6;&#x4E2D;&#x5373;&#x53EF;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x77ED;&#x4FE1;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x9A8C;&#x8BC1;&#x8FC7;&#x7A0B;&#x662F;&#x5728; SmsCodeAuthticationFIlter &#x4E4B;&#x524D;&#x5C31;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x3002; &#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;Token&#x4EFF;&#x9020;UsernamePasswordAuthenticationToken&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x5C5E;&#x4E8E;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7684;&#x8BA4;&#x8BC1; token &#x5BF9;&#x8C61;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x81EA;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7684; token&#xFF0C;spring security &#x6846;&#x67B6;&#x4E0D;&#x53EA;&#x63D0;&#x4F9B;&#x4E86;&#x7528;&#x6237;&#x540D;+&#x5BC6;&#x7801;&#x7684;&#x9A8C;&#x8BC1;&#x65B9;&#x5F0F;&#xFF0C;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x662F;&#x5426;&#x6210;&#x529F;&#xFF0C;&#x6700;&#x7EC8;&#x770B;&#x7684;&#x5C31;&#x662F;SecurityContextHolder&#x5BF9;&#x8C61;&#x4E2D;&#x662F;&#x5426;&#x6709;&#x5BF9;&#x5E94;&#x7684;AuthenticationToken&#xFF0C;&#x56E0;&#x6B64;&#x8981;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x8BA4;&#x8BC1;&#x5BF9;&#x8C61;&#xFF0C;&#x5F53;&#x8BA4;&#x8BC1;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x5C06;&#x5176;&#x8BBE;&#x7F6E;&#x5230;SecurityContextHolder&#x5373;&#x53EF;&#x3002; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import java.util.Collection;import org.springframework.security.authentication.AbstractAuthenticationToken;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.SpringSecurityCoreVersion;public class SmsCodeAuthenticationToken extends AbstractAuthenticationToken { private static final long serialVersionUID = SpringSecurityCoreVersion.SERIAL_VERSION_UID; private final Object principal; public SmsCodeAuthenticationToken(Object mobile) { super(null); this.principal = mobile; setAuthenticated(false); } public SmsCodeAuthenticationToken(Object mobile, Collection&lt;? extends GrantedAuthority&gt; authorities) { super(authorities); this.principal = mobile; super.setAuthenticated(true); // must use super, as we override } public Object getPrincipal() { return this.principal; } public Object getCredentials() { return null; } public void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException { if (isAuthenticated) { throw new IllegalArgumentException(&quot;Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead&quot;); } super.setAuthenticated(false); } @Override public void eraseCredentials() { super.eraseCredentials(); }} &#x4ECE;AuthenticationToken&#x63A5;&#x53E3;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x73B0;&#x5728;&#x6846;&#x67B6;&#x4E2D;&#x6709;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x7684; token &#x4E86;&#xFF1A; &#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#x8FC7;&#x6EE4;&#x5668;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x8BBE;&#x8BA1;&#x601D;&#x8DEF;&#x540C;&#x7406;&#xFF0C;&#x4EFF;&#x9020;UsernamePasswordAuthenticationFilter&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x8FD9;&#x91CC;&#x518D;&#x6B21;&#x63D0;&#x9192;&#xFF0C;&#x77ED;&#x4FE1;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273import java.util.Objects;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.security.authentication.AuthenticationServiceException;import org.springframework.security.core.Authentication;import org.springframework.security.core.AuthenticationException;import org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;import org.springframework.security.web.util.matcher.AntPathRequestMatcher;import org.springframework.util.Assert;import org.woodwhales.core.constants.SecurityConstants;public class SmsCodeAuthenticationFilter extends AbstractAuthenticationProcessingFilter { /** * &#x8BF7;&#x6C42;&#x4E2D;&#x7684;&#x53C2;&#x6570; */ private String mobileParameter = SecurityConstants.DEFAULT_PARAMETER_NAME_MOBILE; private boolean postOnly = true; public SmsCodeAuthenticationFilter() { super(new AntPathRequestMatcher(SecurityConstants.DEFAULT_LOGIN_PROCESSING_URL_MOBILE, &quot;POST&quot;)); } public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) throws AuthenticationException { if (postOnly &amp;&amp; !request.getMethod().equals(&quot;POST&quot;)) { throw new AuthenticationServiceException(&quot;Authentication method not supported: &quot; + request.getMethod()); } // &#x83B7;&#x53D6;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x503C; String mobile = obtainMobile(request); if (Objects.isNull(mobile)) { mobile = &quot;&quot;; } mobile = mobile.trim(); SmsCodeAuthenticationToken authRequest = new SmsCodeAuthenticationToken(mobile); // Allow subclasses to set the &quot;details&quot; property setDetails(request, authRequest); return this.getAuthenticationManager().authenticate(authRequest); } /** * &#x83B7;&#x53D6;&#x624B;&#x673A;&#x53F7; */ protected String obtainMobile(HttpServletRequest request) { return request.getParameter(mobileParameter); } protected void setDetails(HttpServletRequest request, SmsCodeAuthenticationToken authRequest) { authRequest.setDetails(authenticationDetailsSource.buildDetails(request)); } public void setMobileParameter(String mobileParameter) { Assert.hasText(mobileParameter, &quot;Mobile parameter must not be empty or null&quot;); this.mobileParameter = mobileParameter; } public void setPostOnly(boolean postOnly) { this.postOnly = postOnly; } public final String getMobileParameter() { return mobileParameter; }} &#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x4E5F;&#x6210;&#x4E3A;&#x4E86;AbstractAuthenticationProcessingFilter&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x5B50;&#x7C7B;&#xFF0C;&#x540E;&#x671F;&#x9700;&#x8981;&#x6CE8;&#x518C;&#x5230;&#x5B89;&#x5168;&#x914D;&#x7F6E;&#x4E2D;&#xFF0C;&#x8BA9;&#x5B83;&#x6210;&#x4E3A;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x8FC7;&#x6EE4;&#x94FE;&#x4E2D;&#x7684;&#x4E00;&#x73AF;&#xFF1A; &#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#x6821;&#x9A8C;&#x5668;&#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#x6821;&#x9A8C;&#x5668;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x8C03;&#x7528;UserDetailsService&#x7684;loadUserByUsername()&#x65B9;&#x6CD5;&#x5BF9; authenticationToken &#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF0C;&#x6240;&#x6709;&#x6821;&#x9A8C;&#x5668;&#x7684;&#x6839;&#x63A5;&#x53E3;&#x4E3A;&#xFF1A;AuthenticationProvider&#xFF0C;&#x56E0;&#x6B64;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#x6821;&#x9A8C;&#x5668;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x91CD;&#x5199;authenticate()&#x5373;&#x53EF;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243import java.util.Objects;import org.springframework.security.authentication.AuthenticationProvider;import org.springframework.security.authentication.InternalAuthenticationServiceException;import org.springframework.security.core.Authentication;import org.springframework.security.core.AuthenticationException;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import lombok.Data;@Datapublic class SmsCodeAuthenticationProvider implements AuthenticationProvider { private UserDetailsService userDetailsService; @Override public Authentication authenticate(Authentication authentication) throws AuthenticationException { SmsCodeAuthenticationToken authenticationToken = (SmsCodeAuthenticationToken) authentication; /** * &#x8C03;&#x7528; {@link UserDetailsService} */ UserDetails user = userDetailsService.loadUserByUsername((String)authenticationToken.getPrincipal()); if (Objects.isNull(user)) { throw new InternalAuthenticationServiceException(&quot;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x4FE1;&#x606F;&quot;); } SmsCodeAuthenticationToken authenticationResult = new SmsCodeAuthenticationToken(user, user.getAuthorities()); authenticationResult.setDetails(authenticationToken.getDetails()); return authenticationResult; } @Override public boolean supports(Class&lt;?&gt; authentication) { return SmsCodeAuthenticationToken.class.isAssignableFrom(authentication); }} &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;@Data&#x6CE8;&#x89E3;&#x751F;&#x6210; setter &#x548C; getter &#x65B9;&#x6CD5;&#x3002; &#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#x5B89;&#x5168;&#x914D;&#x7F6E;&#x8BBE;&#x8BA1;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x5C01;&#x88C5;&#x597D;&#x7684;&#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#x7C7B;&#xFF0C;&#x4EE5;&#x4F9B;&#x5916;&#x90E8;&#x8C03;&#x7528;&#x8005;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.authentication.AuthenticationManager;import org.springframework.security.config.annotation.SecurityConfigurerAdapter;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.web.DefaultSecurityFilterChain;import org.springframework.security.web.authentication.AuthenticationFailureHandler;import org.springframework.security.web.authentication.AuthenticationSuccessHandler;import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;import org.springframework.stereotype.Component;@Componentpublic class SmsCodeAuthenticationSecurityConfig extends SecurityConfigurerAdapter&lt;DefaultSecurityFilterChain, HttpSecurity&gt; { @Autowired private AuthenticationSuccessHandler myAuthenticationSuccessHandler; @Autowired private AuthenticationFailureHandler myAuthenticationFailureHandler; @Autowired private UserDetailsService userDetailsService; @Override public void configure(HttpSecurity http) throws Exception { SmsCodeAuthenticationFilter smsCodeAuthenticationFilter = new SmsCodeAuthenticationFilter(); smsCodeAuthenticationFilter.setAuthenticationManager(http.getSharedObject(AuthenticationManager.class)); smsCodeAuthenticationFilter.setAuthenticationSuccessHandler(myAuthenticationSuccessHandler); smsCodeAuthenticationFilter.setAuthenticationFailureHandler(myAuthenticationFailureHandler); // &#x83B7;&#x53D6;&#x9A8C;&#x8BC1;&#x7801;&#x63D0;&#x4F9B;&#x8005; SmsCodeAuthenticationProvider smsCodeAuthenticationProvider = new SmsCodeAuthenticationProvider(); smsCodeAuthenticationProvider.setUserDetailsService(userDetailsService); // &#x5C06;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x6821;&#x9A8C;&#x5668;&#x6CE8;&#x518C;&#x5230; HttpSecurity&#xFF0C; &#x5E76;&#x5C06;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x6DFB;&#x52A0;&#x5728; UsernamePasswordAuthenticationFilter &#x4E4B;&#x524D; http.authenticationProvider(smsCodeAuthenticationProvider).addFilterAfter(smsCodeAuthenticationFilter, UsernamePasswordAuthenticationFilter.class); }} &#x5F53;&#x5916;&#x90E8;&#x60F3;&#x8981;&#x5F15;&#x7528;&#x8FD9;&#x4E2A;&#x5C01;&#x88C5;&#x597D;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5728;&#x81EA;&#x5B9A;&#x4E49;&#x7684;AbstractChannelSecurityConfig&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#x4E2D;&#x6DFB;&#x52A0;&#x8FDB;&#x53BB;&#x5373;&#x53EF;&#xFF0C;&#x6CE8;&#x610F;&#x8FD9;&#x4E2A;&#x914D;&#x7F6E;&#x5BF9;&#x8C61;&#x4F7F;&#x7528;&#x4E86;@Component&#x6CE8;&#x89E3;&#xFF0C;&#x6CE8;&#x518C;&#x5230;&#x4E86;spring &#x4E2D;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x901A;&#x8FC7;@Autowired&#x5F15;&#x7528;&#xFF0C;&#x5982;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091import javax.sql.DataSource;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Bean;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.web.authentication.AuthenticationFailureHandler;import org.springframework.security.web.authentication.AuthenticationSuccessHandler;import org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl;import org.springframework.security.web.authentication.rememberme.PersistentTokenRepository;import org.springframework.stereotype.Component;import org.woodwhales.core.authentication.sms.AbstractChannelSecurityConfig;import org.woodwhales.core.authentication.sms.SmsCodeAuthenticationSecurityConfig;import org.woodwhales.core.validate.code.config.ValidateCodeSecurityConfig;@Componentpublic class BrowserSecurityConfig extends AbstractChannelSecurityConfig { @Autowired private SmsCodeAuthenticationSecurityConfig smsCodeAuthenticationSecurityConfig; @Autowired private ValidateCodeSecurityConfig validateCodeSecurityConfig; @Autowired protected AuthenticationSuccessHandler authenticationSuccessHandler; @Autowired protected AuthenticationFailureHandler authenticationFailureHandler; @Autowired private UserDetailsService userDetailsService; @Autowired private DataSource dataSource; @Override protected void configure(HttpSecurity http) throws Exception { http.formLogin() .loginPage(&quot;/authentication/require&quot;) // &#x767B;&#x5F55;&#x9875;&#x9762;&#x56DE;&#x8C03; .successHandler(authenticationSuccessHandler)// &#x8BA4;&#x8BC1;&#x6210;&#x529F;&#x56DE;&#x8C03; .failureHandler(authenticationFailureHandler) // &#x4EE5;&#x4E0B;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x6821;&#x9A8C;&#x914D;&#x7F6E; .and() .apply(validateCodeSecurityConfig) // &#x4EE5;&#x4E0B;&#x77ED;&#x4FE1;&#x767B;&#x5F55;&#x8BA4;&#x8BC1;&#x7684;&#x914D;&#x7F6E; .and() .apply(smsCodeAuthenticationSecurityConfig) // &#x8BB0;&#x4F4F;&#x6211;&#x7684;&#x914D;&#x7F6E; .and() .rememberMe() .tokenRepository(persistentTokenRepository()) .tokenValiditySeconds(3600) // &#x8BBE;&#x7F6E;&#x8BB0;&#x4F4F;&#x6211;&#x7684;&#x8FC7;&#x671F;&#x65F6;&#x95F4; .userDetailsService(userDetailsService) .and() // &#x8BF7;&#x6C42;&#x505A;&#x6388;&#x6743;&#x914D;&#x7F6E; .authorizeRequests() // &#x4EE5;&#x4E0B;&#x8BF7;&#x6C42;&#x8DEF;&#x5F84;&#x4E0D;&#x9700;&#x8981;&#x8BA4;&#x8BC1; .antMatchers(&quot;/authentication/require&quot;, &quot;/authentication/mobile&quot;, &quot;/login&quot;, &quot;/code/*&quot;, &quot;/&quot;) .permitAll() .anyRequest() // &#x4EFB;&#x4F55;&#x8BF7;&#x6C42; .authenticated() // &#x90FD;&#x9700;&#x8981;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1; // &#x6682;&#x65F6;&#x5C06;&#x9632;&#x62A4;&#x8DE8;&#x7AD9;&#x8BF7;&#x6C42;&#x4F2A;&#x9020;&#x7684;&#x529F;&#x80FD;&#x7F6E;&#x4E3A;&#x4E0D;&#x53EF;&#x7528; .and() .csrf().disable(); } /** * &#x914D;&#x7F6E;TokenRepository * @return */ @Bean public PersistentTokenRepository persistentTokenRepository() { JdbcTokenRepositoryImpl jdbcTokenRepository = new JdbcTokenRepositoryImpl(); jdbcTokenRepository.setDataSource(dataSource); // &#x521D;&#x59CB;&#x5316;&#x8BB0;&#x4F4F;&#x6211;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8868;&#xFF0C;&#x5EFA;&#x8BAE;&#x901A;&#x8FC7;&#x770B;&#x6E90;&#x7801;&#x76F4;&#x63A5;&#x521B;&#x5EFA;&#x51FA;&#x6765; // jdbcTokenRepository.setCreateTableOnStartup(true); return jdbcTokenRepository; }} &#x8FD9;&#x91CC;&#x7684;&#x914D;&#x7F6E;&#x4E2D;&#x6709;&#x4E9B;&#x4EE3;&#x7801;&#x51FA;&#x73B0;&#x4E86;&#x5197;&#x4F59;&#x914D;&#x7F6E;&#xFF0C;&#x53EF;&#x4EE5;&#x5168;&#x90E8;&#x5C01;&#x88C5;&#x6210;&#x62BD;&#x8C61;&#x6A21;&#x677F;&#xFF0C;&#x5B8C;&#x6210;&#x4E00;&#x4E9B;&#x57FA;&#x7840;&#x7684;&#x914D;&#x7F6E;&#x3002; &#x53C2;&#x8003;&#x6E90;&#x7801;&#xFF1A;https://github.com/imooc-java/security document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Spring Security</category>
      </categories>
      <tags>
        <tag>Spring Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot + Spring Security 学习笔记（四）记住我功能实现]]></title>
    <url>%2F2019%2F04%2F12%2F029%2F</url>
    <content type="text"><![CDATA[&#x8BB0;&#x4F4F;&#x6211;&#x529F;&#x80FD;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;&#x5F53;&#x7528;&#x6237;&#x767B;&#x5F55;&#x53D1;&#x8D77;&#x8BA4;&#x8BC1;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x4F1A;&#x901A;&#x8FC7;UsernamePasswordAuthenticationFilter&#x8FDB;&#x884C;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#xFF0C;&#x8BA4;&#x8BC1;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;SpringSecurity &#x8C03;&#x7528;&#x524D;&#x671F;&#x914D;&#x7F6E;&#x597D;&#x7684;&#x8BB0;&#x4F4F;&#x6211;&#x529F;&#x80FD;&#xFF0C;&#x5B9E;&#x9645;&#x662F;&#x8C03;&#x7528;&#x4E86;RememberMeService&#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x4F1A;&#x5C06;&#x7528;&#x6237;&#x7684;&#x4FE1;&#x606F;&#x751F;&#x6210;Token&#x5E76;&#x5C06;&#x5B83;&#x5199;&#x5165; response &#x7684;Cookie&#x4E2D;&#xFF0C;&#x5728;&#x5199;&#x5165;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x5185;&#x90E8;&#x7684;TokenRepositoryTokenRepository&#x4F1A;&#x5C06;&#x8FD9;&#x4EFD;Token&#x518D;&#x5B58;&#x5165;&#x6570;&#x636E;&#x5E93;&#x4E00;&#x4EFD;&#x3002; &#x5F53;&#x7528;&#x6237;&#x518D;&#x6B21;&#x8BBF;&#x95EE;&#x670D;&#x52A1;&#x5668;&#x8D44;&#x6E90;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9996;&#x5148;&#x4F1A;&#x7ECF;&#x8FC7;RememberMeAuthenticationFiler&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x91CC;&#x9762;&#x4F1A;&#x8BFB;&#x53D6;&#x5F53;&#x524D;&#x8BF7;&#x6C42;&#x4E2D;&#x643A;&#x5E26;&#x7684; Cookie&#xFF0C;&#x8FD9;&#x91CC;&#x5B58;&#x7740;&#x4E0A;&#x6B21;&#x670D;&#x52A1;&#x5668;&#x4FDD;&#x5B58; &#x7684;Token&#xFF0C;&#x7136;&#x540E;&#x53BB;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x67E5;&#x627E;&#x662F;&#x5426;&#x6709;&#x76F8;&#x5E94;&#x7684; Token&#xFF0C;&#x5982;&#x679C;&#x6709;&#xFF0C;&#x5219;&#x518D;&#x901A;&#x8FC7;UserDetailsService&#x83B7;&#x53D6;&#x7528;&#x6237;&#x7684;&#x4FE1;&#x606F;&#x3002; &#x8BB0;&#x4F4F;&#x6211;&#x529F;&#x80FD;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x4ECE;&#x56FE;&#x4E2D;&#x53EF;&#x4EE5;&#x5F97;&#x77E5;&#x8BB0;&#x4F4F;&#x6211;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x5728;&#x8FC7;&#x6EE4;&#x94FE;&#x7684;&#x4E2D;&#x90E8;&#xFF0C;&#x6CE8;&#x610F;&#x662F;&#x5728;UsernamePasswordAuthenticationFilter&#x4E4B;&#x540E;&#x3002; &#x524D;&#x7AEF;&#x9875;&#x9762;checkbox&#x8BBE;&#x7F6E;&#x5728; html &#x4E2D;&#x589E;&#x52A0;&#x8BB0;&#x4F4F;&#x6211;&#x590D;&#x9009;&#x6846;checkbox&#x63A7;&#x4EF6;&#xFF0C;&#x6CE8;&#x610F;&#x5176;&#x4E2D;&#x590D;&#x9009;&#x6846;&#x7684;name &#x4E00;&#x5B9A;&#x5FC5;&#x987B;&#x4E3A;remember-me 1&lt;input type=&quot;checkbox&quot; name=&quot;remember-me&quot; value=&quot;true&quot;/&gt; &#x914D;&#x7F6E;cookie&#x5B58;&#x50A8;&#x6570;&#x636E;&#x5E93;&#x6E90;&#x672C;&#x4F8B;&#x4E2D;&#x4F7F;&#x7528;&#x4E86; springboot &#x7BA1;&#x7406;&#x7684;&#x6570;&#x636E;&#x5E93;&#x6E90;&#xFF0C;&#x6240;&#x4EE5;&#x6CE8;&#x610F;&#x8981;&#x914D;&#x7F6E;spring-boot-starter-jdbc&#x7684;&#x4F9D;&#x8D56;&#xFF1A; 1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;&lt;/dependency&gt; &#x5982;&#x679C;&#x4E0D;&#x914D;&#x7F6E;&#x4F1A;&#x62A5;&#x7F16;&#x8BD1;&#x5F02;&#x5E38;&#xFF1A; 1The type org.springframework.jdbc.core.support.JdbcDaoSupport cannot be resolved. It is indirectly referenced from required .class files &#x8BB0;&#x4F4F;&#x6211;&#x7684;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536@Configuration@EnableWebSecuritypublic class WebSecurityConfig extends WebSecurityConfigurerAdapter { @Autowired private DataSource dataSource; @Override protected void configure(HttpSecurity http) throws Exception { // &#x5C06;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x653E;&#x7F6E;&#x5728; UsernamePasswordAuthenticationFilter &#x4E4B;&#x524D; http.addFilterBefore(validateCodeFilter, UsernamePasswordAuthenticationFilter.class) .formLogin() .loginPage(&quot;/login&quot;) // &#x8BBE;&#x7F6E;&#x767B;&#x5F55;&#x9875;&#x9762; .loginProcessingUrl(&quot;/user/login&quot;) // &#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x767B;&#x5F55;&#x63A5;&#x53E3; .successHandler(myAuthenctiationSuccessHandler) .failureHandler(myAuthenctiationFailureHandler) .defaultSuccessUrl(&quot;/home&quot;).permitAll() // &#x767B;&#x5F55;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x9ED8;&#x8BA4;&#x8DF3;&#x8F6C;&#x7684;&#x9875;&#x9762; .and().authorizeRequests() // &#x5B9A;&#x4E49;&#x54EA;&#x4E9B;URL&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4;&#x3001;&#x54EA;&#x4E9B;&#x4E0D;&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4; .antMatchers(&quot;/&quot;, &quot;/index&quot;, &quot;/user/login&quot;, &quot;/code/image&quot;).permitAll() // &#x8BBE;&#x7F6E;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x767B;&#x5F55;&#x9875;&#x9762; .anyRequest().authenticated() // &#x4EFB;&#x4F55;&#x8BF7;&#x6C42;,&#x767B;&#x5F55;&#x540E;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE; .and().csrf().disable() // &#x5173;&#x95ED;csrf&#x9632;&#x62A4; .rememberMe() // &#x8BB0;&#x4F4F;&#x6211;&#x914D;&#x7F6E; .tokenRepository(persistentTokenRepository()) // &#x914D;&#x7F6E;&#x6570;&#x636E;&#x5E93;&#x6E90; .tokenValiditySeconds(3600) .userDetailsService(userDetailsService); } @Bean public PersistentTokenRepository persistentTokenRepository() { JdbcTokenRepositoryImpl persistentTokenRepository = new JdbcTokenRepositoryImpl(); // &#x5C06; DataSource &#x8BBE;&#x7F6E;&#x5230; PersistentTokenRepository persistentTokenRepository.setDataSource(dataSource); // &#x7B2C;&#x4E00;&#x6B21;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x81EA;&#x52A8;&#x5EFA;&#x8868;&#xFF08;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x8FD9;&#x53E5;&#x8BDD;&#xFF0C;&#x81EA;&#x5DF1;&#x624B;&#x52A8;&#x5EFA;&#x8868;&#xFF0C;&#x6E90;&#x7801;&#x4E2D;&#x6709;&#x8BED;&#x53E5;&#x7684;&#xFF09; // persistentTokenRepository.setCreateTableOnStartup(true); return persistentTokenRepository; }} &#x6CE8;&#x610F;&#xFF1A;&#x5728;&#x6570;&#x636E;&#x5E93;&#x6E90;&#x914D;&#x7F6E;&#x4E4B;&#x524D;&#xFF0C;&#x5EFA;&#x8BAE;&#x624B;&#x52A8;&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x65B0;&#x589E;&#x4E00;&#x5F20;&#x4FDD;&#x5B58;&#x7684;cookie&#x8868;&#xFF0C;&#x5176;&#x6570;&#x636E;&#x5E93;&#x811A;&#x672C;&#x5728;JdbcTokenRepositoryImpl&#x7684;&#x9759;&#x6001;&#x5C5E;&#x6027;&#x4E2D;&#x914D;&#x7F6E;&#x4E86;&#xFF1A; 123456public class JdbcTokenRepositoryImpl extends JdbcDaoSupport implements PersistentTokenRepository { /** Default SQL for creating the database table to store the tokens */ public static final String CREATE_TABLE_SQL = &quot;create table persistent_logins (username varchar(64) not null, series varchar(64) primary key, &quot; + &quot;token varchar(64) not null, last_used timestamp not null)&quot;;} &#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4E8B;&#x5148;&#x6267;&#x884C;&#x4EE5;&#x4E0B;sql &#x811A;&#x672C;&#x521B;&#x5EFA;&#x8868;&#xFF1A; 1create table persistent_logins (username varchar(64) not null, series varchar(64) primary key, token varchar(64) not null, last_used timestamp not null); &#x5F53;&#x7136;&#xFF0C;JdbcTokenRepositoryImpl&#x81EA;&#x8EAB;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;setCreateTableOnStartup()&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x5F00;&#x542F;&#x81EA;&#x52A8;&#x5EFA;&#x8868;&#x64CD;&#x4F5C;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x3002; &#x5F53;&#x6210;&#x529F;&#x767B;&#x5F55;&#x4E4B;&#x540E;&#xFF0C;RememberMeService&#x4F1A;&#x5C06;&#x6210;&#x529F;&#x767B;&#x5F55;&#x8BF7;&#x6C42;&#x7684;cookie&#x5B58;&#x50A8;&#x5230;&#x914D;&#x7F6E;&#x7684;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#xFF1A; &#x6E90;&#x7801;&#x5206;&#x6790;&#x9996;&#x6B21;&#x8BF7;&#x6C42;&#x9996;&#x5148;&#x8FDB;&#x5165;&#x5230;AbstractAuthenticationProcessingFilter&#x8FC7;&#x6EE4;&#x5668;&#x4E2D;&#x7684;doFilter()&#x65B9;&#x6CD5;&#xFF1A; 1234567891011121314151617public abstract class AbstractAuthenticationProcessingFilter { public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException { &#x2026;&#x2026; try { authResult = attemptAuthentication(request, response); &#x2026;&#x2026; } catch (InternalAuthenticationServiceException failed) { &#x2026;&#x2026; } successfulAuthentication(request, response, chain, authResult); }} &#x5176;&#x4E2D;&#x5F53;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x8FDB;&#x5165;successfulAuthentication()&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x88AB;&#x4FDD;&#x5B58;&#x5728;&#x4E86;SecurityContextHolder&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x4E2D;&#x5C31;&#x8C03;&#x7528;&#x4E86;rememberMeServices.loginSuccess()&#xFF1A; 12345678910111213141516171819protected void successfulAuthentication(HttpServletRequest request, HttpServletResponse response, FilterChain chain, Authentication authResult) throws IOException, ServletException { &#x2026;&#x2026; SecurityContextHolder.getContext().setAuthentication(authResult); // &#x8C03;&#x7528;&#x8BB0;&#x4F4F;&#x6211;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x7684;&#x767B;&#x5F55;&#x6210;&#x529F;&#x65B9;&#x6CD5; rememberMeServices.loginSuccess(request, response, authResult); // Fire event if (this.eventPublisher != null) { eventPublisher.publishEvent(new InteractiveAuthenticationSuccessEvent( authResult, this.getClass())); } successHandler.onAuthenticationSuccess(request, response, authResult);} &#x5728;&#x8FD9;&#x4E2A;RememberMeServices&#x6709;&#x4E2A;&#x62BD;&#x8C61;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x5728;&#x62BD;&#x8C61;&#x5B9E;&#x73B0;&#x7C7B;loginSuccess()&#x65B9;&#x6CD5;&#x4E2D;&#x8FDB;&#x884C;&#x4E86;&#x8BB0;&#x4F4F;&#x6211;&#x529F;&#x80FD;&#x5224;&#x65AD;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x524D;&#x7AEF;&#x7684;&#x590D;&#x9009;&#x6846;&#x63A7;&#x4EF6;&#x7684; name &#x5FC5;&#x987B;&#x4E3A;remember-me&#xFF0C;&#x539F;&#x56E0;&#x5C31;&#x5728;&#x6B64;&#xFF1A; 12345678910111213141516171819public abstract class AbstractRememberMeServices implements RememberMeServices, InitializingBean, LogoutHandler { public static final String DEFAULT_PARAMETER = &quot;remember-me&quot;; private String parameter = DEFAULT_PARAMETER; @Override public final void loginSuccess(HttpServletRequest request, HttpServletResponse response, Authentication successfulAuthentication) { if (!rememberMeRequested(request, parameter)) { logger.debug(&quot;Remember-me login not requested.&quot;); return; } onLoginSuccess(request, response, successfulAuthentication); }} &#x5F53;&#x8BC6;&#x522B;&#x5230;&#x8BB0;&#x4F4F;&#x6211;&#x529F;&#x80FD;&#x5F00;&#x542F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x8FDB;&#x5165;onLoginSuccess()&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x5177;&#x4F53;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#x5728;PersistentTokenBasedRememberMeServices&#x7C7B;&#x4E2D;&#xFF1A; 123456789101112131415161718192021public class PersistentTokenBasedRememberMeServices extends AbstractRememberMeServices { protected void onLoginSuccess(HttpServletRequest request, HttpServletResponse response, Authentication successfulAuthentication) { String username = successfulAuthentication.getName(); logger.debug(&quot;Creating new persistent login for user &quot; + username); PersistentRememberMeToken persistentToken = new PersistentRememberMeToken( username, generateSeriesData(), generateTokenData(), new Date()); try { // &#x4FDD;&#x5B58;cookie&#x5230;&#x6570;&#x636E;&#x5E93; tokenRepository.createNewToken(persistentToken); // &#x5C06;cookie&#x56DE;&#x5199;&#x4E00;&#x4EFD;&#x5230;&#x54CD;&#x5E94;&#x4E2D; addCookie(persistentToken, request, response); } catch (Exception e) { logger.error(&quot;Failed to save persistent token &quot;, e); } }} &#x4E0A;&#x9762;&#x7684;tokenRepository.createNewToken()&#x548C;addCookie()&#x5C31;&#x5C06; cookie &#x4FDD;&#x5B58;&#x5230;&#x6570;&#x636E;&#x5E93;&#x5E76;&#x56DE;&#x663E;&#x5230;&#x54CD;&#x5E94;&#x4E2D;&#x3002; &#x7B2C;&#x4E8C;&#x6B21;&#x8BF7;&#x6C42;&#x5F53;&#x7B2C;&#x4E8C;&#x6B21;&#x8BF7;&#x6C42;&#x4F20;&#x5230;&#x670D;&#x52A1;&#x5668;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BF7;&#x6C42;&#x4F1A;&#x88AB;RememberMeAuthenticationFilter&#x8FC7;&#x6EE4;&#x5668;&#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#xFF1A;&#x8FC7;&#x6EE4;&#x5668;&#x9996;&#x5148;&#x5224;&#x5B9A;&#x4E4B;&#x524D;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x90FD;&#x6CA1;&#x6709;&#x8BA4;&#x8BC1;&#x901A;&#x8FC7;&#x5F53;&#x524D;&#x7528;&#x6237;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;SecurityContextHolder&#x4E2D;&#x6CA1;&#x6709;&#x5DF2;&#x7ECF;&#x8BA4;&#x8BC1;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x8C03;&#x7528;rememberMeServices.autoLogin()&#x7684;&#x81EA;&#x52A8;&#x767B;&#x5F55;&#x63A5;&#x53E3;&#x62FF;&#x5230;&#x5DF2;&#x901A;&#x8FC7;&#x8BA4;&#x8BC1;&#x7684;rememberMeAuth&#x8FDB;&#x884C;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x767B;&#x5F55;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243public class RememberMeAuthenticationFilter extends GenericFilterBean implements ApplicationEventPublisherAware { public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException { HttpServletRequest request = (HttpServletRequest) req; HttpServletResponse response = (HttpServletResponse) res; // SecurityContextHolder &#x4E0D;&#x5B58;&#x5728;&#x5DF2;&#x7ECF;&#x8BA4;&#x8BC1;&#x7684; authentication&#xFF0C;&#x8868;&#x793A;&#x524D;&#x9762;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x6CA1;&#x6709;&#x505A;&#x8FC7;&#x4EFB;&#x4F55;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1; if (SecurityContextHolder.getContext().getAuthentication() == null) { // &#x8C03;&#x7528;&#x81EA;&#x52A8;&#x767B;&#x5F55;&#x63A5;&#x53E3; Authentication rememberMeAuth = rememberMeServices.autoLogin(request, response); if (rememberMeAuth != null) { // Attempt authenticaton via AuthenticationManager try { rememberMeAuth = authenticationManager.authenticate(rememberMeAuth); // Store to SecurityContextHolder SecurityContextHolder.getContext().setAuthentication(rememberMeAuth); onSuccessfulAuthentication(request, response, rememberMeAuth); &#x2026;&#x2026; } catch (AuthenticationException authenticationException) { &#x2026;&#x2026; } } chain.doFilter(request, response); } else { if (logger.isDebugEnabled()) { logger.debug(&quot;SecurityContextHolder not populated with remember-me token, as it already contained: &apos;&quot; + SecurityContextHolder.getContext().getAuthentication() + &quot;&apos;&quot;); } chain.doFilter(request, response); } }} &#x8FD9;&#x4E2A;&#x81EA;&#x52A8;&#x767B;&#x5F55;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x53C8;&#x7531;&#x5176;&#x62BD;&#x8C61;&#x5B9E;&#x73B0;&#x7C7B;&#x8FDB;&#x884C;&#x5B9E;&#x73B0;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041public abstract class AbstractRememberMeServices implements RememberMeServices, InitializingBean, LogoutHandler { @Override public final Authentication autoLogin(HttpServletRequest request, HttpServletResponse response) { // &#x4ECE;&#x8BF7;&#x6C42;&#x4E2D;&#x83B7;&#x53D6;cookie String rememberMeCookie = extractRememberMeCookie(request); if (rememberMeCookie == null) { return null; } logger.debug(&quot;Remember-me cookie detected&quot;); if (rememberMeCookie.length() == 0) { logger.debug(&quot;Cookie was empty&quot;); cancelCookie(request, response); return null; } UserDetails user = null; try { // &#x89E3;&#x7801;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;cookie String[] cookieTokens = decodeCookie(rememberMeCookie); // &#x6839;&#x636E; cookie &#x627E;&#x5230;&#x7528;&#x6237;&#x8BA4;&#x8BC1; user = processAutoLoginCookie(cookieTokens, request, response); userDetailsChecker.check(user); logger.debug(&quot;Remember-me cookie accepted&quot;); return createSuccessfulAuthentication(request, user); } catch (CookieTheftException cte) { &#x2026;&#x2026; } cancelCookie(request, response); return null; }} processAutoLoginCookie()&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x8FD8;&#x662F;&#x7531;PersistentTokenBasedRememberMeServices&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x603B;&#x5F97;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x4E00;&#x987F;&#x5224;&#x5B9A;&#x5F53;&#x524D;&#x7684;cookieTokens&#x662F;&#x4E0D;&#x662F;&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x5B58;&#x5728;tokenRepository.getTokenForSeries(presentedSeries)&#xFF0C;&#x5E76;&#x5224;&#x65AD;&#x662F;&#x4E0D;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x6837;&#xFF0C;&#x5C31;&#x662F;&#x628A;&#x5F53;&#x524D;&#x8BF7;&#x6C42;&#x7684;&#x65B0; token &#x66F4;&#x65B0;&#x4FDD;&#x5B58;&#x5230;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6700;&#x540E;&#x901A;&#x8FC7;&#x5F53;&#x524D;&#x8BF7;&#x6C42;token&#x4E2D;&#x7684;&#x7528;&#x6237;&#x540D;&#x8C03;&#x7528;UserDetailsService.loadUserByUsername()&#x8FDB;&#x884C;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748public class PersistentTokenBasedRememberMeServices extends AbstractRememberMeServices { protected UserDetails processAutoLoginCookie(String[] cookieTokens, HttpServletRequest request, HttpServletResponse response) { if (cookieTokens.length != 2) { throw new InvalidCookieException(&quot;Cookie token did not contain &quot; + 2 + &quot; tokens, but contained &apos;&quot; + Arrays.asList(cookieTokens) + &quot;&apos;&quot;); } final String presentedSeries = cookieTokens[0]; final String presentedToken = cookieTokens[1]; // &#x4ECE;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x4E0A;&#x6B21;&#x4FDD;&#x5B58;&#x7684;token PersistentRememberMeToken token = tokenRepository.getTokenForSeries(presentedSeries); if (token == null) { // &#x67E5;&#x8BE2;&#x4E0D;&#x5230;&#x629B;&#x5F02;&#x5E38; throw new RememberMeAuthenticationException(&#x2026;&#x2026;); } // token &#x4E0D;&#x5339;&#x914D;&#x629B;&#x51FA;&#x5F02;&#x5E38; // We have a match for this user/series combination if (!presentedToken.equals(token.getTokenValue())) { // Token doesn&apos;t match series value. Delete all logins for this user and throw // an exception to warn them. tokenRepository.removeUserTokens(token.getUsername()); throw new CookieTheftException(&#x2026;&#x2026;); } // &#x8FC7;&#x671F;&#x5224;&#x65AD; if (token.getDate().getTime() + getTokenValiditySeconds() * 1000L &lt; System.currentTimeMillis()) { throw new RememberMeAuthenticationException(&quot;Remember-me login has expired&quot;); } PersistentRememberMeToken newToken = new PersistentRememberMeToken(token.getUsername(), token.getSeries(), generateTokenData(), new Date()); try { tokenRepository.updateToken(newToken.getSeries(), newToken.getTokenValue(), newToken.getDate()); addCookie(newToken, request, response); } catch (Exception e) { &#x2026;&#x2026; } return getUserDetailsService().loadUserByUsername(token.getUsername()); }} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Spring Security</category>
      </categories>
      <tags>
        <tag>Spring Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot + Spring Security 学习笔记（三）实现图片验证码认证]]></title>
    <url>%2F2019%2F04%2F12%2F028%2F</url>
    <content type="text"><![CDATA[&#x6574;&#x4F53;&#x5B9E;&#x73B0;&#x903B;&#x8F91; &#x524D;&#x7AEF;&#x5728;&#x767B;&#x5F55;&#x9875;&#x9762;&#x65F6;&#xFF0C;&#x81EA;&#x52A8;&#x4ECE;&#x540E;&#x53F0;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x56FE;&#x7247; &#x670D;&#x52A1;&#x5668;&#x63A5;&#x6536;&#x83B7;&#x53D6;&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x8BF7;&#x6C42;&#xFF0C;&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x548C;&#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x56FE;&#x7247;&#x54CD;&#x5E94;&#x56DE;&#x524D;&#x7AEF;&#xFF0C;&#x9A8C;&#x8BC1;&#x7801;&#x4FDD;&#x5B58;&#x4E00;&#x4EFD;&#x5230;&#x670D;&#x52A1;&#x5668;&#x7684; session &#x4E2D; &#x524D;&#x7AEF;&#x7528;&#x6237;&#x767B;&#x5F55;&#x65F6;&#x643A;&#x5E26;&#x5F53;&#x524D;&#x9A8C;&#x8BC1;&#x7801; &#x670D;&#x52A1;&#x5668;&#x6821;&#x9A8C;&#x9A8C;&#x8BC1;&#x7801;&#x662F;&#x5426;&#x5408;&#x6CD5;&#xFF08;&#x9A8C;&#x8BC1;&#x7801;&#x5B58;&#x5728;&#x5E76;&#x672A;&#x8FC7;&#x671F;&#xFF09;&#xFF0C;&#x7EE7;&#x7EED;&#x540E;&#x7EED;&#x7684;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x6821;&#x9A8C;&#x903B;&#x8F91; &#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x65F6;&#x5E8F;&#x56FE;&#x6765;&#x8868;&#x8FF0;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x56FE;&#x4E2D;&#x7EC6;&#x5316;&#x4E86;&#x4E00;&#x4E0B;&#x5404;&#x4E2A;&#x63A7;&#x5236;&#x5668;&#x548C;&#x8FC7;&#x6EE4;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x529F;&#x80FD;&#x804C;&#x8D23;&#xFF0C;&#x8FD8;&#x4E0D;&#x662F;&#x5F88;&#x6B63;&#x89C4;&#xFF0C;&#x53EA;&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x8868;&#x8FBE;&#x4E0A;&#x8FF0;&#x7684;&#x6D41;&#x7A0B;&#x63CF;&#x8FF0;&#xFF0C;&#x6240;&#x4EE5;&#x8BFB;&#x8005;&#x4EEC;&#x5C06;&#x5C31;&#x4E00;&#x4E0B;&#xFF1A; &#x65F6;&#x5E8F;&#x56FE; plantUML &#x4EE3;&#x7801; plantUML &#x7684;&#x4F7F;&#x7528;&#x6559;&#x7A0B;&#x8BF7;&#x79FB;&#x6B65;&#x81F3;&#x4E4B;&#x524D;&#x53D1;&#x5E03;&#x8FC7;&#x7684;&#x6587;&#x7AE0;&#xFF1A;PlantUML &#x8BED;&#x6CD5;&#x4E4B;&#x65F6;&#x5E8F;&#x56FE; 123456789101112131415161718192021222324252627282930313233@startumlhide footboxskinparam sequenceMessageAlign centerskinparam sequenceArrowFontSize 11skinparam noteFontSize 11skinparam monochrome trueskinparam lifelinestrategy solid autonumber &quot;&lt;b&gt;[000]&quot;participant browser as uiparticipant imageCodeController as icparticipant UserController as ucdatabase sessionStorage as sessionparticipant CodeAuthenticationFilter as cfparticipant &quot;UsernamePasswordAuthenticationFilter&quot; as ufui -&gt; ic: &#x767B;&#x5F55;&#x8BF7;&#x6C42;ic -&gt; ic: &#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;ic -&gt; session: &#x4FDD;&#x5B58;&#x9A8C;&#x8BC1;&#x7801;&#x4FE1;&#x606F;ic --&gt; ui: &#x9A8C;&#x8BC1;&#x7801;&#x56FE;&#x7247;...autonumber &quot;&lt;b&gt;[000]&quot;ui -&gt; cf: &#x5E10;&#x53F7;&#x767B;&#x5F55;cf -&gt; session: &#x83B7;&#x53D6;&#x9A8C;&#x8BC1;&#x7801;session --&gt; cf: &#x9A8C;&#x8BC1;&#x7801;cf -&gt; cf: &#x6821;&#x9A8C;&#x8BF7;&#x6C42;&#x9A8C;&#x8BC1;&#x7801;&#x5408;&#x6CD5;&#x6027;cf -&gt; uf: &#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x7684;&#x540E;&#x7EED;&#x64CD;&#x4F5C;uf --&gt; uc: &#x8FD4;&#x56DE;&#x8BA4;&#x8BC1;&#x7ED3;&#x679C;uc --&gt; ui: &#x7528;&#x6237;&#x767B;&#x5F55;&#x6210;&#x529F;@enduml &#x5C06;&#x4E0A;&#x8FF0;&#x7684;&#x903B;&#x8F91;&#x8FDB;&#x884C;&#x4EFB;&#x52A1;&#x62C6;&#x5206;&#xFF1A;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x548C;&#x56FE;&#x7247;&#x751F;&#x6210;&#xFF0C;&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x8BF7;&#x6C42;Controller&#xFF0C;session&#x5B58;&#x50A8;&#x5668;&#x5C31;&#x4E34;&#x65F6;&#x4F7F;&#x7528;spring-social-web&#x5305;&#x4E2D;&#x7684;SessionStrategy&#x6765;&#x5B58;&#x50A8;&#xFF0C;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x914D;&#x7F6E;&#x8FC7;&#x6EE4;&#x5668;&#x5230;spring scuerity &#x8FC7;&#x6EE4;&#x5668;&#x4E2D;&#x7684;&#x7528;&#x6237;&#x5BC6;&#x7801;&#x9A8C;&#x8BC1;&#x8FC7;&#x6EE4;&#x5668;&#x4E4B;&#x524D;&#x3002; &#x524D;&#x7AEF;&#x63A7;&#x5236;&#x5668;+&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x670D;&#x52A1;&#x5668; session &#x5BB9;&#x5668;&#x91C7;&#x7528;&#x5C0F;&#x6B65;&#x5FEB;&#x8D70;&#x7684;&#x5F00;&#x53D1;&#x6A21;&#x5F0F;&#xFF0C;&#x524D;&#x7AEF;&#x63A7;&#x5236;&#x5668;&#x548C;&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x5199;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x540E;&#x671F;&#x518D;&#x8FDB;&#x884C;&#x4EE3;&#x7801;&#x91CD;&#x6784;&#xFF0C; &#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x5F15;&#x7528;&#x4E86;spring-social-web&#x4F9D;&#x8D56;&#xFF1A; 12345&lt;dependency&gt; &lt;groupId&gt;org.springframework.social&lt;/groupId&gt; &lt;artifactId&gt;spring-social-web&lt;/artifactId&gt; &lt;version&gt;1.1.4.RELEASE&lt;/version&gt;&lt;/dependency&gt; &#x8FD9;&#x4E2A;&#x5305;&#x91CC;&#x9762;&#x6709;&#x4E2A;&#x5F88;&#x5C0F;&#x5DE7;&#x7684;session&#x7BA1;&#x7406;&#x5DE5;&#x5177;&#xFF1A;SessionStrategy &#x8003;&#x8651;&#x5230;&#x8FD9;&#x4E2A; session &#x5728;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x4E2D;&#x8FD8;&#x5F97;&#x4F7F;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#xFF0C;&#x76F4;&#x63A5;&#x6CE8;&#x5165;&#x5230;&#x4E86;spring&#x4E2D;&#xFF1A; 1234567891011121314import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.social.connect.web.HttpSessionSessionStrategy;import org.springframework.social.connect.web.SessionStrategy;@Configurationpublic class AppConfig { @Bean(&quot;sessionStrategy&quot;) public SessionStrategy registBean() { SessionStrategy sessionStrategy = new HttpSessionSessionStrategy(); return sessionStrategy; }} &#x8FD9;&#x6837;&#xFF0C;&#x5728; Controller &#x5C42;&#x76F4;&#x63A5;&#x901A;&#x8FC7;@Autowired&#x5F15;&#x7528;&#x5373;&#x53EF;&#x3002; &#x56FE;&#x7247;&#x9A8C;&#x8BC1;&#x7801;&#x5BB9;&#x5668;&#x56FE;&#x7247;&#x9A8C;&#x8BC1;&#x7801;&#x5BF9;&#x8C61;&#x9700;&#x8981;&#x81F3;&#x5C11;&#x4E09;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A;&#x56FE;&#x7247;&#xFF0C;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#x3002; &#x540E;&#x671F;&#x53EF;&#x80FD;&#x8FD8;&#x6709;&#x5176;&#x4ED6;&#x7684;&#x9A8C;&#x8BC1;&#x5F62;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x4E2D;&#x516C;&#x5171;&#x7684;&#x90E8;&#x5206;&#xFF1A;&#x9A8C;&#x8BC1;&#x7801;&#x548C;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#x662F;&#x53EF;&#x4EE5;&#x62BD;&#x8C61;&#x51FA;&#x6765;&#xFF0C;&#x8FD9;&#x91CC;&#x4E3A;&#x4E86;&#x6F14;&#x793A;&#x4E0D;&#x505A;&#x91CD;&#x6784;&#x3002; 123456789101112131415161718192021222324import java.awt.image.BufferedImage;import java.time.LocalDateTime;import lombok.AllArgsConstructor;import lombok.Data;@Data@AllArgsConstructorpublic class ImageCode { private BufferedImage image; private String code; private LocalDateTime expireTime; public ImageCode(BufferedImage image, String code, int expireIn) { this.code = code; this.image = image; this.expireTime = LocalDateTime.now().plusSeconds(expireIn); } public boolean isExpried() { return LocalDateTime.now().isAfter(getExpireTime()); }} &#x516C;&#x5171;&#x5E38;&#x91CF;&#x5728;&#x56FE;&#x7247;&#x751F;&#x6210;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x968F;&#x673A;&#x968F;&#x673A;&#x6570;&#x957F;&#x5EA6;&#x548C;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#xFF0C;&#x90FD;&#x8BBE;&#x8BA1;&#x5728;&#x4E86;&#x9759;&#x6001;&#x5E38;&#x91CF;&#x7C7B;&#x4E2D;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x505A;&#x6210;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x9A8C;&#x8BC1;&#x7801;&#x7684; session &#x7684;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#x4E5F;&#x505A;&#x6210;&#x4E86;&#x516C;&#x5171;&#x7684;&#xFF0C;&#x4EE5;&#x4FBF;&#x5728;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x4E2D;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#x65F6;&#x4F7F;&#x7528;&#xFF1A; 123456789101112131415public class MyConstants { public static final String SESSION_KEY = &quot;SESSION_KEY_IMAGE_CODE&quot;; // &#x56FE;&#x7247;&#x5BBD;&#x5EA6; public static final int WIDTH = 90; // &#x56FE;&#x7247;&#x9AD8;&#x5EA6; public static final int HEIGHT = 20; // &#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x4F4D;&#x6570; public static final int RANDOM_SIZE = 4; // &#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x671F;&#x79D2;&#x6570; public static final int EXPIRE_SECOND = 30;} &#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#x8BF7;&#x6C42;Controller&#x6E90;&#x7801;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899import static org.woodwhale.king.commons.MyConstants.EXPIRE_SECOND;import static org.woodwhale.king.commons.MyConstants.HEIGHT;import static org.woodwhale.king.commons.MyConstants.RANDOM_SIZE;import static org.woodwhale.king.commons.MyConstants.SESSION_KEY;import static org.woodwhale.king.commons.MyConstants.WIDTH;import java.awt.Color;import java.awt.Font;import java.awt.Graphics;import java.awt.image.BufferedImage;import java.io.IOException;import java.util.Random;import javax.imageio.ImageIO;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.social.connect.web.SessionStrategy;import org.springframework.web.bind.ServletRequestUtils;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.context.request.ServletWebRequest;import org.woodwhale.king.model.ImageCode;@RestControllerpublic class ValidateCodeController { @Autowired private SessionStrategy sessionStrategy; @GetMapping(&quot;/code/image&quot;) public void createCode(HttpServletRequest request, HttpServletResponse response) throws IOException { ImageCode imageCode = generate(new ServletWebRequest(request)); sessionStrategy.setAttribute(new ServletWebRequest(request), SESSION_KEY, imageCode); ImageIO.write(imageCode.getImage(), &quot;JPEG&quot;, response.getOutputStream()); } /** * &#x751F;&#x6210;&#x56FE;&#x5F62;&#x9A8C;&#x8BC1;&#x7801; * @param request * @return */ private ImageCode generate(ServletWebRequest request) { int width = ServletRequestUtils.getIntParameter(request.getRequest(), &quot;width&quot;, WIDTH); int height = ServletRequestUtils.getIntParameter(request.getRequest(), &quot;height&quot;, HEIGHT); BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB); Graphics g = image.getGraphics(); Random random = new Random(); g.setColor(getRandColor(200, 250)); g.fillRect(0, 0, width, height); g.setFont(new Font(&quot;Times New Roman&quot;, Font.ITALIC, 20)); g.setColor(getRandColor(160, 200)); for (int i = 0; i &lt; 155; i++) { int x = random.nextInt(width); int y = random.nextInt(height); int xl = random.nextInt(12); int yl = random.nextInt(12); g.drawLine(x, y, x + xl, y + yl); } String sRand = &quot;&quot;; int length = ServletRequestUtils.getIntParameter(request.getRequest(), &quot;length&quot;, RANDOM_SIZE); for (int i = 0; i &lt; length; i++) { String rand = String.valueOf(random.nextInt(10)); sRand += rand; g.setColor(new Color(20 + random.nextInt(110), 20 + random.nextInt(110), 20 + random.nextInt(110))); g.drawString(rand, 13 * i + 6, 16); } g.dispose(); return new ImageCode(image, sRand, EXPIRE_SECOND); } /** * &#x751F;&#x6210;&#x968F;&#x673A;&#x80CC;&#x666F;&#x6761;&#x7EB9; * * @param fc * @param bc * @return */ private Color getRandColor(int fc, int bc) { Random random = new Random(); if (fc &gt; 255) { fc = 255; } if (bc &gt; 255) { bc = 255; } int r = fc + random.nextInt(bc - fc); int g = fc + random.nextInt(bc - fc); int b = fc + random.nextInt(bc - fc); return new Color(r, g, b); }} &#x4E3A;&#x4E86;&#x63D0;&#x5347;&#x4EE3;&#x7801;&#x7684;&#x53EF;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x968F;&#x673A;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x751F;&#x6210;&#x65B9;&#x6CD5;generate()&#x7684;&#x65B9;&#x6CD5;&#x6700;&#x597D;&#x662F;&#x62BD;&#x6210;&#x63A5;&#x53E3;&#xFF0C;&#x540E;&#x671F;&#x53EF;&#x80FD;&#x8FD8;&#x6709;&#x77ED;&#x4FE1;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x4E09;&#x65B9;&#x767B;&#x5F55;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x8FD9;&#x91CC;&#x4EC5;&#x505A;&#x6F14;&#x793A;&#x3002;&#x4E0A;&#x8FF0;&#x9A8C;&#x8BC1;&#x7801;&#x56FE;&#x7247;&#x6548;&#x679C;&#xFF1A; &#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;SpringSecurity&#x662F;&#x901A;&#x8FC7;&#x8FC7;&#x6EE4;&#x5668;&#x94FE;&#x6765;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x9A8C;&#x8BC1;&#x56FE;&#x5F62;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x5728;&#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;&#x4E4B;&#x524D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;UsernamePasswordAuthenticationFilter&#x4E4B;&#x524D;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#x3002; &#x90A3;&#x4E48;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x4E5F;&#x9700;&#x8981;&#x5B9E;&#x73B0;j2EE&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x63A5;&#x53E3;&#xFF0C;&#x540C;&#x65F6;&#x9A8C;&#x8BC1;&#x65B9;&#x6CD5;validate()&#x53EA;&#x505A;&#x4E86;&#x5185;&#x90E8;&#x65B9;&#x6CD5;&#x62BD;&#x8C61;&#xFF0C;&#x540E;&#x671F;&#x53EF;&#x4EE5;&#x505A;&#x6210;&#x53EF;&#x6269;&#x5C55;&#x7684;&#x62BD;&#x8C61;&#x63A5;&#x53E3;&#xFF0C;&#x8FD9;&#x4E2A;void&#x65B9;&#x6CD5;&#x53EF;&#x80FD;&#x4F1A;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x5F02;&#x5E38;&#x8BBE;&#x8BA1;&#x6210;&#x4E86;spring security&#x6846;&#x67B6;&#x7684;AuthenticationException&#x9AD8;&#x7EA7;&#x62BD;&#x8C61;&#x5F02;&#x5E38;&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x4E3A;&#x4E86;&#x5C31;&#x662F;&#x4FDD;&#x8BC1;&#x548C;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x7684;&#x5F02;&#x5E38;&#x540C;&#x6B65;&#xFF0C;&#x540E;&#x671F;&#x4F7F;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x5931;&#x8D25;&#x5904;&#x7406;&#x5668;&#x6293;&#x53D6;AuthenticationException&#x7C7B;&#x578B;&#x7684;&#x5F02;&#x5E38;&#x5373;&#x53EF;&#xFF1A; 1234567891011import org.springframework.security.core.AuthenticationException;public class MyException extends AuthenticationException { private static final long serialVersionUID = 1L; public MyException(String msg) { super(msg); }} &#x800C;&#x4E0A;&#x8FF0;&#x5F02;&#x5E38;&#x7684;&#x63A5;&#x6536;&#x8005;&#x5C31;&#x662F;springboot + spring security &#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x81EA;&#x5B9A;&#x4E49;&#x57FA;&#x672C;&#x4F7F;&#x7528;&#x53CA;&#x4E2A;&#x6027;&#x5316;&#x767B;&#x5F55;&#x914D;&#x7F6E;&#x91CC;&#x63D0;&#x5230;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x8BA4;&#x8BC1;&#x5931;&#x8D25;&#x5904;&#x7406;&#x5668;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990import static org.woodwhale.king.commons.MyConstants.SESSION_KEY;import java.io.IOException;import java.util.Objects;import javax.servlet.Filter;import javax.servlet.FilterChain;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.lang3.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.AuthenticationException;import org.springframework.security.web.authentication.AuthenticationFailureHandler;import org.springframework.social.connect.web.SessionStrategy;import org.springframework.stereotype.Component;import org.springframework.web.bind.ServletRequestBindingException;import org.springframework.web.bind.ServletRequestUtils;import org.springframework.web.context.request.ServletWebRequest;import org.springframework.web.filter.OncePerRequestFilter;import org.woodwhale.king.MyException;import org.woodwhale.king.model.ImageCode;import lombok.extern.slf4j.Slf4j;@Slf4j@Component(&quot;validateCodeFilter&quot;)public class ValidateCodeFilter extends OncePerRequestFilter implements Filter { /** * &#x9A8C;&#x8BC1;&#x7801;&#x6821;&#x9A8C;&#x5931;&#x8D25;&#x5904;&#x7406;&#x5668; */ @Autowired private AuthenticationFailureHandler authenticationFailureHandler; @Autowired private SessionStrategy sessionStrategy; @Override protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException { // &#x5FC5;&#x987B;&#x662F;&#x767B;&#x5F55;&#x7684;post&#x8BF7;&#x6C42;&#x624D;&#x80FD;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x76F4;&#x63A5;&#x653E;&#x884C; if(StringUtils.equals(&quot;/user/login&quot;, request.getRequestURI()) &amp;&amp; StringUtils.equalsIgnoreCase(request.getMethod(), &quot;post&quot;)) { log.info(&quot;request : {}&quot;, request.getRequestURI()); try { // 1. &#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x6821;&#x9A8C; validate(new ServletWebRequest(request)); } catch (AuthenticationException e) { // 2. &#x6355;&#x83B7;&#x6B65;&#x9AA4;1&#x4E2D;&#x6821;&#x9A8C;&#x51FA;&#x73B0;&#x5F02;&#x5E38;&#xFF0C;&#x4EA4;&#x7ED9;&#x5931;&#x8D25;&#x5904;&#x7406;&#x7C7B;&#x8FDB;&#x884C;&#x8FDB;&#x884C;&#x5904;&#x7406; authenticationFailureHandler.onAuthenticationFailure(request, response, e); return; } } // 3. &#x6821;&#x9A8C;&#x901A;&#x8FC7;&#xFF0C;&#x5C31;&#x653E;&#x884C; filterChain.doFilter(request, response); } private void validate(ServletWebRequest request) throws ServletRequestBindingException { // 1. &#x83B7;&#x53D6;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;&#x9A8C;&#x8BC1;&#x7801; String codeInRequest = ServletRequestUtils.getStringParameter(request.getRequest(), &quot;imageCode&quot;); // 2. &#x6821;&#x9A8C;&#x7A7A;&#x503C;&#x60C5;&#x51B5; if(StringUtils.isEmpty(codeInRequest)) { throw new MyException(&quot;&#x9A8C;&#x8BC1;&#x7801;&#x4E0D;&#x80FD;&#x4E3A;&#x7A7A;&quot;); } // 3. &#x83B7;&#x53D6;&#x670D;&#x52A1;&#x5668;session&#x6C60;&#x4E2D;&#x7684;&#x9A8C;&#x8BC1;&#x7801; ImageCode codeInSession = (ImageCode) sessionStrategy.getAttribute(request, SESSION_KEY); if(Objects.isNull(codeInSession)) { throw new MyException(&quot;&#x9A8C;&#x8BC1;&#x7801;&#x4E0D;&#x5B58;&#x5728;&quot;); } // 4. &#x6821;&#x9A8C;&#x670D;&#x52A1;&#x5668;session&#x6C60;&#x4E2D;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x662F;&#x5426;&#x8FC7;&#x671F; if(codeInSession.isExpried()) { sessionStrategy.removeAttribute(request, SESSION_KEY); throw new MyException(&quot;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x671F;&#x4E86;&quot;); } // 5. &#x8BF7;&#x6C42;&#x9A8C;&#x8BC1;&#x7801;&#x6821;&#x9A8C; if(!StringUtils.equals(codeInSession.getCode(), codeInRequest)) { throw new MyException(&quot;&#x9A8C;&#x8BC1;&#x7801;&#x4E0D;&#x5339;&#x914D;&quot;); } // 6. &#x79FB;&#x9664;&#x5DF2;&#x5B8C;&#x6210;&#x6821;&#x9A8C;&#x7684;&#x9A8C;&#x8BC1;&#x7801; sessionStrategy.removeAttribute(request, SESSION_KEY); } } &#x7EC6;&#x8282;&#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x7EE7;&#x627F;&#x4E86;OncePerRequestFilter&#xFF0C;&#x76EE;&#x7684;&#x5728;&#x4E8E;&#x63A5;&#x53D7; spring &#x7684;&#x7BA1;&#x7406;&#xFF0C;&#x5B83;&#x80FD;&#x4FDD;&#x8BC1;&#x6211;&#x4EEC;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x5728;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#x4E2D;&#x53EA;&#x88AB;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#x3002; &#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x914D;&#x7F6E;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x8FC7;&#x6EE4;&#x5E94;&#x8BE5;&#x5728;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x8FC7;&#x6EE4;&#x4E4B;&#x524D;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x914D;&#x7F6E;&#x5728;UsernamePasswordAuthenticationFilter&#x8FC7;&#x6EE4;&#x5668;&#x4E4B;&#x524D;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;ValidateCodeFilter&#x8FC7;&#x6EE4;&#x5668;&#x7531;&#x4E8E;&#x914D;&#x7F6E;&#x4E86;@Component(&quot;validateCodeFilter&quot;)&#xFF0C;&#x6240;&#x4EE5;&#x5DF2;&#x7ECF;&#x6CE8;&#x5165;&#x5230;&#x4E86; spring &#x4E2D;&#xFF0C;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#x4E2D;&#x76F4;&#x63A5;@Autowired&#x5F15;&#x7528;&#x5373;&#x53EF;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x56E0;&#x4E3A;&#x5728;&#x9A8C;&#x8BC1;&#x7801;Controller &#x4E2D;&#x8BBE;&#x7F6E;&#x4E86;&#x8FD9;&#x4E2A;/code/image&#x8BF7;&#x6C42;&#x8DEF;&#x5F84;&#xFF0C;&#x56E0;&#x6B64;&#x8981;&#x505A;&#x4E0D;&#x9700;&#x9A8C;&#x8BC1;&#x914D;&#x7F6E;&#xFF0C;&#x5C06;&#x5176;&#x52A0;&#x5165;&#x5230;.antMatchers()&#x4E2D;&#x3002; 123456789101112131415161718192021222324@Configuration@EnableWebSecuritypublic class WebSecurityConfig extends WebSecurityConfigurerAdapter { @Autowired private ValidateCodeFilter validateCodeFilter; @Override protected void configure(HttpSecurity http) throws Exception { // &#x5C06;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x9A8C;&#x8BC1;&#x7801;&#x8FC7;&#x6EE4;&#x5668;&#x653E;&#x7F6E;&#x5728; UsernamePasswordAuthenticationFilter &#x4E4B;&#x524D; http.addFilterBefore(validateCodeFilter, UsernamePasswordAuthenticationFilter.class) .formLogin() .loginPage(&quot;/login&quot;) // &#x8BBE;&#x7F6E;&#x767B;&#x5F55;&#x9875;&#x9762; .loginProcessingUrl(&quot;/user/login&quot;) // &#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x767B;&#x5F55;&#x63A5;&#x53E3; .successHandler(myAuthenctiationSuccessHandler) .failureHandler(myAuthenctiationFailureHandler) .defaultSuccessUrl(&quot;/home&quot;).permitAll() // &#x767B;&#x5F55;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x9ED8;&#x8BA4;&#x8DF3;&#x8F6C;&#x7684;&#x9875;&#x9762; .and().authorizeRequests() // &#x5B9A;&#x4E49;&#x54EA;&#x4E9B;URL&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4;&#x3001;&#x54EA;&#x4E9B;&#x4E0D;&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4; .antMatchers(&quot;/&quot;, &quot;/index&quot;, &quot;/user/login&quot;, &quot;/code/image&quot;).permitAll() // &#x8BBE;&#x7F6E;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x767B;&#x5F55;&#x9875;&#x9762; .anyRequest().authenticated() // &#x4EFB;&#x4F55;&#x8BF7;&#x6C42;,&#x767B;&#x5F55;&#x540E;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE; .and().csrf().disable(); // &#x5173;&#x95ED;csrf&#x9632;&#x62A4; }} &#x5230;&#x6B64;&#xFF0C;&#x6574;&#x4E2A;&#x56FE;&#x7247;&#x9A8C;&#x8BC1;&#x7801;&#x7684;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;&#x8BBE;&#x8BA1;&#x5C31;&#x7ED3;&#x675F;&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x518D;&#x56DE;&#x5934;&#x770B;&#x770B;&#x7B14;&#x8005;&#x6700;&#x5F00;&#x59CB;&#x753B;&#x7684;&#x65F6;&#x5E8F;&#x56FE;&#xFF0C;&#x611F;&#x89C9;&#x8FD8;&#x662F;&#x975E;&#x5E38;&#x4E0D;&#x4E13;&#x4E1A;&#x89C4;&#x8303;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x8F85;&#x52A9;&#x8BF4;&#x660E;&#x7684;&#x8349;&#x7A3F;&#xFF0C;&#x5982;&#x7B14;&#x8005;&#x6709;&#x8BBE;&#x8BA1;&#x66F4;&#x597D;&#x7684;&#x65F6;&#x5E8F;&#x56FE;&#xFF0C;&#x6B22;&#x8FCE;&#x4EA4;&#x6D41;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Spring Security</category>
      </categories>
      <tags>
        <tag>Spring Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot + Spring Security 学习笔记（二）安全认证流程源码详解]]></title>
    <url>%2F2019%2F04%2F12%2F027%2F</url>
    <content type="text"><![CDATA[&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;UsernamePasswordAuthenticationFilter&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x6765;&#x770B;UsernamePasswordAuthenticationFilter&#x7C7B;&#xFF0C; 12345678910111213141516171819202122232425262728293031323334353637public class UsernamePasswordAuthenticationFilter extends AbstractAuthenticationProcessingFilter { public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) throws AuthenticationException { // &#x5224;&#x65AD;&#x662F;&#x5426;&#x662F; POST &#x8BF7;&#x6C42; if (postOnly &amp;&amp; !request.getMethod().equals(&quot;POST&quot;)) { throw new AuthenticationServiceException( &quot;Authentication method not supported: &quot; + request.getMethod()); } // &#x83B7;&#x53D6;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x5BC6;&#x7801;&#x3002; // &#x5C31;&#x662F;&#x6700;&#x7B80;&#x5355;&#x7684;&#xFF1A;request.getParameter(xxx) String username = obtainUsername(request); String password = obtainPassword(request); if (username == null) { username = &quot;&quot;; } if (password == null) { password = &quot;&quot;; } username = username.trim(); // &#x751F;&#x6210; authRequest&#xFF0C;&#x672C;&#x8D28;&#x5C31;&#x662F;&#x4E2A; usernamePasswordAuthenticationToken UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken( username, password); // &#x628A; request &#x8BF7;&#x6C42;&#x4E5F;&#x4E00;&#x540C;&#x585E;&#x8FDB; token &#x91CC; // Allow subclasses to set the &quot;details&quot; property setDetails(request, authRequest); // &#x5C06; authRequest &#x585E;&#x8FDB; AuthenticationManager&#x5E76;&#x8FD4;&#x56DE; return this.getAuthenticationManager().authenticate(authRequest); }} &#x5728;attemptAuthentication()&#x65B9;&#x6CD5;&#x4E2D;&#xFF1A;&#x4E3B;&#x8981;&#x662F;&#x5148;&#x8FDB;&#x884C;&#x8BF7;&#x6C42;&#x5224;&#x65AD;&#x5E76;&#x83B7;&#x53D6;username&#x548C;password&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x751F;&#x6210;&#x4E00;&#x4E2A;UsernamePasswordAuthenticationToken&#x5BF9;&#x8C61;&#xFF0C;&#x5C06;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x585E;&#x8FDB;AuthenticationManager&#x5BF9;&#x8C61;&#x5E76;&#x8FD4;&#x56DE;&#xFF0C;&#x6CE8;&#x610F;&#xFF1A;&#x6B64;&#x65F6;&#x7684;authRequest&#x7684;&#x6743;&#x9650;&#x662F;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x503C;&#x7684;&#x3002; UsernamePasswordAuthenticationToken&#x4E0D;&#x8FC7;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5148;&#x770B;&#x770B;UsernamePasswordAuthenticationToken&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#xFF1A; 123456public UsernamePasswordAuthenticationToken(Object principal, Object credentials) { super(null); this.principal = principal; this.credentials = credentials; setAuthenticated(false);} &#x5176;&#x5B9E;UsernamePasswordAuthenticationToken&#x662F;&#x7EE7;&#x627F;&#x4E8E;Authentication&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x5728;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x4E00;&#x4E2D;&#x7684;&#x4E2D;&#x201D;&#x81EA;&#x5B9A;&#x4E49;&#x5904;&#x7406;&#x767B;&#x5F55;&#x6210;&#x529F;/&#x5931;&#x8D25;&#x201D;&#x7AE0;&#x8282;&#x91CC;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x767B;&#x5F55;&#x6210;&#x529F;&#x91CC;&#x6709;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;&#x5B83;&#x662F;&#x5904;&#x7406;&#x767B;&#x5F55;&#x6210;&#x529F;&#x56DE;&#x8C03;&#x65B9;&#x6CD5;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x91CC;&#x9762;&#x5305;&#x542B;&#x4E86;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x3001;&#x8BF7;&#x6C42;&#x4FE1;&#x606F;&#x7B49;&#x53C2;&#x6570;&#x3002; &#x6765;&#x4E00;&#x5F20;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x56FE;&#xFF0C;&#x5BF9;&#x5176;&#x6709;&#x4E2A;&#x5927;&#x6982;&#x7684;&#x8BA4;&#x8BC6;&#xFF0C;&#x6CE8;&#x610F;&#x5230;Authentication&#x7EE7;&#x627F;&#x4E86;Principal&#x3002; AuthenticationManagerAuthenticationManager&#x662F;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x5B83;&#x7684;&#x6240;&#x6709;&#x5B9E;&#x73B0;&#x7C7B;&#x5982;&#x56FE;&#xFF1A; &#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x5341;&#x5206;&#x6838;&#x5FC3;&#x7684;&#x7C7B;&#x5C31;&#x662F;&#xFF1A;ProviderManager&#xFF0C;&#x5728;attemptAuthentication()&#x65B9;&#x6CD5;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x7C7B; 1this.getAuthenticationManager().authenticate(authRequest); &#x8FDB;&#x5165;authenticate()&#x65B9;&#x6CD5;&#x67E5;&#x770B;&#x5177;&#x4F53;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536public Authentication authenticate(Authentication authentication) throws AuthenticationException { Class&lt;? extends Authentication&gt; toTest = authentication.getClass(); AuthenticationException lastException = null; AuthenticationException parentException = null; Authentication result = null; Authentication parentResult = null; boolean debug = logger.isDebugEnabled(); for (AuthenticationProvider provider : getProviders()) { // 1.&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;provider&#x652F;&#x6301;&#x8BE5;Authentication if (!provider.supports(toTest)) { continue; } if (debug) { logger.debug(&quot;Authentication attempt using &quot; + provider.getClass().getName()); } try { // 2. &#x771F;&#x6B63;&#x7684;&#x903B;&#x8F91;&#x5224;&#x65AD; result = provider.authenticate(authentication); if (result != null) { copyDetails(authentication, result); break; } } catch (AccountStatusException e) { &#x2026;&#x2026; } } &#x2026;&#x2026;} &#x8FD9;&#x91CC;&#x9996;&#x5148;&#x901A;&#x8FC7; provider &#x5224;&#x65AD;&#x662F;&#x5426;&#x652F;&#x6301;&#x5F53;&#x524D;&#x4F20;&#x5165;&#x8FDB;&#x6765;&#x7684;Authentication&#xFF0C;&#x76EE;&#x524D;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x7684;&#x662F;UsernamePasswordAuthenticationToken&#xFF0C;&#x56E0;&#x4E3A;&#x9664;&#x4E86;&#x5E10;&#x53F7;&#x5BC6;&#x7801;&#x767B;&#x5F55;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x8FD8;&#x4F1A;&#x6709;&#x5176;&#x4ED6;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6BD4;&#x5982;JwtAuthenticationToken&#x3002; &#x4ECE;&#x6574;&#x4F53;&#x6765;&#x770B;Authentication &#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x5982;&#x56FE;&#xFF1A; &#x5B98;&#x65B9; API &#x6587;&#x6863;&#x5217;&#x51FA;&#x4E86;&#x6240;&#x6709;&#x7684;&#x5B50;&#x7C7B; &#x4ECE;&#x6574;&#x4F53;&#x6765;&#x770B;AuthenticationProvider&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x5982;&#x56FE;&#xFF1A; &#x5B98;&#x65B9; API &#x6587;&#x6863;&#x5217;&#x51FA;&#x4E86;&#x6240;&#x6709;&#x7684;&#x5B50;&#x7C7B; &#x6839;&#x636E;&#x6211;&#x4EEC;&#x76EE;&#x524D;&#x6240;&#x4F7F;&#x7528;&#x7684;UsernamePasswordAuthenticationToken&#xFF0C;provider &#x5BF9;&#x5E94;&#x7684;&#x662F;AbstractUserDetailsAuthenticationProvider&#x62BD;&#x8C61;&#x7C7B;&#x7684;&#x5B50;&#x7C7B;DaoAuthenticationProvider&#xFF0C;&#x5176;authenticate()&#x5C5E;&#x4E8E;&#x62BD;&#x8C61;&#x7C7B;&#x672C;&#x8EAB;&#x7684;&#x65B9;&#x6CD5;&#x3002; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162public Authentication authenticate(Authentication authentication) throws AuthenticationException { Assert.isInstanceOf(UsernamePasswordAuthenticationToken.class, authentication, () -&gt; messages.getMessage( &quot;AbstractUserDetailsAuthenticationProvider.onlySupports&quot;, &quot;Only UsernamePasswordAuthenticationToken is supported&quot;)); // Determine username String username = (authentication.getPrincipal() == null) ? &quot;NONE_PROVIDED&quot; : authentication.getName(); boolean cacheWasUsed = true; // 1.&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x83B7;&#x53D6; UserDetails UserDetails user = this.userCache.getUserFromCache(username); if (user == null) { cacheWasUsed = false; try { // 2.&#x7F13;&#x5B58;&#x83B7;&#x53D6;&#x4E0D;&#x5230;&#xFF0C;&#x5C31;&#x53BB;&#x63A5;&#x53E3;&#x5B9E;&#x73B0;&#x7C7B;&#x4E2D;&#x83B7;&#x53D6; user = retrieveUser(username, (UsernamePasswordAuthenticationToken) authentication); } catch (UsernameNotFoundException notFound) { &#x2026;&#x2026; } Assert.notNull(user, &quot;retrieveUser returned null - a violation of the interface contract&quot;); } try { // 3.&#x7528;&#x6237;&#x4FE1;&#x606F;&#x9884;&#x68C0;&#x67E5;&#xFF08;&#x7528;&#x6237;&#x662F;&#x5426;&#x5BC6;&#x7801;&#x8FC7;&#x671F;&#xFF0C;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x88AB;&#x5220;&#x9664;&#x7B49;&#xFF09; preAuthenticationChecks.check(user); // 4.&#x9644;&#x52A0;&#x7684;&#x68C0;&#x67E5;&#xFF08;&#x5BC6;&#x7801;&#x68C0;&#x67E5;&#xFF1A;&#x5339;&#x914D;&#x7528;&#x6237;&#x7684;&#x5BC6;&#x7801;&#x548C;&#x670D;&#x52A1;&#x5668;&#x4E2D;&#x7684;&#x7528;&#x6237;&#x5BC6;&#x7801;&#x662F;&#x5426;&#x4E00;&#x81F4;&#xFF09; additionalAuthenticationChecks(user, (UsernamePasswordAuthenticationToken) authentication); } catch (AuthenticationException exception) { if (cacheWasUsed) { // There was a problem, so try again after checking // we&apos;re using latest data (i.e. not from the cache) cacheWasUsed = false; user = retrieveUser(username, (UsernamePasswordAuthenticationToken) authentication); preAuthenticationChecks.check(user); additionalAuthenticationChecks(user, (UsernamePasswordAuthenticationToken) authentication); } else { throw exception; } } // 5.&#x6700;&#x540E;&#x7684;&#x68C0;&#x67E5; postAuthenticationChecks.check(user); &#x2026;&#x2026; // 6.&#x8FD4;&#x56DE;&#x771F;&#x6B63;&#x7684;&#x7ECF;&#x8FC7;&#x8BA4;&#x8BC1;&#x7684;Authentication return createSuccessAuthentication(principalToReturn, authentication, user);} &#x6CE8;&#x610F;&#xFF1A;retrieveUser()&#x7684;&#x5177;&#x4F53;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#x662F;&#x7531;DaoAuthenticationProvider&#x7C7B;&#x5B8C;&#x6210;&#x7684;&#xFF1A; 1234567891011121314151617181920public class DaoAuthenticationProvider extends AbstractUserDetailsAuthenticationProvider { protected final UserDetails retrieveUser(String username, UsernamePasswordAuthenticationToken authentication) throws AuthenticationException { prepareTimingAttackProtection(); try { // &#x83B7;&#x53D6;&#x7528;&#x6237;&#x4FE1;&#x606F; UserDetails loadedUser = this.getUserDetailsService().loadUserByUsername(username); if (loadedUser == null) { throw new InternalAuthenticationServiceException( &quot;UserDetailsService returned null, which is an interface contract violation&quot;); } return loadedUser; } catch (UsernameNotFoundException ex) { &#x2026;&#x2026; } }} &#x540C;&#x65F6;createSuccessAuthentication()&#x7684;&#x65B9;&#x6CD5;&#x4E5F;&#x662F;&#x7531;DaoAuthenticationProvider&#x7C7B;&#x6765;&#x5B8C;&#x6210;&#x7684;&#xFF1A; 12345678910111213141516171819202122232425// &#x5B50;&#x7C7B;&#x62FF; user &#x5BF9;&#x8C61;@Overrideprotected Authentication createSuccessAuthentication(Object principal, Authentication authentication, UserDetails user) { boolean upgradeEncoding = this.userDetailsPasswordService != null &amp;&amp; this.passwordEncoder.upgradeEncoding(user.getPassword()); if (upgradeEncoding) { String presentedPassword = authentication.getCredentials().toString(); String newPassword = this.passwordEncoder.encode(presentedPassword); user = this.userDetailsPasswordService.updatePassword(user, newPassword); } // &#x8C03;&#x7528;&#x7236;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#x5B8C;&#x6210; Authentication &#x7684;&#x521B;&#x5EFA; return super.createSuccessAuthentication(principal, authentication, user);}// &#x521B;&#x5EFA;&#x5DF2;&#x8BA4;&#x8BC1;&#x7684; Authenticationprotected Authentication createSuccessAuthentication(Object principal, Authentication authentication, UserDetails user) { UsernamePasswordAuthenticationToken result = new UsernamePasswordAuthenticationToken( principal, authentication.getCredentials(), authoritiesMapper.mapAuthorities(user.getAuthorities())); result.setDetails(authentication.getDetails()); return result;} &#x5C0F;&#x7ED3;&#xFF1A;authenticate()&#x7684;&#x8BA4;&#x8BC1;&#x903B;&#x8F91; &#x53BB;&#x8C03;&#x7528;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x7684;UserDetailsService&#xFF0C;&#x8FD4;&#x56DE;UserDetails &#x5BF9; UserDetails &#x7684;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x5E10;&#x53F7;&#x662F;&#x5426;&#x88AB;&#x51BB;&#x7ED3;&#xFF0C;&#x662F;&#x5426;&#x8FC7;&#x671F;&#x7B49; &#x5BF9;&#x5BC6;&#x7801;&#x8FDB;&#x884C;&#x68C0;&#x67E5;&#xFF0C;&#x8FD9;&#x91CC;&#x8C03;&#x7528;&#x4E86;PasswordEncoder&#xFF0C;&#x68C0;&#x67E5; UserDetails &#x662F;&#x5426;&#x53EF;&#x7528;&#x3002; &#x8FD4;&#x56DE;&#x7ECF;&#x8FC7;&#x8BA4;&#x8BC1;&#x7684;Authentication &#x7F16;&#x7801;&#x6280;&#x5DE7;&#x63D0;&#x793A;&#xFF1A;&#x8FD9;&#x91CC;&#x5728;&#x8BA4;&#x8BC1;&#x4E4B;&#x524D;&#x4F7F;&#x7528;&#x4E86;Assert.isInstanceOf()&#x8FDB;&#x884C;&#x65AD;&#x8A00;&#x6821;&#x9A8C;&#xFF0C;&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x4E5F;&#x4E0D;&#x65AD;&#x7528;&#x4E86;Assert.notNull()&#xFF0C;&#x8FD9;&#x79CD;&#x7F16;&#x7801;&#x975E;&#x5E38;&#x7684;&#x7075;&#x5DE7;&#xFF0C;&#x7701;&#x53BB;&#x4E86;&#x540E;&#x7EED;&#x7684;&#x7C7B;&#x578B;&#x5224;&#x65AD;&#x3002; &#x8FD9;&#x91CC;&#x7684;&#x4E24;&#x6B21;&#x5BF9;UserDetails&#x7684;&#x68C0;&#x67E5;&#xFF0C;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x5B83;&#x7684;&#x56DB;&#x4E2A;&#x8FD4;&#x56DE; boolean &#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#xFF08;isAccountNonExpired()&#xFF0C;isAccountNonLocked()&#xFF0C;isCredentialsNonExpired()&#xFF0C;isEnabled()&#xFF09;&#x3002; &#x7ECF;&#x8FC7;&#x4FE1;&#x606F;&#x7684;&#x6821;&#x9A8C;&#x4E4B;&#x540E;&#xFF0C;&#x901A;&#x8FC7;UsernamePasswordAuthenticationToken&#x7684;&#x5168;&#x53C2;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD4;&#x56DE;&#x4E86;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x8FC7;&#x8BA4;&#x8BC1;&#x7684;Authentication&#x3002; &#x62FF;&#x5230;&#x7ECF;&#x8FC7;&#x8BA4;&#x8BC1;&#x7684;Authentication&#x4E4B;&#x540E;&#xFF0C;&#x81F3;&#x6B64;UsernamePasswordAuthenticationFilter&#x7684;&#x8FC7;&#x6EE4;&#x6B65;&#x9AA4;&#x5C31;&#x5B8C;&#x5168;&#x7ED3;&#x675F;&#x4E86;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x4F1A;&#x8FDB;&#x5165;BasicAuthenticationFilter&#xFF0C;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x53BB;&#x8C03;&#x7528;successHandler&#x3002;&#x6216;&#x8005;&#x672A;&#x901A;&#x8FC7;&#x8BA4;&#x8BC1;&#xFF0C;&#x53BB;&#x8C03;&#x7528;failureHandler&#x3002; &#x5DF2;&#x8BA4;&#x8BC1;&#x6570;&#x636E;&#x5171;&#x4EAB;&#x5B8C;&#x6210;&#x4E86;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x5904;&#x7406;&#x6D41;&#x7A0B;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x601D;&#x8003;&#x4E00;&#x4E0B;&#x662F;&#x5982;&#x4F55;&#x5728;&#x591A;&#x4E2A;&#x8BF7;&#x6C42;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x8FD9;&#x4E2A;&#x8BA4;&#x8BC1;&#x7ED3;&#x679C;&#x7684;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x505A;&#x5173;&#x4E8E;&#x8FD9;&#x65B9;&#x9762;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x8054;&#x60F3;&#x5230;&#x9ED8;&#x8BA4;&#x7684;&#x65B9;&#x5F0F;&#x5E94;&#x8BE5;&#x662F;&#x5728;session&#x4E2D;&#x5B58;&#x5165;&#x4E86;&#x8BA4;&#x8BC1;&#x7ED3;&#x679C;&#x3002;&#x601D;&#x8003;&#xFF1A;&#x90A3;&#x4E48;&#x662F;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x5B58;&#x653E;&#x5165;session&#x4E2D;&#x7684;&#x5462;&#xFF1F; &#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x770B;&#x662F;&#x8C01;&#x8C03;&#x7528;&#x7684;&#x5B83;&#xFF0C;&#x53D1;&#x73B0;&#x662F;AbstractAuthenticationProcessingFilter&#x7684;doFilter()&#x8FDB;&#x884C;&#x8C03;&#x7528;&#x7684;&#xFF0C;&#x8FD9;&#x662F;AbstractAuthenticationProcessingFilter&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x7ED3;&#x6784;&#x56FE;&#xFF1A; &#x5F53;&#x8BA4;&#x8BC1;&#x6210;&#x529F;&#x4E4B;&#x540E;&#x4F1A;&#x8C03;&#x7528;successfulAuthentication(request, response, chain, authResult)&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x4E0D;&#x4EC5;&#x8C03;&#x7528;&#x4E86;successHandler&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x884C;&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647public abstract class AbstractAuthenticationProcessingFilter extends GenericFilterBean implements ApplicationEventPublisherAware, MessageSourceAware { public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException { // &#x8C03;&#x7528;&#x4E86; UsernamePasswordAuthenticationFilter authResult = attemptAuthentication(request, response); &#x2026;&#x2026; // &#x8C03;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x4FDD;&#x5B58;&#x5230;session successfulAuthentication(request, response, chain, authResult); } // &#x5C06;&#x6210;&#x529F;&#x8BA4;&#x8BC1;&#x7684;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5230;session protected void successfulAuthentication(HttpServletRequest request, HttpServletResponse response, FilterChain chain, Authentication authResult) throws IOException, ServletException { if (logger.isDebugEnabled()) { logger.debug(&quot;Authentication success. Updating SecurityContextHolder to contain: &quot; + authResult); } // &#x4FDD;&#x5B58;&#x5230; SecurityContextHolder &#x7684;&#x9759;&#x6001;&#x5C5E;&#x6027; SecurityContextHolderStrategy &#x91CC;&#xFF0C; &#x975E;&#x5E38;&#x91CD;&#x8981;&#x7684;&#x4EE3;&#x7801; SecurityContextHolder.getContext().setAuthentication(authResult); rememberMeServices.loginSuccess(request, response, authResult); // Fire event if (this.eventPublisher != null) { eventPublisher.publishEvent(new InteractiveAuthenticationSuccessEvent( authResult, this.getClass())); } successHandler.onAuthenticationSuccess(request, response, authResult); }}// SecurityContextHolder&#x7C7B;&#x4E2D;&#x5B58;&#x7740; &#x9759;&#x6001;&#x5C5E;&#x6027;&#xFF1A;SecurityContextHolderStrategypublic class SecurityContextHolder { &#x2026;&#x2026; private static SecurityContextHolderStrategy strategy; &#x2026;&#x2026; public static void setContext(SecurityContext context) { strategy.setContext(context); }} SecurityContextHolderStrategy&#x63A5;&#x53E3;&#x7684;&#x6240;&#x6709;&#x5B9E;&#x73B0;&#x7C7B;&#xFF1A; &#x975E;&#x5E38;&#x663E;&#x773C;&#x7684;&#x770B;&#x51FA;&#xFF1A;ThreadLocalSecurityContextHolderStrategy&#x7C7B;&#xFF1A; 1234567891011121314final class ThreadLocalSecurityContextHolderStrategy implements SecurityContextHolderStrategy { private static final ThreadLocal&lt;SecurityContext&gt; contextHolder = new ThreadLocal&lt;&gt;(); &#x2026;&#x2026; public void setContext(SecurityContext context) { Assert.notNull(context, &quot;Only non-null SecurityContext instances are permitted&quot;); // &#x5C06;&#x5DF2;&#x8BA4;&#x8BC1;&#x7684;&#x7528;&#x6237;&#x5BF9;&#x8C61;&#x4FDD;&#x5B58;&#x5230; ThreadLocal&lt;SecurityContext&gt; &#x4E2D; contextHolder.set(context); } &#x2026;&#x2026;} &#x6CE8;&#x610F;&#xFF1A;SecurityContext&#x7C7B;&#x7684;equals()&#x548C;hashCode()&#x65B9;&#x6CD5;&#x5DF2;&#x7ECF;&#x91CD;&#x5199;&#x4E86;&#xFF0C;&#x7528;&#x6765;&#x4FDD;&#x8BC1;&#x4E86;authentication&#x7684;&#x552F;&#x4E00;&#x6027;&#x3002; &#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x6210;&#x529F;&#x540E;&#xFF0C;&#x6700;&#x540E;&#x5728;UsernamePasswordAuthenticationFilter&#x8FD4;&#x56DE;&#x540E;&#x4F1A;&#x8FDB;&#x5165;&#x4E00;&#x4E2A;AbstractAuthenticationProcessingFilter&#x7C7B;&#x4E2D;&#x8C03;&#x7528;successfulAuthentication()&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x6700;&#x540E;&#x4F1A;&#x8FD4;&#x56DE;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x7684;&#x767B;&#x5F55;&#x6210;&#x529F;&#x5904;&#x7406;&#x5668;handler&#x3002; &#x5728;&#x8FD4;&#x56DE;&#x4E4B;&#x524D;&#xFF0C;&#x5B83;&#x4F1A;&#x8C03;&#x7528;SecurityContext&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x8BA4;&#x8BC1;&#x7684;&#x7ED3;&#x679C;&#x653E;&#x5165;SecurityContextHolder&#x4E2D;&#xFF0C;SecurityContext &#x7C7B;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x91CD;&#x5199;&#x4E86;equals() &#x65B9;&#x6CD5;&#x548C;hashCode()&#x65B9;&#x6CD5;&#xFF0C;&#x4FDD;&#x8BC1;&#x4E86;authentication&#x7684;&#x552F;&#x4E00;&#x6027;&#x3002; &#x4ECE;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF1A;SecurityContextHolder&#x7C7B;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5BF9;ThreadLocal&#x7684;&#x4E00;&#x4E2A;&#x5C01;&#x88C5;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x65B9;&#x6CD5;&#x4E4B;&#x95F4;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7406;&#x89E3;&#x4E3A;&#x7EBF;&#x7A0B;&#x7EA7;&#x522B;&#x7684;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E2D;&#x7684;&#x4E0D;&#x540C;&#x65B9;&#x6CD5;&#x4E2D;&#x83B7;&#x53D6;&#x5230;&#x8BA4;&#x8BC1;&#x4FE1;&#x606F;&#x3002;&#x6700;&#x540E;&#x4F1A;&#x88AB;SecurityContextPersistenceFilter&#x8FC7;&#x6EE4;&#x5668;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x4F5C;&#x7528;&#x662F;&#xFF1A; &#x5F53;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x6765;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4F1A;&#x5C06; session &#x4E2D;&#x7684;&#x503C;&#x4F20;&#x5165;&#x5230;&#x8BE5;&#x7EBF;&#x7A0B;&#x4E2D;&#xFF0C;&#x5F53;&#x8BF7;&#x6C42;&#x8FD4;&#x56DE;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4F1A;&#x5224;&#x65AD;&#x8BE5;&#x8BF7;&#x6C42;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x6709; SecurityContext&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5B83;&#x4F1A;&#x5C06;&#x5176;&#x653E;&#x5165;&#x5230; session &#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x4FDD;&#x8BC1;&#x4E86;&#x8BF7;&#x6C42;&#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8BF7;&#x6C42;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x3002; &#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x6D41;&#x7A0B;&#x603B;&#x7ED3;&#x5F15;&#x7528;&#x5F90;&#x9756;&#x5CF0;&#x5728;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;Spring Security(&#x4E00;)&#x2013;Architecture Overview&#x4E2D;&#x7684;&#x6982;&#x62EC;&#x6027;&#x603B;&#x7ED3;&#xFF0C;&#x975E;&#x5E38;&#x7684;&#x5230;&#x4F4D;&#xFF1A; &#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x88AB;&#x8FC7;&#x6EE4;&#x5668;&#x83B7;&#x53D6;&#x5230;&#xFF0C;&#x5C01;&#x88C5;&#x6210;Authentication&#xFF0C;&#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x662F;UsernamePasswordAuthenticationToken&#x8FD9;&#x4E2A;&#x5B9E;&#x73B0;&#x7C7B;&#x3002; AuthenticationManager &#x8EAB;&#x4EFD;&#x7BA1;&#x7406;&#x5668;&#x8D1F;&#x8D23;&#x9A8C;&#x8BC1;&#x8FD9;&#x4E2A;Authentication&#x3002; &#x8BA4;&#x8BC1;&#x6210;&#x529F;&#x540E;&#xFF0C;AuthenticationManager&#x8EAB;&#x4EFD;&#x7BA1;&#x7406;&#x5668;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x88AB;&#x586B;&#x5145;&#x6EE1;&#x4E86;&#x4FE1;&#x606F;&#x7684;&#xFF08;&#x5305;&#x62EC;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x6743;&#x9650;&#x4FE1;&#x606F;&#xFF0C;&#x8EAB;&#x4EFD;&#x4FE1;&#x606F;&#xFF0C;&#x7EC6;&#x8282;&#x4FE1;&#x606F;&#xFF0C;&#x4F46;&#x5BC6;&#x7801;&#x901A;&#x5E38;&#x4F1A;&#x88AB;&#x79FB;&#x9664;&#xFF09;Authentication&#x5B9E;&#x4F8B;&#x3002; SecurityContextHolder&#x5B89;&#x5168;&#x4E0A;&#x4E0B;&#x6587;&#x5BB9;&#x5668;&#x5C06;&#x7B2C;3&#x6B65;&#x586B;&#x5145;&#x4E86;&#x4FE1;&#x606F;&#x7684;Authentication&#xFF0C;&#x901A;&#x8FC7;SecurityContextHolder.getContext().setAuthentication(&#x2026;)&#x65B9;&#x6CD5;&#xFF0C;&#x8BBE;&#x7F6E;&#x5230;&#x5176;&#x4E2D;&#x3002; &#x9AD8;&#x5EA6;&#x6982;&#x62EC;&#x8D77;&#x6765;&#x672C;&#x7AE0;&#x8282;&#x6240;&#x6709;&#x7528;&#x7684;&#x6838;&#x5FC3;&#x8BA4;&#x8BC1;&#x76F8;&#x5173;&#x63A5;&#x53E3;&#xFF1A;SecurityContextHolder&#x662F; &#x8EAB;&#x4EFD;&#x4FE1;&#x606F;&#x7684;&#x5B58;&#x653E;&#x5BB9;&#x5668;&#xFF0C;Authentication&#x662F;&#x8EAB;&#x4EFD;&#x4FE1;&#x606F;&#x7684;&#x62BD;&#x8C61;&#xFF0C;AuthenticationManager&#x662F;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x5668;&#xFF0C;&#x4E00;&#x822C;&#x5E38;&#x7528;&#x7684;&#x662F;&#x7528;&#x6237;&#x540D;+&#x5BC6;&#x7801;&#x7684;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x5668;&#xFF0C;&#x8FD8;&#x6709;&#x5176;&#x5B83;&#x8BA4;&#x8BC1;&#x5668;&#xFF0C;&#x5982;&#x90AE;&#x7BB1;+&#x5BC6;&#x7801;&#x3001;&#x624B;&#x673A;&#x53F7;&#x7801;+&#x5BC6;&#x7801;&#x7B49;&#x3002; &#x518D;&#x5F15;&#x7528;&#x4E00;&#x5F20;&#x5341;&#x5206;&#x6D41;&#x884C;&#x7684;&#x6D41;&#x7A0B;&#x56FE;&#x6765;&#x8868;&#x793A;&#x7528;&#x6237;&#x7684;&#x8BA4;&#x8BC1;&#x8FC7;&#x7A0B;&#xFF1A; &#x67B6;&#x6784;&#x6982;&#x89C8;&#x56FE;&#x4E3A;&#x4E86;&#x66F4;&#x52A0;&#x5F62;&#x8C61;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x5728;&#x5F90;&#x9756;&#x5CF0;&#x5927;&#x4F6C;&#x7684;&#x7ECF;&#x5178;&#x67B6;&#x6784;&#x56FE;&#x4E4B;&#x4E0A;&#xFF0C;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x505A;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x7EC6;&#x5316;&#x548C;&#x8C03;&#x6574;&#xFF1A; &#x83B7;&#x53D6;&#x8BA4;&#x8BC1;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x83B7;&#x53D6;&#x7528;&#x7684;&#x6821;&#x9A8C;&#x8FC7;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;&#xFF0C;&#x8BE5;&#x5982;&#x4F55;&#x83B7;&#x53D6;&#x5462;&#xFF1F;&#x4E0A;&#x9762;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x4E86;&#x4F1A;&#x5C06;&#x6821;&#x9A8C;&#x7ED3;&#x679C;&#x653E;&#x5165; session &#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; session &#x83B7;&#x53D6;&#xFF1A; 1234567891011@GetMapping(&quot;/me1&quot;)@ResponseBodypublic Object getMeDetail() { return SecurityContextHolder.getContext().getAuthentication();}@GetMapping(&quot;/me2&quot;)@ResponseBodypublic Object getMeDetail(Authentication authentication){ return authentication;} &#x5728;&#x767B;&#x5F55;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x4E0A;&#x9762;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x83B7;&#x53D6;&#xFF0C;&#x8BBF;&#x95EE;&#x4E0A;&#x9762;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x5C31;&#x4F1A;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x5168;&#x90E8;&#x7684;&#x6821;&#x9A8C;&#x4FE1;&#x606F;&#xFF0C;&#x5305;&#x62EC;ip&#x5730;&#x5740;&#x7B49;&#x4FE1;&#x606F;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x53EA;&#x60F3;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x4EE5;&#x53CA;&#x5B83;&#x7684;&#x6743;&#x9650;&#xFF0C;&#x4E0D;&#x9700;&#x8981;ip&#x5730;&#x5740;&#x7B49;&#x592A;&#x591A;&#x7684;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x83B7;&#x53D6;&#x4FE1;&#x606F;&#xFF1A; 12345@GetMapping(&quot;/me3&quot;)@ResponseBodypublic Object getMeDetail(@AuthenticationPrincipal UserDetails userDetails){ return userDetails;} &#x53C2;&#x8003;&#x8D44;&#x6599;&#xFF1A; https://www.cnkirito.moe/spring-security-1/ https://blog.csdn.net/u013435893/article/details/79605239 https://blog.csdn.net/qq_37142346/article/details/80032336 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Spring Security</category>
      </categories>
      <tags>
        <tag>Spring Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringBoot + Spring Security 学习笔记（一）自定义基本使用及个性化登录配置]]></title>
    <url>%2F2019%2F04%2F12%2F026%2F</url>
    <content type="text"><![CDATA[&#x5B98;&#x65B9;&#x6587;&#x6863;&#x53C2;&#x8003;&#xFF0C;5.1.2 &#x4E2D;&#x6587;&#x53C2;&#x8003;&#x6587;&#x6863;&#xFF0C;4.1 &#x4E2D;&#x6587;&#x53C2;&#x8003;&#x6587;&#x6863;&#xFF0C;4.1 &#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x6587;&#x7FFB;&#x8BD1;&#x4E0E;&#x6E90;&#x7801;&#x89E3;&#x8BFB; SpringSecurity &#x6838;&#x5FC3;&#x529F;&#x80FD;&#xFF1A; &#x8BA4;&#x8BC1;&#xFF08;&#x4F60;&#x662F;&#x8C01;&#xFF09; &#x6388;&#x6743;&#xFF08;&#x4F60;&#x80FD;&#x5E72;&#x4EC0;&#x4E48;&#xFF09; &#x653B;&#x51FB;&#x9632;&#x62A4;&#xFF08;&#x9632;&#x6B62;&#x4F2A;&#x9020;&#x8EAB;&#x4EFD;&#xFF09; &#x7B80;&#x5355;&#x7684;&#x5F00;&#x59CB;pom &#x4F9D;&#x8D56; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.1.4.RELEASE&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;groupId&gt;org.woodwhale.king&lt;/groupId&gt; &lt;artifactId&gt;security-demo&lt;/artifactId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;name&gt;security-demo&lt;/name&gt; &lt;description&gt;spring-security-demo project for Spring Boot&lt;/description&gt; &lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.security&lt;/groupId&gt; &lt;artifactId&gt;spring-security-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; &#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x6700;&#x7B80;&#x5355;&#x7684;&#x7528;&#x6237; controller 123456789101112import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestController@RequestMapping(&quot;/user&quot;)public class UserController { @GetMapping public String getUsers() { return &quot;Hello Spring Security&quot;; }} application.yml &#x914D;&#x7F6E;IP &#x548C;&#x7AEF;&#x53E3; 1234567server: address: 127.0.0.1 port: 8081 logging: level: org.woodwhale.king: DEBUG &#x6D4F;&#x89C8;&#x5668;&#x8BBF;&#x95EE;http://127.0.0.1:8081/user&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x88AB;&#x81EA;&#x52A8;&#x91CD;&#x5B9A;&#x5411;&#x5230;&#x4E86;&#x767B;&#x5F55;&#x7684;&#x754C;&#x9762;&#xFF1A; &#x8FD9;&#x4E2A;/login&#x8BBF;&#x95EE;&#x8DEF;&#x5F84;&#x5728;&#x7A0B;&#x5E8F;&#x4E2D;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x7684;&#x663E;&#x793A;&#x4EE3;&#x7801;&#x7F16;&#x5199;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x51FA;&#x73B0;&#x8FD9;&#x6837;&#x7684;&#x754C;&#x9762;&#x5462;&#xFF0C;&#x5F53;&#x524D;&#x754C;&#x9762;&#x4E2D;&#x7684;UI &#x90FD;&#x662F;&#x54EA;&#x91CC;&#x6765;&#x7684;&#x5462;&#xFF1F; &#x5F53;&#x7136;&#x662F; spring-security &#x8FDB;&#x884C;&#x4E86;&#x9ED8;&#x8BA4;&#x63A7;&#x5236;&#xFF0C;&#x4ECE;&#x542F;&#x52A8;&#x65E5;&#x5FD7;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E00;&#x4E32;&#x7528;&#x6237;&#x540D;&#x9ED8;&#x8BA4;&#x4E3A;user&#x7684;&#x9ED8;&#x8BA4;&#x5BC6;&#x7801;&#xFF1A; &#x767B;&#x5F55;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x8BBF;&#x95EE;&#x670D;&#x52A1;&#x8D44;&#x6E90;&#x4E86;&#x3002; &#x81EA;&#x5B9A;&#x4E49;&#x9ED8;&#x8BA4;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#xFF1A; 12345spring: security: user: name: &quot;admin&quot; password: &quot;admin&quot; &#x5173;&#x95ED;&#x9ED8;&#x8BA4;&#x7684;&#x5B89;&#x5168;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#x65E7;&#x7248;&#x7684; spring security &#x5173;&#x95ED;&#x9ED8;&#x8BA4;&#x5B89;&#x5168;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5173;&#x95ED;&#x5373;&#x53EF;&#xFF1A; 1security.basic.enabled = false &#x65B0;&#x7248;&#x672C; Spring-Boot2.xx(Spring-security5.x) &#x7684;&#x4E0D;&#x518D;&#x63D0;&#x4F9B;&#x4E0A;&#x8FF0;&#x914D;&#x7F6E;&#x4E86;&#xFF1A; &#x65B9;&#x6CD5;1&#xFF1A; &#x5C06; security &#x5305;&#x4ECE;&#x9879;&#x76EE;&#x4F9D;&#x8D56;&#x4E2D;&#x53BB;&#x9664;&#x3002; &#x65B9;&#x6CD5;2&#xFF1A;&#x5C06;org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration&#x4E0D;&#x6CE8;&#x5165;spring&#x4E2D;&#xFF1A; 1234567891011121314import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.EnableAutoConfiguration;import org.springframework.boot.autoconfigure.SpringBootApplication;import org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration;@SpringBootApplication@EnableAutoConfiguration(exclude = {SecurityAutoConfiguration.class})public class SecurityDemoApplication { public static void main(String[] args) { SpringApplication.run(SecurityDemoApplication.class, args); }} &#x65B9;&#x6CD5;3&#xFF1A;&#x5DF1;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x7C7B;&#x7EE7;&#x627F;&#x81EA;WebSecurityConfigurerAdapter&#xFF0C;&#x5E76;&#x91CD;&#x5199;configure(HttpSecurity http)&#x65B9;&#x6CD5;&#xFF1A; 1234567891011121314151617181920212223242526import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;import org.springframework.security.core.userdetails.UserDetailsService;@Configuration@EnableWebSecuritypublic class WebSecurityConfig extends WebSecurityConfigurerAdapter { @Override protected void configure(HttpSecurity http) throws Exception { http.authorizeRequests().antMatchers(&quot;/**&quot;).permitAll(); } /** * &#x914D;&#x7F6E;&#x4E00;&#x4E2A;userDetailsService Bean * &#x4E0D;&#x518D;&#x751F;&#x6210;&#x9ED8;&#x8BA4;security.user&#x7528;&#x6237; */ @Bean @Override protected UserDetailsService userDetailsService() { return super.userDetailsService(); }} &#x6CE8;&#x610F;&#xFF1A;WebSecurityConfigurerAdapter&#x662F;&#x4E00;&#x4E2A;&#x9002;&#x914D;&#x5668;&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x4E3A;&#x4E86;&#x4F7F;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x914D;&#x7F6E;&#x7C7B;&#x89C1;&#x540D;&#x77E5;&#x4E49;&#xFF0C;&#x6240;&#x4EE5;&#x5199;&#x6210;&#x4E86;WebSecurityConfig&#x3002;&#x540C;&#x65F6;&#x589E;&#x52A0;&#x4E86;@EnableWebSecurity&#x6CE8;&#x89E3;&#x5230;&#x4E86; spring security &#x4E2D;&#x3002; &#x81EA;&#x5B9A;&#x4E49;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#x6CE8;&#x610F;&#x4E8B;&#x9879;springsucrity &#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#x7684;&#x6838;&#x5FC3;&#x5747;&#x5728;&#x4E0A;&#x8FF0;&#x7684;WebSecurityConfigurerAdapter&#x7C7B;&#x4E2D;&#xFF0C;&#x7528;&#x6237;&#x60F3;&#x8981;&#x4E2A;&#x6027;&#x5316;&#x7684;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x903B;&#x8F91;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5199;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x914D;&#x7F6E;&#x7C7B;&#xFF0C;&#x9002;&#x914D;&#x5230; spring security &#x4E2D;&#xFF1A; &#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;&#x914D;&#x7F6E;&#x4E86;&#x4E24;&#x4E2A;&#x4EE5;&#x4E0A;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x62A5;WebSecurityConfigurers&#x4E0D;&#x552F;&#x4E00;&#x7684;&#x9519;&#x8BEF;&#xFF1A;java.lang.IllegalStateException: @Order on WebSecurityConfigurers must be unique. 12345678910111213@Configuration@EnableWebSecuritypublic class BrowerSecurityConfig extends WebSecurityConfigurerAdapter { @Override protected void configure(HttpSecurity http) throws Exception { http.formLogin() // &#x5B9A;&#x4E49;&#x5F53;&#x9700;&#x8981;&#x63D0;&#x4EA4;&#x8868;&#x5355;&#x8FDB;&#x884C;&#x7528;&#x6237;&#x767B;&#x5F55;&#x65F6;&#x5019;&#xFF0C;&#x8F6C;&#x5230;&#x7684;&#x767B;&#x5F55;&#x9875;&#x9762;&#x3002; .and() .authorizeRequests() // &#x5B9A;&#x4E49;&#x54EA;&#x4E9B;URL&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4;&#x3001;&#x54EA;&#x4E9B;&#x4E0D;&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4; .anyRequest() // &#x4EFB;&#x4F55;&#x8BF7;&#x6C42;,&#x767B;&#x5F55;&#x540E;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE; .authenticated(); }} &#x81EA;&#x5B9A;&#x4E49;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x5BC6;&#x7801;&#x52A0;&#x5BC6;&#x6CE8;&#x610F;&#x4E8B;&#x9879;&#x5C06;&#x7528;&#x6237;&#x540D;&#x5BC6;&#x7801;&#x8BBE;&#x7F6E;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x7528;&#x6237;&#x767B;&#x5F55;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x6821;&#x9A8C;&#x5185;&#x5B58;&#x4E2D;&#x914D;&#x7F6E;&#x7684;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#xFF1A; &#x5728;&#x65E7;&#x7248;&#x672C;&#x7684; spring security &#x4E2D;&#xFF0C;&#x5728;&#x4E0A;&#x8FF0;&#x81EA;&#x5B9A;&#x4E49;&#x7684;BrowerSecurityConfig &#x4E2D;&#x914D;&#x7F6E;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x5373;&#x53EF;&#xFF1A; 1234@Overrideprotected void configure(AuthenticationManagerBuilder auth) throws Exception { auth.inMemoryAuthentication().withUser(&quot;admin&quot;).password(&quot;admin&quot;).roles(&quot;ADMIN&quot;);} &#x4F46;&#x662F;&#x5728;&#x65B0;&#x7248;&#x672C;&#x4E2D;&#xFF0C;&#x542F;&#x52A8;&#x8FD0;&#x884C;&#x90FD;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x4E00;&#x65E6;&#x7528;&#x6237;&#x6B63;&#x786E;&#x767B;&#x5F55;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x62A5;&#x5F02;&#x5E38;&#xFF1A; 1java.lang.IllegalArgumentException: There is no PasswordEncoder mapped for the id &quot;null&quot; &#x56E0;&#x4E3A;&#x5728; Spring security 5.0 &#x4E2D;&#x65B0;&#x589E;&#x4E86;&#x591A;&#x79CD;&#x52A0;&#x5BC6;&#x65B9;&#x5F0F;&#xFF0C;&#x4E5F;&#x6539;&#x53D8;&#x4E86;&#x5BC6;&#x7801;&#x7684;&#x683C;&#x5F0F;&#x3002;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x8BF4;&#x660E;&#xFF1A;Password Storage Format &#x4E0A;&#x9762;&#x8FD9;&#x6BB5;&#x8BDD;&#x7684;&#x610F;&#x601D;&#x662F;&#xFF0C;&#x73B0;&#x5728;&#x65B0;&#x7684; Spring Security &#x4E2D;&#x5BF9;&#x5BC6;&#x7801;&#x7684;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#x662F;&quot;{id}&#x2026;&#x2026;&quot;&#x3002;&#x524D;&#x9762;&#x7684; id &#x662F;&#x52A0;&#x5BC6;&#x65B9;&#x5F0F;&#xFF0C;id &#x53EF;&#x4EE5;&#x662F;bcrypt&#x3001;sha256&#x7B49;&#xFF0C;&#x540E;&#x9762;&#x7D27;&#x8DDF;&#x7740;&#x662F;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x52A0;&#x5BC6;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5BC6;&#x7801;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x7A0B;&#x5E8F;&#x63A5;&#x6536;&#x5230;&#x5185;&#x5B58;&#x6216;&#x8005;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x5230;&#x7684;&#x5BC6;&#x7801;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x67E5;&#x627E;&#x88AB;{}&#x5305;&#x62EC;&#x8D77;&#x6765;&#x7684;id&#xFF0C;&#x4EE5;&#x786E;&#x5B9A;&#x540E;&#x9762;&#x7684;&#x5BC6;&#x7801;&#x662F;&#x88AB;&#x4EC0;&#x4E48;&#x52A0;&#x5BC6;&#x7C7B;&#x578B;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#x5C31;&#x8BA4;&#x4E3A; id &#x662F; null&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x7A0B;&#x5E8F;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;There is no PasswordEncoder mapped for the id &quot;null&quot;&#x3002;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E3E;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#x662F;&#x5404;&#x79CD;&#x52A0;&#x5BC6;&#x65B9;&#x5F0F;&#x9488;&#x5BF9;&#x540C;&#x4E00;&#x5BC6;&#x7801;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5B58;&#x50A8;&#x5F62;&#x5F0F;&#xFF0C;&#x539F;&#x59CB;&#x5BC6;&#x7801;&#x90FD;&#x662F;&#x201D;password&#x201D;&#x3002; &#x5BC6;&#x7801;&#x52A0;&#x5BC6;&#x8981;&#x60F3;&#x6211;&#x4EEC;&#x7684;&#x9879;&#x76EE;&#x8FD8;&#x80FD;&#x591F;&#x6B63;&#x5E38;&#x767B;&#x9646;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x524D;&#x7AEF;&#x4F20;&#x8FC7;&#x6765;&#x7684;&#x5BC6;&#x7801;&#x8FDB;&#x884C;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x52A0;&#x5BC6;&#xFF0C;&#x5B98;&#x65B9;&#x63A8;&#x8350;&#x7684;&#x662F;&#x4F7F;&#x7528;bcrypt&#x52A0;&#x5BC6;&#x65B9;&#x5F0F;&#xFF08;&#x4E0D;&#x7528;&#x7528;&#x6237;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x539F;&#x5BC6;&#x7801;&#x751F;&#x6210;&#x7684;&#x5BC6;&#x6587;&#x662F;&#x4E0D;&#x540C;&#x7684;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5728; configure &#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x6307;&#x5B9A;&#x4E00;&#x4E0B;&#xFF1A; 123456789@Overrideprotected void configure(AuthenticationManagerBuilder auth) throws Exception { // auth.inMemoryAuthentication().withUser(&quot;admin&quot;).password(&quot;admin&quot;).roles(&quot;ADMIN&quot;); auth.inMemoryAuthentication() .passwordEncoder(new BCryptPasswordEncoder()) .withUser(&quot;admin&quot;) .password(new BCryptPasswordEncoder().encode(&quot;admin&quot;)) .roles(&quot;ADMIN&quot;);} &#x5F53;&#x7136;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;passwordEncoder&#x914D;&#x7F6E;&#x62BD;&#x79BB;&#x51FA;&#x6765;&#xFF1A; 1234@Beanpublic BCryptPasswordEncoder passwordEncoder() { return new BCryptPasswordEncoder();} &#x81EA;&#x5B9A;&#x4E49;&#x5230;&#x5185;&#x5B58;1234567@Overrideprotected void configure(AuthenticationManagerBuilder auth) throws Exception { auth.inMemoryAuthentication() .withUser(&quot;admin&quot;) .password(new BCryptPasswordEncoder().encode(&quot;admin&quot;)) .roles(&quot;ADMIN&quot;);} &#x81EA;&#x5B9A;&#x4E49;&#x5230;&#x4EE3;&#x7801;&#x8FD9;&#x91CC;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x66F4;&#x4F18;&#x96C5;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5B9E;&#x73B0;org.springframework.security.core.userdetails.UserDetailsService&#x63A5;&#x53E3;&#xFF0C;&#x91CD;&#x8F7D;loadUserByUsername(String username)&#x65B9;&#x6CD5;&#xFF0C;&#x5F53;&#x7528;&#x6237;&#x767B;&#x5F55;&#x65F6;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;UserDetailsService&#x63A5;&#x53E3;&#x7684;loadUserByUsername()&#x6765;&#x6821;&#x9A8C;&#x7528;&#x6237;&#x7684;&#x5408;&#x6CD5;&#x6027;&#xFF08;&#x5BC6;&#x7801;&#x548C;&#x6743;&#x9650;&#xFF09;&#x3002; &#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x4E3A;&#x4E4B;&#x540E;&#x7ED3;&#x5408;&#x6570;&#x636E;&#x5E93;&#x6216;&#x8005;JWT&#x52A8;&#x6001;&#x6821;&#x9A8C;&#x6253;&#x4E0B;&#x6280;&#x672F;&#x53EF;&#x884C;&#x6027;&#x57FA;&#x7840;&#x3002; 1234567891011@Servicepublic class MyUserDetailsService implements UserDetailsService { @Override public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException { Collection&lt;GrantedAuthority&gt; authorities = new ArrayList&lt;&gt;(); authorities.add(new SimpleGrantedAuthority(&quot;ADMIN&quot;)); return new User(&quot;root&quot;, new BCryptPasswordEncoder().encode(&quot;root&quot;), authorities); } } &#x5F53;&#x7136;&#xFF0C;&#x201D;&#x81EA;&#x5B9A;&#x4E49;&#x5230;&#x5185;&#x5B58;&#x201D;&#x4E2D;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x7684;configure(AuthenticationManagerBuilder auth)&#x914D;&#x7F6E;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x914D;&#x7F6E;&#x4E00;&#x904D;&#x4E86;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x5BF9;&#x4E8E;&#x8FD4;&#x56DE;&#x7684;UserDetails&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6846;&#x67B6;&#x81EA;&#x5DF1;&#x7684; User&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A; UserDetails &#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x5176;&#x4E2D;&#x5BC6;&#x7801;&#x548C;&#x6743;&#x9650;&#x90FD;&#x5E94;&#x8BE5;&#x4ECE;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x8BFB;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5199;&#x6B7B;&#x5728;&#x4EE3;&#x7801;&#x91CC;&#x3002; &#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x5C06;&#x52A0;&#x5BC6;&#x7C7B;&#x578B;&#x62BD;&#x79BB;&#x51FA;&#x6765;&#xFF0C;&#x5B9E;&#x73B0;UserDetailsService&#x63A5;&#x53E3;&#xFF0C;&#x5C06;&#x4E24;&#x8005;&#x6CE8;&#x5165;&#x5230;AuthenticationManagerBuilder&#x4E2D;&#xFF1A; 1234567891011121314151617@Configuration@EnableWebSecuritypublic class WebSecurityConfig extends WebSecurityConfigurerAdapter { @Autowired private UserDetailsService userDetailsService; @Bean public BCryptPasswordEncoder passwordEncoder() { return new BCryptPasswordEncoder(); } @Override protected void configure(AuthenticationManagerBuilder auth) throws Exception { auth.userDetailsService(userDetailsService) .passwordEncoder(passwordEncoder()); }} UserDetailsService&#x63A5;&#x53E3;&#x5B9E;&#x73B0;&#x7C7B;&#xFF1A; 1234567891011121314151617181920212223import java.util.ArrayList;import java.util.Collection;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.User;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.stereotype.Service;@Servicepublic class MyUserDetailsService implements UserDetailsService { @Override public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException { Collection&lt;GrantedAuthority&gt; authorities = new ArrayList&lt;&gt;(); authorities.add(new SimpleGrantedAuthority(&quot;ADMIN&quot;)); return new User(&quot;root&quot;, new BCryptPasswordEncoder().encode(&quot;root&quot;), authorities); } } &#x8FD9;&#x91CC;&#x7684; User &#x5BF9;&#x8C61;&#x662F;&#x6846;&#x67B6;&#x63D0;&#x4F9B;&#x7684;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x5BF9;&#x8C61;&#xFF0C;&#x6CE8;&#x610F;&#x5305;&#x540D;&#x662F;&#xFF1A;org.springframework.security.core.userdetails.User&#xFF0C;&#x91CC;&#x9762;&#x7684;&#x5C5E;&#x6027;&#x4E2D;&#x6700;&#x6838;&#x5FC3;&#x7684;&#x5C31;&#x662F;password&#xFF0C;username&#x548C;authorities&#x3002; &#x81EA;&#x5B9A;&#x4E49;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#x914D;&#x7F6E;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x767B;&#x5F55;&#x9875;&#x9762;&#xFF1A; 1234567891011@Overrideprotected void configure(HttpSecurity http) throws Exception { http.formLogin() // &#x5B9A;&#x4E49;&#x5F53;&#x9700;&#x8981;&#x7528;&#x6237;&#x767B;&#x5F55;&#x65F6;&#x5019;&#xFF0C;&#x8F6C;&#x5230;&#x7684;&#x767B;&#x5F55;&#x9875;&#x9762;&#x3002; .loginPage(&quot;/login&quot;) // &#x8BBE;&#x7F6E;&#x767B;&#x5F55;&#x9875;&#x9762; .loginProcessingUrl(&quot;/user/login&quot;) // &#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x767B;&#x5F55;&#x63A5;&#x53E3; .defaultSuccessUrl(&quot;/home&quot;).permitAll() // &#x767B;&#x5F55;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x9ED8;&#x8BA4;&#x8DF3;&#x8F6C;&#x7684;&#x9875;&#x9762; .and().authorizeRequests() // &#x5B9A;&#x4E49;&#x54EA;&#x4E9B;URL&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4;&#x3001;&#x54EA;&#x4E9B;&#x4E0D;&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4; .antMatchers(&quot;/&quot;, &quot;/index&quot;&#xFF0C;&quot;/user/login&quot;).permitAll() // &#x8BBE;&#x7F6E;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x767B;&#x5F55;&#x9875;&#x9762; .anyRequest().authenticated() // &#x4EFB;&#x4F55;&#x8BF7;&#x6C42;,&#x767B;&#x5F55;&#x540E;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE; .and().csrf().disable(); // &#x5173;&#x95ED;csrf&#x9632;&#x62A4;} &#x4ECE;&#x4E0A;&#x8FF0;&#x914D;&#x7F6E;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x7528;&#x53EF;&#x4EE5;&#x6240;&#x6709;&#x8BBF;&#x5BA2;&#x5747;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x767B;&#x5F55;/&#x548C;/index&#x8FDB;&#x884C;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#xFF0C;&#x540C;&#x65F6;&#x914D;&#x7F6E;&#x4E86;&#x4E00;&#x4E2A;&#x767B;&#x5F55;&#x7684;&#x63A5;&#x53E3;/lgoin&#xFF0C;&#x4F7F;&#x7528;mvc&#x505A;&#x4E86;&#x89C6;&#x56FE;&#x6620;&#x5C04;&#xFF08;&#x6620;&#x5C04;&#x5230;&#x6A21;&#x677F;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E2D;&#x7684;login.html&#xFF09;&#xFF0C;controller &#x6620;&#x5C04;&#x4EE3;&#x7801;&#x592A;&#x7B80;&#x5355;&#x5C31;&#x4E0D;&#x8D58;&#x8FF0;&#x4E86;&#xFF0C;&#x5F53;&#x7528;&#x6237;&#x6210;&#x529F;&#x767B;&#x5F55;&#x4E4B;&#x540E;&#xFF0C;&#x9875;&#x9762;&#x4F1A;&#x81EA;&#x52A8;&#x8DF3;&#x8F6C;&#x81F3;/home&#x9875;&#x9762;&#x3002; &#x4E0A;&#x8FF0;&#x56FE;&#x7247;&#x4E2D;&#x7684;&#x914D;&#x7F6E;&#x6709;&#x70B9;&#x5C0F;&#x5C0F;&#x7F3A;&#x9677;&#xFF0C;&#x5F53;&#x53BB;&#x6389;.loginProcessUrl()&#x7684;&#x914D;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x767B;&#x5F55;&#x5B8C;&#x6BD5;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x4F1A;&#x4E00;&#x76F4;&#x91CD;&#x5B9A;&#x5411;&#xFF0C;&#x76F4;&#x81F3;&#x62A5;&#x91CD;&#x5B9A;&#x5411;&#x5931;&#x8D25;&#x3002;&#x56E0;&#x4E3A;&#x767B;&#x5F55;&#x6210;&#x529F;&#x7684; url &#x6CA1;&#x6709;&#x914D;&#x7F6E;&#x6210;&#x6240;&#x6709;&#x4EBA;&#x5747;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#xFF0C;&#x56E0;&#x6B64;&#x9020;&#x6210;&#x4E86;&#x6B7B;&#x5FAA;&#x73AF;&#x7684;&#x7ED3;&#x679C;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x914D;&#x7F6E;&#x4E86;&#x767B;&#x5F55;&#x754C;&#x9762;&#x5C31;&#x9700;&#x8981;&#x914D;&#x7F6E;&#x4EFB;&#x610F;&#x53EF;&#x8BBF;&#x95EE;&#xFF1A;.antMatchers(&quot;/user/login&quot;).permitAll() login.html&#x4EE3;&#x7801;&#xFF1A; 12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;&#x767B;&#x5F55;&#x9875;&#x9762;&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h2&gt;&#x81EA;&#x5B9A;&#x4E49;&#x767B;&#x5F55;&#x9875;&#x9762;&lt;/h2&gt; &lt;form action=&quot;/user/login&quot; method=&quot;post&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;&#x7528;&#x6237;&#x540D;&#xFF1A;&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&#x5BC6;&#x7801;&#xFF1A;&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot;&gt;&lt;button type=&quot;submit&quot;&gt;&#x767B;&#x5F55;&lt;/button&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; &#x9759;&#x6001;&#x8D44;&#x6E90;&#x5FFD;&#x7565;&#x914D;&#x7F6E;&#x4E0A;&#x8FF0;&#x914D;&#x7F6E;&#x7528;&#x6237;&#x8BA4;&#x8BC1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F1A;&#x53D1;&#x73B0;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x4E5F;&#x88AB;&#x5B89;&#x5168;&#x6846;&#x67B6;&#x6321;&#x5728;&#x4E86;&#x5916;&#x9762;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x5B89;&#x5168;&#x914D;&#x7F6E;&#xFF1A; 1234@Overridepublic void configure(WebSecurity web) throws Exception { web.ignoring().antMatchers(&quot;/webjars/**/*&quot;, &quot;/**/*.css&quot;, &quot;/**/*.js&quot;);} &#x73B0;&#x5728;&#x524D;&#x7AEF;&#x6846;&#x67B6;&#x7684;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;webjars&#x7EDF;&#x4E00;&#x7BA1;&#x7406;&#xFF0C;&#x56E0;&#x6B64;&#x6CE8;&#x610F;&#x914D;&#x7F6E;/webjars/**/*&#x3002; &#x5904;&#x7406;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x8BF7;&#x6C42;&#x524D;&#x540E;&#x7AEF;&#x5206;&#x79BB;&#x7684;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x4E00;&#x822C;&#x540E;&#x7AEF;&#x4EC5;&#x63D0;&#x4F9B;&#x63A5;&#x53E3; JSON &#x683C;&#x5F0F;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4EE5;&#x4F9B;&#x524D;&#x7AEF;&#x81EA;&#x884C;&#x8C03;&#x7528;&#x3002;&#x521A;&#x624D;&#x90A3;&#x6837;&#xFF0C;&#x8C03;&#x7528;&#x4E86;&#x88AB;&#x4FDD;&#x62A4;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x76F4;&#x63A5;&#x8FDB;&#x884C;&#x4E86;&#x9875;&#x9762;&#x7684;&#x8DF3;&#x8F6C;&#xFF0C;&#x5728;web&#x7AEF;&#x8FD8;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#xFF0C;&#x4F46;&#x662F;&#x5728; App &#x7AEF;&#x5C31;&#x4E0D;&#x884C;&#x4E86;&#xFF0C; &#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x8FD8;&#x9700;&#x8981;&#x505A;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x5904;&#x7406;&#x3002;&#x8FD9;&#x91CC;&#x505A;&#x4E00;&#x4E0B;&#x7B80;&#x5355;&#x7684;&#x601D;&#x8DEF;&#x6574;&#x7406; &#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x601D;&#x8DEF;&#xFF0C;&#x6838;&#x5FC3;&#x5728;&#x4E8E;&#x8FD0;&#x7528;&#x5B89;&#x5168;&#x6846;&#x67B6;&#x7684;&#xFF1A;RequestCache&#x548C;RedirectStrategy 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950import java.io.IOException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.http.HttpStatus;import org.springframework.security.web.DefaultRedirectStrategy;import org.springframework.security.web.RedirectStrategy;import org.springframework.security.web.savedrequest.HttpSessionRequestCache;import org.springframework.security.web.savedrequest.RequestCache;import org.springframework.security.web.savedrequest.SavedRequest;import org.springframework.util.StringUtils;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseStatus;import org.springframework.web.bind.annotation.RestController;import lombok.extern.slf4j.Slf4j;@Slf4j@RestControllerpublic class BrowserSecurityController { // &#x539F;&#x8BF7;&#x6C42;&#x4FE1;&#x606F;&#x7684;&#x7F13;&#x5B58;&#x53CA;&#x6062;&#x590D; private RequestCache requestCache = new HttpSessionRequestCache(); // &#x7528;&#x4E8E;&#x91CD;&#x5B9A;&#x5411; private RedirectStrategy redirectStrategy = new DefaultRedirectStrategy(); /** * &#x5F53;&#x9700;&#x8981;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8DF3;&#x8F6C;&#x8FC7;&#x6765; * @param request * @param response * @return */ @RequestMapping(&quot;/authentication/require&quot;) @ResponseStatus(code = HttpStatus.UNAUTHORIZED) public String requireAuthenication(HttpServletRequest request, HttpServletResponse response) throws IOException { SavedRequest savedRequest = requestCache.getRequest(request, response); if (savedRequest != null) { String targetUrl = savedRequest.getRedirectUrl(); log.info(&quot;&#x5F15;&#x53D1;&#x8DF3;&#x8F6C;&#x7684;&#x8BF7;&#x6C42;&#x662F;:&quot; + targetUrl); if (StringUtils.endsWithIgnoreCase(targetUrl, &quot;.html&quot;)) { redirectStrategy.sendRedirect(request, response, &quot;/login.html&quot;); } } return &quot;&#x8BBF;&#x95EE;&#x7684;&#x670D;&#x52A1;&#x9700;&#x8981;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#xFF0C;&#x8BF7;&#x5F15;&#x5BFC;&#x7528;&#x6237;&#x5230;&#x767B;&#x5F55;&#x9875;&quot;; }} &#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x4E2A;/authentication/require&#x9700;&#x8981;&#x914D;&#x7F6E;&#x5230;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#xFF1A;&#x914D;&#x7F6E;&#x6210;&#x9ED8;&#x8BA4;&#x767B;&#x5F55;&#x754C;&#x9762;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x6210;&#x4EFB;&#x4F55;&#x4EBA;&#x5747;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x91CD;&#x5B9A;&#x5411;&#x7684;&#x9875;&#x9762;&#x53EF;&#x4EE5;&#x8BBE;&#x8BA1;&#x6210;&#x914D;&#x7F6E;&#xFF0C;&#x4ECE;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x8BFB;&#x53D6;&#x3002; &#x81EA;&#x5B9A;&#x4E49;&#x5904;&#x7406;&#x767B;&#x5F55;&#x6210;&#x529F;/&#x5931;&#x8D25;&#x5728;&#x524D;&#x540E;&#x7AEF;&#x5206;&#x79BB;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x767B;&#x5F55;&#x6210;&#x529F;&#x4E86;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x5411;&#x524D;&#x7AEF;&#x8FD4;&#x56DE;&#x7528;&#x6237;&#x7684;&#x4E2A;&#x4EBA;&#x4FE1;&#x606F;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x76F4;&#x63A5;&#x8FDB;&#x884C;&#x8DF3;&#x8F6C;&#x3002;&#x767B;&#x5F55;&#x5931;&#x8D25;&#x4E5F;&#x662F;&#x540C;&#x6837;&#x7684;&#x9053;&#x7406;&#x3002;&#x8FD9;&#x91CC;&#x6D89;&#x53CA;&#x5230;&#x4E86; Spring Security &#x4E2D;&#x7684;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;AuthenticationSuccessHandler&#x548C;AuthenticationFailureHandler&#x3002;&#x81EA;&#x5B9A;&#x4E49;&#x8FD9;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x914D;&#x7F6E;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; &#x5F53;&#x7136;&#x6846;&#x67B6;&#x662F;&#x6709;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7EE7;&#x627F;&#x8FD9;&#x4E2A;&#x5B9E;&#x73B0;&#x7C7B;&#x518D;&#x6765;&#x81EA;&#x5B9A;&#x4E49;&#x81EA;&#x5DF1;&#x7684;&#x4E1A;&#x52A1;&#xFF1A; &#x6210;&#x529F;&#x767B;&#x5F55;&#x5904;&#x7406;&#x7C7B;12345678910111213141516171819202122232425262728293031import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.Authentication;import org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler;import org.springframework.stereotype.Component;import com.fasterxml.jackson.databind.ObjectMapper;import lombok.extern.slf4j.Slf4j;@Slf4j@Component(&quot;myAuthenctiationSuccessHandler&quot;)public class MyAuthenctiationSuccessHandler extends SimpleUrlAuthenticationSuccessHandler { @Autowired private ObjectMapper objectMapper; @Override public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException { log.info(&quot;&#x767B;&#x5F55;&#x6210;&#x529F;&quot;); response.setContentType(&quot;application/json;charset=UTF-8&quot;); response.getWriter().write(objectMapper.writeValueAsString(authentication)); }} &#x6210;&#x529F;&#x767B;&#x5F55;&#x4E4B;&#x540E;&#xFF0C;&#x901A;&#x8FC7; response &#x8FD4;&#x56DE;&#x4E00;&#x4E2A; JSON &#x5B57;&#x7B26;&#x4E32;&#x56DE;&#x53BB;&#x3002;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4E2D;&#x7684;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;Authentication&#xFF0C;&#x5B83;&#x91CC;&#x9762;&#x5305;&#x542B;&#x4E86;&#x767B;&#x5F55;&#x540E;&#x7684;&#x7528;&#x6237;&#x4FE1;&#x606F;&#xFF08;UserDetails&#xFF09;&#xFF0C;Session &#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x767B;&#x5F55;&#x4FE1;&#x606F;&#x7B49;&#x3002; &#x767B;&#x5F55;&#x6210;&#x529F;&#x4E4B;&#x540E;&#x7684;&#x54CD;&#x5E94;JSON&#xFF1A; 123456789101112131415161718192021222324252627{ &quot;authorities&quot;: [ { &quot;authority&quot;: &quot;ROLE_admin&quot; } ], &quot;details&quot;: { &quot;remoteAddress&quot;: &quot;127.0.0.1&quot;, &quot;sessionId&quot;: &quot;8BFA4F61A7CEA774C00F616AAE8C307C&quot; }, &quot;authenticated&quot;: true, &quot;principal&quot;: { &quot;password&quot;: null, &quot;username&quot;: &quot;admin&quot;, &quot;authorities&quot;: [ { &quot;authority&quot;: &quot;ROLE_admin&quot; } ], &quot;accountNonExpired&quot;: true, &quot;accountNonLocked&quot;: true, &quot;credentialsNonExpired&quot;: true, &quot;enabled&quot;: true }, &quot;credentials&quot;: null, &quot;name&quot;: &quot;admin&quot;} &#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x7EC6;&#x8282;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A; principal &#x4E2D;&#x6709;&#x4E2A;&#x6743;&#x9650;&#x6570;&#x7EC4;&#x96C6;&#x5408;authorities&#xFF0C;&#x91CC;&#x9762;&#x7684;&#x6743;&#x9650;&#x503C;&#x662F;&#xFF1A;ROLE_admin&#xFF0C;&#x800C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x914D;&#x7F6E;&#x4E2D;&#x914D;&#x7F6E;&#x7684;&#x662F;&#xFF1A;admin&#xFF0C;&#x6240;&#x4EE5;ROLE_&#x524D;&#x7F00;&#x662F;&#x6846;&#x67B6;&#x81EA;&#x5DF1;&#x52A0;&#x7684;&#xFF0C;&#x540E;&#x671F;&#x53D6;&#x51FA;&#x6743;&#x9650;&#x96C6;&#x5408;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x8FD9;&#x4E2A;&#x7EC6;&#x8282;&#xFF0C;&#x4EE5;&#x53D6;&#x51B3;&#x4E8E;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x6743;&#x9650;&#x662F;&#x4F7F;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5305;&#x542B;&#x5173;&#x7CFB;&#x8FD8;&#x662F;&#x7B49;&#x503C;&#x5173;&#x7CFB;&#x3002; &#x767B;&#x5F55;&#x5931;&#x8D25;&#x5904;&#x7406;&#x7C7B;123456789101112131415161718192021222324252627282930313233import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.security.core.AuthenticationException;import org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler;import org.springframework.stereotype.Component;import com.fasterxml.jackson.databind.ObjectMapper;import lombok.extern.slf4j.Slf4j;@Slf4j@Component(&quot;myAuthenctiationFailureHandler&quot;)public class MyAuthenctiationFailureHandler extends SimpleUrlAuthenticationFailureHandler { @Autowired private ObjectMapper objectMapper; @Override public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException { log.info(&quot;&#x767B;&#x5F55;&#x5931;&#x8D25;&quot;); response.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value()); response.setContentType(&quot;application/json;charset=UTF-8&quot;); response.getWriter().write(objectMapper.writeValueAsString(exception.getMessage())); }} &#x5C06;&#x4E24;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5904;&#x7406;&#x7C7B;&#x914D;&#x7F6E;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.woodwhale.king.handler.MyAuthenctiationFailureHandler;import org.woodwhale.king.handler.MyAuthenctiationSuccessHandler;@Configuration@EnableWebSecuritypublic class WebSecurityConfig extends WebSecurityConfigurerAdapter { @Autowired private MyAuthenctiationFailureHandler myAuthenctiationFailureHandler; @Autowired private MyAuthenctiationSuccessHandler myAuthenctiationSuccessHandler; @Override protected void configure(HttpSecurity http) throws Exception { http.formLogin() // &#x5B9A;&#x4E49;&#x5F53;&#x9700;&#x8981;&#x7528;&#x6237;&#x767B;&#x5F55;&#x65F6;&#x5019;&#xFF0C;&#x8F6C;&#x5230;&#x7684;&#x767B;&#x5F55;&#x9875;&#x9762;&#x3002; .loginPage(&quot;/login&quot;) // &#x8BBE;&#x7F6E;&#x767B;&#x5F55;&#x9875;&#x9762; .loginProcessingUrl(&quot;/user/login&quot;) // &#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x767B;&#x5F55;&#x63A5;&#x53E3; .successHandler(myAuthenctiationSuccessHandler) .failureHandler(myAuthenctiationFailureHandler) //.defaultSuccessUrl(&quot;/home&quot;).permitAll() // &#x767B;&#x5F55;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x9ED8;&#x8BA4;&#x8DF3;&#x8F6C;&#x7684;&#x9875;&#x9762; .and().authorizeRequests() // &#x5B9A;&#x4E49;&#x54EA;&#x4E9B;URL&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4;&#x3001;&#x54EA;&#x4E9B;&#x4E0D;&#x9700;&#x8981;&#x88AB;&#x4FDD;&#x62A4; .antMatchers(&quot;/&quot;, &quot;/index&quot;).permitAll() // &#x8BBE;&#x7F6E;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x767B;&#x5F55;&#x9875;&#x9762; .anyRequest().authenticated() // &#x4EFB;&#x4F55;&#x8BF7;&#x6C42;,&#x767B;&#x5F55;&#x540E;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE; .and().csrf().disable(); // &#x5173;&#x95ED;csrf&#x9632;&#x62A4; } @Override protected void configure(AuthenticationManagerBuilder auth) throws Exception { auth.inMemoryAuthentication() .passwordEncoder(new BCryptPasswordEncoder()).withUser(&quot;admin&quot;) .password(new BCryptPasswordEncoder().encode(&quot;admin&quot;)) .roles(&quot;admin&quot;); }} &#x6CE8;&#x610F;&#xFF1A;defaultSuccessUrl&#x4E0D;&#x9700;&#x8981;&#x518D;&#x914D;&#x7F6E;&#x4E86;&#xFF0C;&#x5B9E;&#x6D4B;&#x5982;&#x679C;&#x914D;&#x7F6E;&#x4E86;&#xFF0C;&#x6210;&#x529F;&#x767B;&#x5F55;&#x7684; handler &#x5C31;&#x4E0D;&#x8D77;&#x4F5C;&#x7528;&#x4E86;&#x3002; &#x5C0F;&#x7ED3; &#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x901A;&#x8FC7;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x767B;&#x5F55;&#x6210;&#x529F;&#x6216;&#x8005;&#x5931;&#x8D25;&#x7C7B;&#xFF0C;&#x8FDB;&#x884C;&#x767B;&#x5F55;&#x54CD;&#x5E94;&#x63A7;&#x5236;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#xFF0C;&#x4EE5;&#x7075;&#x6D3B;&#x9002;&#x914D;&#x54CD;&#x5E94;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x9875;&#x9762;&#x8FD8;&#x662F; JSON &#x6570;&#x636E;&#x3002; &#x7ED3;&#x5408;thymeleaf&#x5728;&#x524D;&#x7AEF;&#x4F7F;&#x7528;&#x4E86;Thymeleaf&#x8FDB;&#x884C;&#x6E32;&#x67D3;&#xFF0C;&#x7279;&#x4F7F;&#x662F;&#x7ED3;&#x5408;Spring Security&#x5728;&#x524D;&#x7AEF;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x4FE1;&#x606F; &#x4F9D;&#x8D56;&#x6DFB;&#x52A0;&#xFF1A; 1234&lt;dependency&gt; &lt;groupId&gt;org.thymeleaf.extras&lt;/groupId&gt; &lt;artifactId&gt;thymeleaf-extras-springsecurity5&lt;/artifactId&gt;&lt;/dependency&gt; &#x6CE8;&#x610F;&#xFF1A; &#x56E0;&#x4E3A;&#x672C;&#x9879;&#x76EE;&#x4F7F;&#x7528;&#x4E86;spring boot &#x81EA;&#x52A8;&#x7BA1;&#x7406;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x6240;&#x4EE5;&#x5F15;&#x5165;&#x7684;&#x4E00;&#x5B9A;&#x662F;&#x5B8C;&#x5168;&#x5339;&#x914D;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x65E7;&#x7684; spring security &#x7248;&#x672C;&#x9700;&#x8981;&#x624B;&#x52A8;&#x5F15;&#x5165;&#x5BF9;&#x5E94;&#x7684;&#x7248;&#x672C;&#x3002; &#x5F15;&#x7528;&#x5B98;&#x65B9;&#x7248;&#x672C;&#x5F15;&#x7528;&#x8BF4;&#x660E;&#xFF1A; 123thymeleaf-extras-springsecurity3 for integration with Spring Security 3.xthymeleaf-extras-springsecurity4 for integration with Spring Security 4.xthymeleaf-extras-springsecurity5 for integration with Spring Security 5.x &#x5177;&#x4F53;&#x8BED;&#x6CD5;&#x53EF;&#x67E5;&#x770B;&#xFF1A;https://github.com/thymeleaf/thymeleaf-extras-springsecurity &#x5E38;&#x7528;&#x7684;&#x8BED;&#x6CD5;&#x6807;&#x7B7E;&#x8FD9;&#x91CC;&#x4E3A;&#x4E86;&#x8868;&#x8FF0;&#x65B9;&#x4FBF;&#xFF0C;&#x5F15;&#x7528;&#x4E86;&#x4E0A;&#x5C0F;&#x8282;&#x4E2D;&#x7684;&#x201D;&#x81EA;&#x5B9A;&#x4E49;&#x5904;&#x7406;&#x767B;&#x5F55;&#x6210;&#x529F;/&#x5931;&#x8D25;&#x201D;&#x7684;&#x6210;&#x529F;&#x54CD;&#x5E94;JSON&#x6570;&#x636E;&#xFF1A; 123456789101112131415161718192021222324252627{ &quot;authorities&quot;: [ { &quot;authority&quot;: &quot;ROLE_admin&quot; } ], &quot;details&quot;: { &quot;remoteAddress&quot;: &quot;127.0.0.1&quot;, &quot;sessionId&quot;: &quot;8BFA4F61A7CEA774C00F616AAE8C307C&quot; }, &quot;authenticated&quot;: true, &quot;principal&quot;: { &quot;password&quot;: null, &quot;username&quot;: &quot;admin&quot;, &quot;authorities&quot;: [ { &quot;authority&quot;: &quot;ROLE_admin&quot; } ], &quot;accountNonExpired&quot;: true, &quot;accountNonLocked&quot;: true, &quot;credentialsNonExpired&quot;: true, &quot;enabled&quot;: true }, &quot;credentials&quot;: null, &quot;name&quot;: &quot;admin&quot;} sec:authorize=&quot;isAuthenticated()&#xFF1A;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;&#x8BA4;&#x8BC1;&#x901A;&#x8FC7; sec:authorize=&quot;hasRole(&apos;ROLE_ADMIN&apos;)&quot;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;ROLE_ADMIN&#x6743;&#x9650; &#x6CE8;&#x610F;&#xFF1A;&#x4E0A;&#x8FF0;&#x7684;hasRole()&#x6807;&#x7B7E;&#x4F7F;&#x7528;&#x80FD;&#x6210;&#x529F;&#x7684;&#x524D;&#x63D0;&#x662F;&#xFF1A;&#x81EA;&#x5B9A;&#x4E49;&#x7528;&#x6237;&#x7684;&#x6743;&#x9650;&#x5B57;&#x7B26;&#x96C6;&#x5FC5;&#x987B;&#x662F;&#x4EE5;ROLE_&#x4E3A;&#x524D;&#x7F00;&#x7684;&#xFF0C;&#x5426;&#x5219;&#x89E3;&#x6790;&#x4E0D;&#x5230;&#xFF0C;&#x5373;&#x81EA;&#x5B9A;&#x4E49;&#x7684;UserDetailsService &#x5B9E;&#x73B0;&#x7C7B;&#x7684;&#x8FD4;&#x56DE;&#x7528;&#x6237;&#x7684;&#x6743;&#x9650;&#x6570;&#x7EC4;&#x5217;&#x8868;&#x7684;&#x6743;&#x9650;&#x5B57;&#x6BB5;&#x5FC5;&#x987B;&#x662F;ROLE_***&#xFF0C;&#x540C;&#x65F6;&#x5728; html &#x9875;&#x9762;&#x4E2D;&#x6CE8;&#x610F;&#x5F15;&#x5165;&#x5BF9;&#x5E94;&#x7684;xmlns&#xFF0C;&#x672C;&#x4F8B;&#x8FD9;&#x91CC;&#x5F15;&#x7528;&#x4E86;&#xFF1A; 12&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot; xmlns:sec=&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity5&quot;&gt; sec:authentication=&quot;principal.authorities&quot;&#xFF1A;&#x5F97;&#x5230;&#x8BE5;&#x7528;&#x6237;&#x7684;&#x6240;&#x6709;&#x6743;&#x9650;&#x5217;&#x8868; sec:authentication=&quot;principal.username&quot;&#xFF1A;&#x5F97;&#x5230;&#x8BE5;&#x7528;&#x6237;&#x7684;&#x7528;&#x6237;&#x540D; &#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x66F4;&#x591A;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x53EA;&#x8981;UserDetailsService&#x5B9E;&#x73B0;&#x7C7B;&#x4E2D;&#x8FD4;&#x56DE;&#x7684;&#x7528;&#x6237;&#x4E2D;&#x643A;&#x5E26;&#x6709;&#x7684;&#x4FE1;&#x606F;&#x5747;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x3002; &#x5E38;&#x89C1;&#x5F02;&#x5E38;&#x7C7B;12345678AuthenticationException &#x5E38;&#x7528;&#x7684;&#x7684;&#x5B50;&#x7C7B;&#xFF1A;(&#x4F1A;&#x88AB;&#x5E95;&#x5C42;&#x6362;&#x6389;&#xFF0C;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;)UsernameNotFoundException &#x7528;&#x6237;&#x627E;&#x4E0D;&#x5230;BadCredentialsException &#x574F;&#x7684;&#x51ED;&#x636E;AccountStatusException &#x7528;&#x6237;&#x72B6;&#x6001;&#x5F02;&#x5E38;&#x5B83;&#x5305;&#x542B;&#x5982;&#x4E0B;&#x5B50;&#x7C7B;&#xFF1A;&#xFF08;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#xFF09;AccountExpiredException &#x8D26;&#x6237;&#x8FC7;&#x671F;LockedException &#x8D26;&#x6237;&#x9501;&#x5B9A;DisabledException &#x8D26;&#x6237;&#x4E0D;&#x53EF;&#x7528;CredentialsExpiredException &#x8BC1;&#x4E66;&#x8FC7;&#x671F; &#x53C2;&#x8003;&#x8D44;&#x6599;&#xFF1A; https://blog.csdn.net/u013435893/article/details/79596628 https://blog.csdn.net/canon_in_d_major/article/details/79675033 https://juejin.im/post/5c46a49e51882528735ef2d9 https://www.jianshu.com/p/6307c89fe3fa/ https://mp.weixin.qq.com/s/NKhwU6qKKU0Q0diA0hg13Q https://mp.weixin.qq.com/s/sMi1__Rw_s75YDaIdmTWKw https://blog.csdn.net/smd2575624555/article/details/82759863 https://www.cnblogs.com/yyxxn/p/8808851.html https://blog.csdn.net/coder_py/article/details/80330868 &#x53C2;&#x8003;&#x9879;&#x76EE;&#x6E90;&#x7801;&#xFF1A; https://github.com/whyalwaysmea/Spring-Security https://github.com/oycyqr/SpringSecurity https://github.com/chengjiansheng/cjs-springsecurity-example document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Spring Security</category>
      </categories>
      <tags>
        <tag>Spring Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mybatis Plus 学习笔记]]></title>
    <url>%2F2019%2F03%2F28%2F025%2F</url>
    <content type="text"><![CDATA[&#x6CE8;&#x89E3;@TableName&#x8868;&#x540D;&#x6CE8;&#x89E3;&#xFF0C;&#x5F53;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x8868;&#x540D;&#x548C;&#x5B9E;&#x4F53;&#x7C7B;&#x540D;&#x4E4B;&#x95F4;&#x4E0D;&#x80FD;&#x5B8C;&#x5168;&#x5339;&#x914D;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x8FDB;&#x884C;&#x7ED1;&#x5B9A;&#x3002; &#x5982;&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8868;&#x540D;&#x4E3A;t_student&#xFF0C;&#x800C;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x7C7B;&#x540D;&#x4E3A;&#xFF1A;Student&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5728;&#x8BE5;&#x7C7B;&#x4E0A;&#x589E;&#x52A0;&#x6CE8;&#x89E3;&#xFF1A; 1234@TableName(value = &quot;t_student&quot;&#xFF09;public class Student { private Long stuId; } &#x5168;&#x5C40;&#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x5E93;&#x8868;&#x524D;&#x7F00;&#x5F53;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x8868;&#x540D;&#x524D;&#x6709;&#x524D;&#x7F00;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x6BCF;&#x6B21;&#x6307;&#x5B9A;@TableName&#x6CE8;&#x89E3;&#xFF0C;&#x5F88;&#x9EBB;&#x70E6;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5168;&#x5C40;&#x914D;&#x7F6E;&#xFF1A; 1234mybatis-plus: global-config: db-config: table-prefix: &quot;t_&quot; @TableId&#x4E3B;&#x952E;&#x6CE8;&#x89E3;&#xFF0C;&#x5F53;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x4E3B;&#x952E;&#x548C;&#x5B9E;&#x4F53;&#x7C7B;&#x4E2D;&#x4E3B;&#x952E;&#x5C5E;&#x6027;&#x4E0D;&#x540C;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x8FDB;&#x884C;&#x7ED1;&#x5B9A;&#x3002;&#x5982;&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E2D;&#x7684;&#x4E3B;&#x952E;&#x662F;id&#xFF0C;&#x800C;&#x5B9E;&#x4F53;&#x7C7B;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x503C;&#x662F;stuId&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5728;&#x5B9E;&#x4F53;&#x7C7B;&#x4E3B;&#x952E;&#x5C5E;&#x6027;&#x4E0A;&#x52A0;&#x4E0A;&#x6CE8;&#x89E3; 1234public class Student { @TableId(value = &quot;id&quot;) private Long stuId; } IdType@TableId&#x6CE8;&#x89E3;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x914D;&#x7F6E;&#x662F;&#x4E3B;&#x952E;&#x7684;&#x4E3B;&#x952E;&#x7C7B;&#x578B;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x9009;&#x503C;&#x5982;&#x4E0B;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;&#xFF1A;IdType.NONE &#x503C; &#x63CF;&#x8FF0; AUTO &#x6570;&#x636E;&#x5E93;&#x81EA;&#x589E; INPUT &#x81EA;&#x884C;&#x8F93;&#x5165; ID_WORKER &#x5206;&#x5E03;&#x5F0F;&#x5168;&#x5C40;&#x552F;&#x4E00;ID &#x957F;&#x6574;&#x578B;&#x7C7B;&#x578B; UUID 32&#x4F4D;UUID&#x5B57;&#x7B26;&#x4E32; NONE &#x65E0;&#x72B6;&#x6001;&#xFF08;&#x9ED8;&#x8BA4;&#xFF09; ID_WORKER_STR &#x5206;&#x5E03;&#x5F0F;&#x5168;&#x5C40;&#x552F;&#x4E00;ID &#x5B57;&#x7B26;&#x4E32;&#x7C7B;&#x578B; &#x5168;&#x5C40;&#x8BBE;&#x7F6E;&#x8BBE;&#x7F6E;&#x6CE8;&#x89E3;&#x7B56;&#x7565;&#x8BBE;&#x7F6E;&#x4E3B;&#x952E;&#x7B56;&#x7565;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#xFF1A;ID_WORKER 1234mybatis-plus: global-config: db-config: id-type: AUTO &#x5168;&#x5C40;&#x8BBE;&#x7F6E;&#x9A7C;&#x5CF0;&#x529F;&#x80FD;mybatisPlus &#x6709;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x7684;&#x914D;&#x7F6E;&#x7B56;&#x7565;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E2D;&#x7684;&#x5217;&#x540D;&#x5B57;&#x6BB5;&#x662F;&#x4E0B;&#x5212;&#x7EBF;&#x5206;&#x5272;&#xFF0C;&#x81EA;&#x52A8;&#x5BF9;&#x5E94;&#x5B9E;&#x4F53;&#x7C7B;&#x4E2D;&#x9A7C;&#x5CF0;&#x540D;&#xFF1A; &#x5982;&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;stu_address&#x5B57;&#x6BB5;&#x4E0E;&#x5B9E;&#x4F53;&#x7C7B;&#x4E2D;&#x7684;stuAddress&#x5C5E;&#x6027;&#x5B57;&#x6BB5;&#x76F8;&#x5BF9;&#x5E94;&#x3002; 12345mybatis-plus: global-config: db-config: table-underline: true# &#x8868;&#x540D;&#x3001;&#x662F;&#x5426;&#x4F7F;&#x7528;&#x4E0B;&#x5212;&#x7EBF;&#x547D;&#x540D;&#xFF08;&#x9ED8;&#x8BA4; true:&#x9ED8;&#x8BA4;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E0B;&#x5212;&#x7EBF;&#x547D;&#x540D;&#xFF09; &#x5728; Springboot &#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;map-underscore-to-camel-case&#x5C5E;&#x6027;&#x4E3A; true &#x6765;&#x5F00;&#x542F;&#x9A7C;&#x5CF0;&#x529F;&#x80FD;&#x3002;&#x56E0;&#x6B64; mybatisPlus &#x4E5F;&#x7EE7;&#x627F;&#x4E86;&#x8FD9;&#x79CD;&#x914D;&#x7F6E;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A; true&#xFF1A; 123mybatis-plus: configuration: map-underscore-to-camel-case: true @TableFieldvalue&#x5F53;&#x663E;&#x793A;&#x914D;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5219;&#x6309;&#x8BBE;&#x7F6E;&#x7684;&#x503C;&#x4E3A;&#x51C6;&#x3002; exist&#x6807;&#x8BC6;&#x8BE5;&#x5B57;&#x6BB5;&#x662F;&#x6570;&#x636E;&#x5E93;&#x8868;&#x5B57;&#x6BB5;&#xFF0C;&#x5F53;&#x5B9E;&#x4F53;&#x7C7B;&#x4E2D;&#x6709;&#x5C5E;&#x6027;&#x5B57;&#x6BB5;&#x4E0D;&#x5728;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E2D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5728;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x65F6;&#x5FFD;&#x7565;&#x8FD9;&#x4E9B;&#x5B57;&#x6BB5;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;exist=false&#x5C5E;&#x6027;&#x914D;&#x7F6E;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x914D;&#x7F6E;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;&#xFF1A;true BaseMapperBaseMapper &#x63A5;&#x53E3;&#x662F;&#x4E13;&#x95E8;&#x7528;&#x6765;&#x8FDB;&#x884C;&#x901A;&#x7528;&#x589E;&#x5220;&#x6539;&#x67E5;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x6CDB;&#x578B;&#x53EF;&#x4EE5;&#x5BF9;&#x6570;&#x636E;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x901A;&#x7528;&#x7684;CIUD&#x64CD;&#x4F5C;&#xFF0C;&#x5927;&#x81F4;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x56DB;&#x7C7B;&#xFF1A; Insertint insert(T entity) insert &#x65B9;&#x6CD5;&#x4F1A;&#x5C06;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x975E;&#x7A7A;&#x5C5E;&#x6027;&#x503C;&#x6620;&#x5C04;&#x5230;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x8FDB;&#x884C;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x6709;&#x591A;&#x5C11;&#x975E;&#x7A7A;&#x5C5E;&#x6027;&#xFF0C;&#x6267;&#x884C;&#x7684;SQL&#x8BED;&#x53E5;&#x4E2D;&#x624D;&#x63D2;&#x5165;&#x591A;&#x5C11;&#xFF0C;&#x548C; mybatis &#x4E2D;&#x7684; insertSeletive &#x4E00;&#x6837;&#xFF0C;&#x6709;&#x503C;&#x624D;&#x64CD;&#x4F5C;&#x3002; &#x4EAE;&#x70B9;&#xFF1A; &#x63D2;&#x5165;&#x6210;&#x529F;&#x9ED8;&#x8BA4;&#x8FD4;&#x56DE;&#x4E3B;&#x952E;&#xFF0C;mybatis Plus &#x63D2;&#x5165;&#x6570;&#x636E;&#x4E4B;&#x540E;&#xFF0C;&#x5B9E;&#x4F53;&#x7C7B;&#x4E2D;&#x7684;&#x4E3B;&#x952E;&#x4F1A;&#x8FD4;&#x56DE;&#x7ED9;&#x5B9E;&#x4F53;&#x7C7B;&#xFF0C;&#x76F8;&#x6BD4; mybatis &#x539F;&#x751F;&#x7684;&#x9ED8;&#x8BA4;&#x4E0D;&#x8FD4;&#x56DE;&#x8981;&#x5F88;&#x591A;&#x7E41;&#x7410;&#x7684;&#x914D;&#x7F6E;&#xFF1A; 1234&lt;insert id=&quot;insert&quot; useGeneratedKeys=&quot;true&quot; keyProperty=&quot;stuId&quot; parameterType=&quot;org.woodwhales.king.Student&quot;&gt; insert into student(userName, password, comment) values(#{userName}, #{password}, #{comment})&lt;/insert&gt; &#x5176;&#x4E2D;&#xFF1A;keyProperty&#x4E2D;&#x914D;&#x7F6E;&#x7684;&#x662F;&#x5B9E;&#x4F53;&#x7C7B;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x6765;&#x63A5;&#x6536;&#x6570;&#x636E;&#x5E93;&#x8868;&#x8FD4;&#x56DE;&#x7684;&#x4E3B;&#x952E;&#x503C;&#x3002; Update&#x6839;&#x636E;&#x4E3B;&#x952E;&#x66F4;&#x65B0;int updateById(T entity) &#x5E26;&#x6761;&#x4EF6;&#x7684;&#x66F4;&#x65B0;int update(T entity, Wrapper&lt;T&gt; updateWrapper) &#x5982;&#xFF1A;&#x66F4;&#x65B0;&#x59D3;&#x540D;&#x4E3A;Tom&#x4E14;&#x5E74;&#x9F84;&#x4E3A; 28 &#x7684;&#x5B66;&#x751F;&#x6570;&#x636E;&#xFF1A; 123456789LambdaQueryWrapper&lt;Student&gt; lambdaQueryWrapper = new QueryWrapper&lt;Student&gt;().lambda() .eq(Student::getName, &quot;Tom&quot;) .eq(Student::getAge, 28); Student student = Student.builder() .name(&quot;woodwhales&quot;) .age(20) .email(&quot;woodwhales@woodwhales.com&quot;).build(); int row = studentMapper.update(student, lambdaQueryWrapper); SQL&#x811A;&#x672C;&#x6267;&#x884C;&#x65E5;&#x5FD7;&#xFF1A; 123==&gt; Preparing: UPDATE student SET name=?, age=?, email=? WHERE name = ? AND age = ? ==&gt; Parameters: woodwhales(String), 20(Integer), woodwhales@woodwhales.com(String), Tom(String), 28(Integer)&lt;== Updates: 1 SelectDelete&#x6761;&#x4EF6;&#x6784;&#x9020;&#x5668;EntityWapper &#x6CE8;&#x610F;&#xFF1A;&#x6761;&#x4EF6;&#x6784;&#x9020;&#x5668;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x6570;&#x636E;&#x5217;&#x540D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B9E;&#x4F53;&#x7C7B;&#x5BF9;&#x8C61;&#x5C5E;&#x6027;&#x3002; &#x5206;&#x9875;&#x67E5;&#x8BE2;&#xFF08;&#x5E26;&#x6761;&#x4EF6;&#xFF09;&#x5BF9;&#x4E8E;&#x6761;&#x4EF6;&#x6784;&#x9020;&#x5668;&#x7684;&#x7F16;&#x5199;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6700;&#x539F;&#x59CB;&#x5199;&#x6CD5;&#xFF1A; 123QueryWrapper&lt;User&gt; queryWrapper = new QueryWrapper&lt;User&gt;(); queryWrapper.eq(&#x201C;stu_name&#x201D;, &quot;Tom&quot;); queryWrapper.like(&quot;email&quot;, &quot;woodwhale&quot;); &#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;QueryWrapper&lt;User&gt;().lambda()&#x8FD9;&#x6837;&#x7C7B;&#x4F3C;&#x4E8E; JDK1.8 &#x7684;lambda&#x8868;&#x8FBE;&#x5F0F;&#x7F16;&#x5199;&#x6761;&#x4EF6;&#x6784;&#x9020;&#x5668;&#xFF0C;&#x4E0B;&#x6587;&#x4E2D;&#x5747;&#x91C7;&#x7528;&#x6B64;&#x5199;&#x6CD5;&#x3002; &#x4F8B;&#xFF1A;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x5E93;&#x4E2D; student &#x8868;&#xFF08;Student &#x5B9E;&#x4F53;&#x7C7B;&#xFF09;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x59D3;&#x540D;&#x4E3A;Tom&#x4E14;&#x5E74;&#x9F84;&#x5728;10-20 &#x5C81;&#x4E4B;&#x95F4;&#x7684;&#x5206;&#x9875;&#x6570;&#x636E;&#xFF0C;&#x5F53;&#x524D;&#x9875;&#x4E3A; 1&#xFF0C;&#x6BCF;&#x9875;&#x663E;&#x793A;&#x6570;&#x4E3A; 2 12345678910IPage&lt;Student&gt; pager = studentMapper.selectPage(new Page&lt;Student&gt;(1, 2), new QueryWrapper&lt;User&gt;().lambda() .eq(Student::getName, &quot;Tom&quot;) .between(Student::getAge, 10, 20)); List&lt;Student&gt; studentList = pager.getRecords(); studentList.forEach(System.out::println); System.out.println(&quot;total: &quot; + pager.getTotal()); System.out.println(&quot;pages: &quot; + pager.getPages()); System.out.println(&quot;size: &quot; + pager.getSize()); SQL&#x811A;&#x672C;&#x6267;&#x884C;&#x65E5;&#x5FD7;&#xFF1A; 12==&gt; Preparing: SELECT id,name,age,email FROM student WHERE name = ? AND age BETWEEN ? AND ? LIMIT ?,? ==&gt; Parameters: Tom(String), 10(Integer), 20(Integer), 0(Long), 1(Long) &#x6CE8;&#x610F;&#xFF1A;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x67E5;&#x8BE2;&#x51FA;&#x6765;&#x7684;&#x5BF9;&#x8C61;pager&#x4E2D;&#x7684;total&#x548C;pages&#x603B;&#x662F;&#x4E3A; 0 &#xFF0C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF1A;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x7C7B;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5206;&#x9875;&#x63D2;&#x4EF6;PaginationInterceptor&#x914D;&#x7F6E;&#x5230; spring &#x4E2D;&#x5373;&#x53EF;&#xFF1A; 123456789101112131415import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import com.baomidou.mybatisplus.annotation.DbType;import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;@Configurationpublic class AppConfig { @Bean public PaginationInterceptor paginationInterceptor() { PaginationInterceptor page = new PaginationInterceptor(); page.setDialectType(DbType.MYSQL.getDb()); // &#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x5E93;&#x65B9;&#x8A00; return page; }} &#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;&#xFF1A;&#x53EA;&#x9700;&#x8981;&#x8FD4;&#x56DE;new PaginationInterceptor()&#x5373;&#x53EF;&#x4F7F;&#x5F97;selectPage&#x8FD4;&#x56DE;&#x5BF9;&#x8C61;&#x4E2D;&#x6709;&#x6570;&#x636E;&#x603B;&#x8BB0;&#x5F55;&#x6570;&#x3002; &#x5E26;&#x6761;&#x4EF6;&#x7684;&#x67E5;&#x8BE2;-&#x5E76;&#x4E14;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x5E93;&#x4E2D; student &#x8868;&#xFF08;Student &#x5B9E;&#x4F53;&#x7C7B;&#xFF09;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x90AE;&#x7BB1;&#x540D;&#x5B57;&#x542B;&#x6709;woodwhale&#x4E14;&#x5E74;&#x9F84;&#x5728;10-20 &#x5C81;&#x4E4B;&#x95F4;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#xFF1A; 1234List&lt;Student&gt; studentList = studentMapper.selectList(new QueryWrapper&lt;Student&gt;() .lambda() .like(Student::getEmail, &quot;woodwhale&quot;) .between(Student::getAge, 10, 20)); SQL&#x811A;&#x672C;&#x6267;&#x884C;&#x65E5;&#x5FD7;&#xFF1A; 12==&gt; Preparing: SELECT id,name,age,email FROM student WHERE email LIKE ? AND age BETWEEN ? AND ? ==&gt; Parameters: %woodwhale%(String), 10(Integer), 20(Integer) &#x5E26;&#x6761;&#x4EF6;&#x7684;&#x67E5;&#x8BE2;-&#x6216;&#x8005;123456IPage&lt;Student&gt; pager = studentMapper.selectPage(new Page&lt;Student&gt;(1, 2), new QueryWrapper&lt;Student&gt;().lambda() .eq(Student::getName, &quot;Tom&quot;) .between(Student::getAge, 10, 20) .or() .like(Student::getEmail, &quot;woodwhale&quot;)); &#x6CE8;&#x610F;&#xFF1A;or()&#x4E2D;&#x53EF;&#x4EE5;&#x4F20;&#x53C2;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5F53;&#x6761;&#x4EF6;&#x4E3A;false&#x65F6;&#xFF0C;&#x6216;&#x8005;&#x4F5C;&#x7528;&#x5931;&#x6548;&#xFF0C;&#x540E;&#x9762;&#x7684;&#x6761;&#x4EF6;&#x4F1A;&#x4E0E;&#x524D;&#x9762;&#x7684;&#x6761;&#x4EF6;&#x5F62;&#x6210;&#x5E76;&#x4E14;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x5F15;&#x7528;&#x5B98;&#x65B9;&#x7684;&#x89E3;&#x91CA;&#xFF1A; &#x4E3B;&#x52A8;&#x8C03;&#x7528;or&#x8868;&#x793A;&#x7D27;&#x63A5;&#x7740;&#x4E0B;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x4E0D;&#x662F;&#x7528;and&#x8FDE;&#x63A5;&#xFF01;&#xFF08;&#x4E0D;&#x8C03;&#x7528;or&#x5219;&#x9ED8;&#x8BA4;&#x4E3A;&#x4F7F;&#x7528;and&#x8FDE;&#x63A5;&#xFF09; SQL&#x811A;&#x672C;&#x6267;&#x884C;&#x65E5;&#x5FD7;&#xFF1A; 1234==&gt; Preparing: SELECT COUNT(1) FROM student WHERE name = ? AND age BETWEEN ? AND ? OR email LIKE ? ==&gt; Parameters: Tom(String), 10(Integer), 20(Integer), %woodwhale%(String)==&gt; Preparing: SELECT id,name,age,email FROM student WHERE name = ? AND age BETWEEN ? AND ? OR email LIKE ? limit ? ==&gt; Parameters: Tom(String), 10(Integer), 20(Integer), %woodwhale%(String), 1(Long) &#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x6392;&#x5E8F;orderBy(boolean condition, boolean isAsc, R... columns) &#x5BF9;&#x67E5;&#x8BE2;&#x7684;&#x7ED3;&#x679C;&#x8FDB;&#x884C;&#x964D;&#x5E8F;&#x6392;&#x5217;&#xFF08;isAsc &#x8BBE;&#x7F6E;&#x6210;&#x4E86;false&#xFF09; 12List&lt;Student&gt; studentList = userMapper.selectList(Wrappers.&lt;Student&gt;query().orderBy(true, false, &quot;age&quot;));studentList.forEach(System.out::println); SQL &#x811A;&#x672C;&#x6267;&#x884C;&#x65E5;&#x5FD7;&#xFF1A; 123==&gt; Preparing: SELECT id,name,age,email FROM student ORDER BY age DESC ==&gt; Parameters: &lt;== Total: 8 mybatis Plus &#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x52A0;&#x4FBF;&#x6377;&#x7684;&#x65B9;&#x6CD5;&#xFF1A; &#x964D;&#x5E8F;&#x6392;&#x5E8F; orderByDesc(R column) orderByDesc(R... columns) orderByDesc(boolean condition, R... columns) &#x5347;&#x5E8F;&#x6392;&#x5E8F; orderByAsc(R column) orderByAsc(R... columns) orderByAsc(boolean condition, R... columns) &#x9886;&#x57DF;&#x6A21;&#x5F0F;ActiveRecord &#x5FC5;&#x987B;&#x5B58;&#x5728;&#x5BF9;&#x5E94;&#x7684;&#x539F;&#x59CB;mapper&#x5E76;&#x7EE7;&#x627F;baseMapper&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x624D;&#x80FD;&#x4F7F;&#x7528;&#x6B64; AR &#x6A21;&#x5F0F;&#x3002; &#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x5B9E;&#x4F53;&#x7C7B;&#x5BF9;&#x8C61;&#x7EE7;&#x627F; Model&#x62BD;&#x8C61;&#x7C7B;&#x5373;&#x53EF;&#x3002; 123456789@Data@Builderpublic class Student extends Model&lt;Student&gt;{ @TableId(type=IdType.AUTO) private Long id; private String name; private Integer age; private String email;} &#x5BF9;&#x6570;&#x636E;&#x7684;&#x589E;&#x5220;&#x6539;&#x67E5;&#x64CD;&#x4F5C;&#xFF0C;&#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x81EA;&#x5DF1;&#x5373;&#x53EF;&#x3002; 12Student student = Student.builder().id(null).name(&quot;adc&quot;).age(20).email(&quot;ss@q.com&quot;).build();boolean insert = student.insert(); &#x6761;&#x4EF6;&#x67E5;&#x8BE2;&#x9886;&#x57DF;&#x6A21;&#x5F0F;&#x4E0B;&#x67E5;&#x8BE2;&#x4E3B;&#x952E;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6709;&#x53C2;&#x6570;&#x4F20;&#x5165;&#x65F6;&#x4EE5;&#x4F20;&#x5165;&#x4E3A;&#x51C6;&#xFF0C;&#x65E0;&#x53C2;&#x6570;&#x65F6;&#x4EE5;&#x5BF9;&#x8C61;&#x4E3A;&#x51C6;&#x3002;&#x5F53;&#x5BF9;&#x8C61;&#x6CA1;&#x6709;&#x4E3B;&#x952E;&#x65F6;&#xFF0C;&#x4F1A;&#x62A5;com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: selectById primaryKey is null.&#x5F02;&#x5E38;&#xFF0C;&#x5220;&#x9664;&#x4E3B;&#x952E;&#x7684;&#x65B9;&#x6CD5;&#x540C;&#x7406;&#xFF0C;&#x53E6;&#x5916;&#x5220;&#x9664;&#x903B;&#x8F91;&#x4E0A;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x6570;&#x636E;&#x4E5F;&#x662F;&#x8FD4;&#x56DE;&#x6210;&#x529F;&#x3002; 12Student student = Student.builder().id(5L).build();Student result = student.selectById(6L); SQL&#x811A;&#x672C;&#x6267;&#x884C;&#x65E5;&#x5FD7;&#xFF1A; 123==&gt; Preparing: SELECT id,name,age,email FROM student WHERE id=? ==&gt; Parameters: 6(Long)&lt;== Total: 1 &#x5206;&#x9875;&#x67E5;&#x8BE2;&#x5206;&#x9875;&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x662F;IPage&#xFF0C;&#x4ECE;IPage&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x76F8;&#x5E94;&#x7684;&#x603B;&#x8BB0;&#x5F55;&#x6570;&#xFF0C;&#x8BB0;&#x5F55;&#xFF0C;&#x5F53;&#x524D;&#x9875;&#xFF0C;&#x6BCF;&#x9875;&#x6570;&#x3002; 1IPage&lt;T&gt; selectPage(IPage&lt;T&gt; page, Wrapper&lt;T&gt; queryWrapper) &#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;AutoGenerator &#x662F; MyBatis-Plus &#x7684;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#xFF0C;MyBatis-Plus &#x7684;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#x6BD4; Mybatis &#x539F;&#x751F;&#x7684;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#x5F3A;&#x5927;&#x7684;&#x5730;&#x65B9;&#x5728;&#x4E8E;&#xFF0C;&#x80FD;&#x591F;&#x5FEB;&#x901F;&#x751F;&#x6210;&#x901A;&#x8FC7; AutoGenerator &#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x751F;&#x6210; Entity&#x3001;Mapper&#x3001;Mapper XML&#x3001;Service&#x3001;Controller &#x7B49;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6781;&#x5927;&#x7684;&#x63D0;&#x5347;&#x4E86;&#x5F00;&#x53D1;&#x6548;&#x7387;&#x3002; &#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#x4E2D;&#x5F00;&#x542F;&#x4E86;lombok&#xFF0C;sprigboot-web&#xFF0C;swagger2&#xFF0C;freemarker&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x4F9D;&#x8D56;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;!-- lombok --&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;!-- spring-boot-web --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;!-- mybatis-plus --&gt; &lt;dependency&gt; &lt;groupId&gt;com.baomidou&lt;/groupId&gt; &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt; &lt;version&gt;3.1.0&lt;/version&gt; &lt;/dependency&gt; &lt;!-- druid --&gt; &lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;druid&lt;/artifactId&gt; &lt;version&gt;1.1.10&lt;/version&gt; &lt;/dependency&gt; &lt;!-- mybatis-plus-generator --&gt; &lt;dependency&gt; &lt;groupId&gt;com.baomidou&lt;/groupId&gt; &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt; &lt;version&gt;3.1.0&lt;/version&gt; &lt;/dependency&gt; &lt;!-- freemarker --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt; &lt;/dependency&gt; &lt;!-- swagger2 --&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt; &lt;/dependency&gt; &lt;!-- swagger-ui --&gt; &lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt; &lt;/dependency&gt;&lt;/dependencies&gt; &#x6700;&#x4F73;&#x5B9E;&#x8DF5;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990import java.util.ArrayList;import java.util.List;import com.baomidou.mybatisplus.annotation.DbType;import com.baomidou.mybatisplus.annotation.IdType;import com.baomidou.mybatisplus.core.toolkit.StringPool;import com.baomidou.mybatisplus.generator.AutoGenerator;import com.baomidou.mybatisplus.generator.InjectionConfig;import com.baomidou.mybatisplus.generator.config.DataSourceConfig;import com.baomidou.mybatisplus.generator.config.FileOutConfig;import com.baomidou.mybatisplus.generator.config.GlobalConfig;import com.baomidou.mybatisplus.generator.config.PackageConfig;import com.baomidou.mybatisplus.generator.config.StrategyConfig;import com.baomidou.mybatisplus.generator.config.TemplateConfig;import com.baomidou.mybatisplus.generator.config.po.TableInfo;import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;public class Generator { public static void main(String[] args) { // &#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668; AutoGenerator mpg = new AutoGenerator(); // &#x5168;&#x5C40;&#x914D;&#x7F6E; GlobalConfig gc = new GlobalConfig(); String projectPath = System.getProperty(&quot;user.dir&quot;); gc.setActiveRecord(true); // &#x5F00;&#x542F;&#x9886;&#x57DF;&#x6A21;&#x5F0F; gc.setIdType(IdType.AUTO); gc.setServiceName(&quot;%sService&quot;); // &#x5404;&#x5C42;&#x6587;&#x4EF6;&#x540D;&#x79F0;&#x65B9;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; %sAction &#x751F;&#x6210; UserAction gc.setOutputDir(projectPath + &quot;/src/main/java&quot;); // &#x751F;&#x6210;&#x6587;&#x4EF6;&#x7684;&#x8F93;&#x51FA;&#x76EE;&#x5F55;&#x3010;&#x9ED8;&#x8BA4; D &#x76D8;&#x6839;&#x76EE;&#x5F55;&#x3011; gc.setAuthor(&quot;woodwhales&quot;); // [&#x5F00;&#x53D1;&#x8005;] gc.setFileOverride(true); // &#x5F00;&#x542F;&#x6587;&#x4EF6;&#x8986;&#x76D6; gc.setOpen(false); // &#x662F;&#x5426;&#x6253;&#x5F00;&#x8F93;&#x51FA;&#x76EE;&#x5F55; gc.setSwagger2(true); // &#x5F00;&#x542F; swagger2 &#x6A21;&#x5F0F; gc.setBaseResultMap(true); // &#x5F00;&#x542F; BaseResultMap gc.setBaseColumnList(true); // &#x5F00;&#x542F; baseColumnList mpg.setGlobalConfig(gc); // &#x6570;&#x636E;&#x6E90;&#x914D;&#x7F6E; DataSourceConfig dsc = new DataSourceConfig(); dsc.setUrl(&quot;jdbc:mysql://localhost:3306/mytest?useUnicode=true&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&quot;); dsc.setDriverName(&quot;com.mysql.cj.jdbc.Driver&quot;); // &#x6CE8;&#x610F;&#xFF1A;mysql 5.7 &#x4E4B;&#x540E;&#x7684;&#x9A71;&#x52A8;&#x662F;com.mysql.cj.jdbc.Driver dsc.setDbType(DbType.MYSQL); dsc.setUsername(&quot;root&quot;); dsc.setPassword(&quot;root&quot;); mpg.setDataSource(dsc); // &#x5305;&#x914D;&#x7F6E; PackageConfig pc = new PackageConfig(); pc.setParent(&quot;org.woodwahles&quot;); // [&#x5B9E;&#x4F53;&#x7C7B;&#x6240;&#x5728;&#x6A21;&#x5757;&#x7684;&#x7236;&#x6A21;&#x5757;&#x540D;] pc.setModuleName(&quot;king&quot;); // [&#x5B9E;&#x4F53;&#x7C7B;&#x6240;&#x5728;&#x6A21;&#x5757;&#x540D;] pc.setXml(&quot;mapper&quot;); // &#x9ED8;&#x8BA4;&#x5305;&#x540D;&#xFF1A;mapper.xml mpg.setPackageInfo(pc); // &#x81EA;&#x5B9A;&#x4E49;&#x914D;&#x7F6E; InjectionConfig cfg = new InjectionConfig() { @Override public void initMap() { // to do nothing } }; List&lt;FileOutConfig&gt; focList = new ArrayList&lt;&gt;(); focList.add(new FileOutConfig(&quot;/templates/mapper.xml.ftl&quot;) { @Override public String outputFile(TableInfo tableInfo) { // &#x81EA;&#x5B9A;&#x4E49;mapper&#x6587;&#x4EF6;&#x540D;&#x79F0; return projectPath + &quot;/src/main/resources/mapper/&quot; + pc.getModuleName() + &quot;/&quot; + tableInfo.getEntityName() + &quot;Mapper&quot; + StringPool.DOT_XML; } }); cfg.setFileOutConfigList(focList); mpg.setCfg(cfg); mpg.setTemplate(new TemplateConfig().setXml(null)); // &#x7B56;&#x7565;&#x914D;&#x7F6E; StrategyConfig strategy = new StrategyConfig(); strategy.setNaming(NamingStrategy.underline_to_camel); // &#x4E0B;&#x5212;&#x7EBF;&#x8F6C;&#x9A7C;&#x5CF0;&#x547D;&#x540D; strategy.setColumnNaming(NamingStrategy.underline_to_camel); strategy.setEntityLombokModel(true); strategy.setInclude(&quot;student&quot;); // [&#x8868;&#x540D;] strategy.setSuperEntityColumns(&quot;id&quot;); strategy.setControllerMappingHyphenStyle(true); // strategy.setTablePrefix(pc.getModuleName() + &quot;_&quot;); // &#x6570;&#x636E;&#x5E93;&#x8868;&#x540D;&#x524D;&#x7F00; mpg.setStrategy(strategy); // &#x9009;&#x62E9; freemarker &#x5F15;&#x64CE;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x5982;&#x4E0B;&#x52A0;&#xFF0C;&#x6CE8;&#x610F; pom &#x4F9D;&#x8D56;&#x5FC5;&#x987B;&#x6709;&#xFF01; mpg.setTemplateEngine(new FreemarkerTemplateEngine()); mpg.execute(); } } &#x751F;&#x6210;&#x7684;&#x9879;&#x76EE;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x63D2;&#x4EF6;&#x653B;&#x51FB; SQL &#x963B;&#x65AD;&#x89E3;&#x6790;&#x5668;&#x4F5C;&#x7528;&#xFF01;&#x963B;&#x6B62;&#x6076;&#x610F;&#x7684;&#x5168;&#x8868;&#x66F4;&#x65B0;&#x5220;&#x9664; 123456789101112131415161718@Configurationpublic class AppConfig { /** * &#x5206;&#x9875;&#x63D2;&#x4EF6; */ @Bean public PaginationInterceptor paginationInterceptor() { PaginationInterceptor page = new PaginationInterceptor(); page.setDialectType(DbType.MYSQL.getDb()); // &#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x5E93;&#x65B9;&#x8A00; List&lt;ISqlParser&gt; sqlParserList = new ArrayList&lt;&gt;(); // &#x653B;&#x51FB; SQL &#x963B;&#x65AD;&#x89E3;&#x6790;&#x5668;&#x3001;&#x52A0;&#x5165;&#x89E3;&#x6790;&#x94FE; sqlParserList.add(new BlockAttackSqlParser()); page.setSqlParserList(sqlParserList); return page; }} &#x6027;&#x80FD;&#x5206;&#x6790;&#x63D2;&#x4EF6;&#x8BE5;&#x63D2;&#x4EF6;&#x53EA;&#x7528;&#x4E8E;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#xFF0C;&#x4E0D;&#x5EFA;&#x8BAE;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x4F7F;&#x7528;&#x3002; 12345678910111213141516@Configurationpublic class AppConfig { /** * &#x6027;&#x80FD;&#x5206;&#x6790;&#x63D2;&#x4EF6; */ @Bean @Profile({&quot;dev&quot;,&quot;test&quot;}) // &#x8BBE;&#x7F6E; dev test &#x73AF;&#x5883;&#x5F00;&#x542F; public PerformanceInterceptor performanceInterceptor() { PerformanceInterceptor performanceInterceptor = new PerformanceInterceptor(); // maxTime &#x6307;&#x7684;&#x662F; SQL &#x6267;&#x884C;&#x6700;&#x5927;&#x65F6;&#x957F;&#xFF0C;&#x8D85;&#x8FC7;&#x81EA;&#x52A8;&#x505C;&#x6B62;&#x8FD0;&#x884C;&#xFF0C;&#x6709;&#x52A9;&#x4E8E;&#x53D1;&#x73B0;&#x95EE;&#x9898;&#x3002; performanceInterceptor.setMaxTime(100); // SQL &#x662F;&#x5426;&#x683C;&#x5F0F;&#x5316; performanceInterceptor.setFormat(true); return performanceInterceptor; }} &#x4E50;&#x89C2;&#x9501;&#x63D2;&#x4EF6;&#x76EE;&#x7684;&#xFF1A;&#x5F53;&#x8981;&#x66F4;&#x65B0;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5E0C;&#x671B;&#x8FD9;&#x6761;&#x8BB0;&#x5F55;&#x6CA1;&#x6709;&#x88AB;&#x522B;&#x4EBA;&#x66F4;&#x65B0; &#x4E50;&#x89C2;&#x9501;&#x7684;&#x5B9E;&#x73B0;&#x601D;&#x8DEF;&#xFF1A; &#x53D6;&#x51FA;&#x8BB0;&#x5F55;&#x65F6;&#xFF0C;&#x83B7;&#x53D6;&#x5F53;&#x524D;version &#x66F4;&#x65B0;&#x65F6;&#xFF0C;&#x5E26;&#x4E0A;&#x8FD9;&#x4E2A;version &#x6267;&#x884C;&#x66F4;&#x65B0;&#x65F6;&#xFF0C; set version = newVersion where version = oldVersion &#x5982;&#x679C;version&#x4E0D;&#x5BF9;&#xFF0C;&#x5C31;&#x66F4;&#x65B0;&#x5931;&#x8D25; &#x63D2;&#x4EF6;&#x4F7F;&#x7528;&#x6B65;&#x9AA4;&#xFF1A; &#x5C06;&#x63D2;&#x4EF6;&#x6CE8;&#x5165;spring &#x6846;&#x67B6;&#xFF1A; 1234567@Configurationpublic class AppConfig { @Bean public OptimisticLockerInterceptor optimisticLockerInterceptor() { return new OptimisticLockerInterceptor(); }} &#x4F7F;&#x7528;&#x6CE8;&#x89E3;@Version&#x6CE8;&#x89E3;&#x5B9E;&#x4F53;&#x5B57;&#x6BB5;&#xFF08;&#x5FC5;&#x8981;&#x6B65;&#x9AA4;&#xFF09; 12@Versionprivate Integer version; &#x7279;&#x522B;&#x8BF4;&#x660E;&#xFF1A; &#x652F;&#x6301;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x53EA;&#x6709;:int&#xFF0C;Integer&#xFF0C;long&#xFF0C;Long&#xFF0C;Date&#xFF0C;Timestamp&#xFF0C;LocalDateTime &#x6574;&#x6570;&#x7C7B;&#x578B;&#x4E0B; newVersion = oldVersion + 1 newVersion &#x4F1A;&#x56DE;&#x5199;&#x5230; entity &#x4E2D; &#x4EC5;&#x652F;&#x6301; updateById(id) &#x4E0E; update(entity, wrapper) &#x65B9;&#x6CD5; &#x5728;update(entity, wrapper)&#x65B9;&#x6CD5;&#x4E0B;, wrapper&#x4E0D;&#x80FD;&#x590D;&#x7528;&#xFF01; &#x903B;&#x8F91;&#x5220;&#x9664;&#x63D2;&#x4EF6;&#x9996;&#x5148;&#x6307;&#x5B9A;&#x903B;&#x8F91;&#x5220;&#x9664;&#x5B57;&#x6BB5;&#x5728;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E2D;&#x7684;&#x53D6;&#x503C;&#xFF1A; 12345mybatis-plus: global-config: db-config: logic-delete-value: 1 # &#x903B;&#x8F91;&#x5DF2;&#x5220;&#x9664;&#x503C;(&#x9ED8;&#x8BA4;&#x4E3A; 1) logic-not-delete-value: 0 # &#x903B;&#x8F91;&#x672A;&#x5220;&#x9664;&#x503C;(&#x9ED8;&#x8BA4;&#x4E3A; 0) &#x5C06;&#x63D2;&#x4EF6;&#x6CE8;&#x5165;spring&#x4E2D;&#xFF1A; 12345678910111213import com.baomidou.mybatisplus.core.injector.ISqlInjector;import com.baomidou.mybatisplus.extension.injector.LogicSqlInjector;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class MyBatisPlusConfiguration { @Bean public ISqlInjector sqlInjector() { return new LogicSqlInjector(); }} &#x5B9E;&#x4F53;&#x7C7B;&#x5B57;&#x6BB5;&#x4E0A;&#x52A0;&#x4E0A;@TableLogic&#x6CE8;&#x89E3; 12@TableLogicprivate Integer deleted; &#x4F7F;&#x7528; Mybatis-Plus &#x81EA;&#x5E26;&#x65B9;&#x6CD5;&#x5220;&#x9664;&#x548C;&#x67E5;&#x627E;&#x90FD;&#x4F1A;&#x9644;&#x5E26;&#x903B;&#x8F91;&#x5220;&#x9664;&#x529F;&#x80FD;&#xFF08;&#x81EA;&#x5DF1;&#x5199;&#x7684;xml&#x4E0D;&#x4F1A;&#xFF09; MybatisX&#x63D2;&#x4EF6;&#xFF08;IDEA&#x63D2;&#x4EF6;&#xFF09;MybatisX &#x662F;&#x4E00;&#x6B3E;&#x57FA;&#x4E8E; IDEA &#x7684;&#x5FEB;&#x901F;&#x5F00;&#x53D1;&#x63D2;&#x4EF6;&#xFF0C;&#x4E3A;&#x6548;&#x7387;&#x800C;&#x751F;&#x3002; &#x5B89;&#x88C5;&#x65B9;&#x6CD5;&#xFF1A;&#x6253;&#x5F00; IDEA&#xFF0C;&#x8FDB;&#x5165; File -&gt; Settings -&gt; Plugins -&gt; Browse Repositories&#xFF0C;&#x8F93;&#x5165; mybatisx &#x641C;&#x7D22;&#x5E76;&#x5B89;&#x88C5;&#x3002; &#x63D2;&#x4EF6;&#x529F;&#x80FD;&#xFF1A;Java &#x4E0E; XML &#x8C03;&#x56DE;&#x8DF3;&#x8F6C;&#xFF0C;Mapper &#x65B9;&#x6CD5;&#x81EA;&#x52A8;&#x751F;&#x6210; XML&#x3002; &#x63D2;&#x4EF6;&#x6E90;&#x7801;&#xFF1A;https://gitee.com/baomidou/MybatisX&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Mybatis</category>
      </categories>
      <tags>
        <tag>mybatis Plus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[swagger入门教程]]></title>
    <url>%2F2019%2F03%2F06%2F024%2F</url>
    <content type="text"><![CDATA[&#x524D;&#x8A00;Swagger &#x80FD;&#x6210;&#x4E3A;&#x6700;&#x53D7;&#x6B22;&#x8FCE;&#x7684; RESTful APIs &#x6587;&#x6863;&#x751F;&#x6210;&#x5DE5;&#x5177;&#x4E4B;&#x4E00;&#xFF0C;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x539F;&#x56E0;&#xFF1A; Swagger &#x53EF;&#x4EE5;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x4E92;&#x52A8;&#x6027;&#x7684; API &#x63A7;&#x5236;&#x53F0;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5FEB;&#x901F;&#x5B66;&#x4E60;&#x548C;&#x5C1D;&#x8BD5; API&#x3002; Swagger &#x53EF;&#x4EE5;&#x751F;&#x6210;&#x5BA2;&#x6237;&#x7AEF; SDK &#x4EE3;&#x7801;&#x7528;&#x4E8E;&#x5404;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x5E73;&#x53F0;&#x4E0A;&#x7684;&#x5B9E;&#x73B0;&#x3002; Swagger &#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x5728;&#x8BB8;&#x591A;&#x4E0D;&#x540C;&#x7684;&#x5E73;&#x53F0;&#x4E0A;&#x4ECE;&#x4EE3;&#x7801;&#x6CE8;&#x91CA;&#x4E2D;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x3002; Swagger &#x6709;&#x4E00;&#x4E2A;&#x5F3A;&#x5927;&#x7684;&#x793E;&#x533A;&#xFF0C;&#x91CC;&#x9762;&#x6709;&#x8BB8;&#x591A;&#x5F3A;&#x608D;&#x7684;&#x8D21;&#x732E;&#x8005;&#x3002; Swagger &#x6587;&#x6863;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x6307;&#x5B9A;&#x7684; JSON &#x6216;&#x8005; YAML &#x6458;&#x8981;&#x6765;&#x63CF;&#x8FF0;&#x4F60;&#x7684; API&#xFF0C;&#x5305;&#x62EC;&#x4E86;&#x6BD4;&#x5982; names&#x3001;order &#x7B49; API &#x4FE1;&#x606F;&#x3002; &#x7528; Swagger &#x6587;&#x4EF6;&#x751F;&#x6210;&#x4E92;&#x52A8;&#x7684; API &#x6587;&#x6863;&#x662F;&#x6700;&#x7CBE;&#x7B80;&#x7684;&#xFF0C;&#x5B83;&#x5C55;&#x793A;&#x4E86;&#x8D44;&#x6E90;&#x3001;&#x53C2;&#x6570;&#x3001;&#x8BF7;&#x6C42;&#x3001;&#x54CD;&#x5E94;&#x3002;&#x4F46;&#x662F;&#x5B83;&#x4E0D;&#x4F1A;&#x63D0;&#x4F9B;&#x4F60;&#x7684;API&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#x5176;&#x4ED6;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x7EC6;&#x8282;&#x3002; &#x4E00;&#x3001;maven &#x5DE5;&#x7A0B;&#x4F9D;&#x8D56;&#x5F15;&#x5165; jar &#x6587;&#x4EF6;&#xFF1A;springfox-swagger2&#x3001;springfox-swagger-ui 1234567891011&lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;io.springfox&lt;/groupId&gt; &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt;&lt;/dependency&gt; &#x4E8C;&#x3001;swagger &#x5168;&#x5C40;&#x914D;&#x7F6E;2.1 &#x521B;&#x5EFA; config &#x76EE;&#x5F55;&#xFF0C;&#x65B0;&#x5EFA; swagger &#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6; swaggerConfig.java 12345678910111213141516171819202122232425262728293031import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.ComponentScan;import org.springframework.context.annotation.Configuration;import org.springframework.web.servlet.config.annotation.EnableWebMvc;import springfox.documentation.builders.ApiInfoBuilder;import springfox.documentation.service.ApiInfo;import springfox.documentation.service.Contact;import springfox.documentation.spi.DocumentationType;import springfox.documentation.spring.web.plugins.Docket;import springfox.documentation.swagger2.annotations.EnableSwagger2;@Configuration@EnableSwagger2@EnableWebMvc@ComponentScan(basePackages = {&quot;org.woodwhales.king.controller&quot;})public class SwaggerConfig { @Bean public Docket customDocket() { return new Docket(DocumentationType.SWAGGER_2).apiInfo(apiInfo()); } private ApiInfo apiInfo() { Contact contact = new Contact(&quot;woodwhale&quot;, &quot;http://127.0.0.1/&quot;, &quot;woodwhales.github.io&quot;); return new ApiInfoBuilder() .title(&quot;swagger&#x5165;&#x95E8;&#x6559;&#x7A0B;&quot;) .contact(contact) .description(&quot;&#x8FD9;&#x91CC;&#x662F; RESTful API &#x63CF;&#x8FF0;&quot;) .version(&quot;1.0.1&quot;).build(); }} 2.2 &#x5728; config &#x76EE;&#x5F55;&#x4E2D;&#xFF0C;&#x7EE7;&#x7EED;&#x521B;&#x5EFA; WebMvcConfig.java &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5C06; swagger-ui &#x9875;&#x9762;&#x6CE8;&#x5165;&#x5230; spring &#x4E2D; 123456789101112131415import org.springframework.context.annotation.Configuration;import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;@Configurationpublic class WebMvcConfig implements WebMvcConfigurer { public void addResourceHandlers(ResourceHandlerRegistry registry) { registry.addResourceHandler(&quot;swagger-ui.html&quot;) .addResourceLocations(&quot;classpath:/META-INF/resources/&quot;); registry.addResourceHandler(&quot;/webjars/**&quot;) .addResourceLocations(&quot;classpath:/META-INF/resources/webjars/&quot;); }} &#x4EE5;&#x4E0A;&#x914D;&#x7F6E;&#x7684;&#x8D44;&#x6E90;&#x662F;&#x5728;springfox-swagger-ui.jar jar &#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A; jar &#x5305;&#x53EA;&#x6709; META-INF &#x76EE;&#x5F55;&#x3002; &#x4E09;&#x3001;&#x7F16;&#x5199; RESTful &#x63A5;&#x53E3;&#x7F16;&#x5199; controller &#x4EE3;&#x7801; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import org.woodwhales.king.entity.User;import io.swagger.annotations.Api;import io.swagger.annotations.ApiImplicitParam;import io.swagger.annotations.ApiOperation;@RequestMapping(&quot;/users&quot;)@RestController@Api(value = &quot;&#x7528;&#x6237;&#x6A21;&#x5757;&quot;, description = &quot;&#x7528;&#x6237;&#x6A21;&#x5757;&#x7684;&#x63A5;&#x53E3;&quot;)public class UserController { public static List&lt;User&gt; users = new ArrayList&lt;&gt;(); static { users.add(new User(1L, &quot;Tom&quot;, 12)); users.add(new User(2L, &quot;Tina&quot;, 11)); } @ApiOperation(value = &quot;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x5217;&#x8868;&quot;, notes = &quot;&#x83B7;&#x53D6;&#x6240;&#x6709;&#x7528;&#x6237;&#x7684;&#x5217;&#x8868;&quot;) @GetMapping(&quot;/&quot;) public Object users() { Map&lt;String, Object&gt; map = new HashMap&lt;&gt;(); map.put(&quot;users&quot;, users); return map; } @ApiOperation(value = &quot;&#x7528;&#x6237;&#x8BE6;&#x60C5;&quot;, notes = &quot;&#x6839;&#x636E;id&#x83B7;&#x53D6;&#x7528;&#x6237;&quot;) @ApiImplicitParam(value = &quot;&#x7528;&#x6237;&#x7684;id&quot;, paramType = &quot;path&quot;) @GetMapping(&quot;/{id}&quot;) public User getUserById(@PathVariable(&quot;id&quot;) int id) { return users.get(id); } @ApiOperation(value = &quot;&#x521B;&#x5EFA;&#x7528;&#x6237;&quot;, notes = &quot;&#x65B0;&#x589E;&#x7528;&#x6237;&quot;) @ApiImplicitParam(value = &quot;&#x7528;&#x6237;&#x5BF9;&#x8C61;&quot;, paramType = &quot;query&quot;) @PostMapping(&quot;/&quot;) public Object addUser(@RequestBody User user) { return users.add(user); }} &#x5728; application.yml &#x4E2D;&#x914D;&#x7F6E; web &#x7AEF;&#x53E3;&#xFF1A; 123server: address: 127.0.0.1 port: 80 &#x8BBF;&#x95EE;&#xFF1A;http://127.0.0.1:80/swagger-ui.html document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>swagger</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java高并发编程 | 学习笔记（二）]]></title>
    <url>%2F2019%2F02%2F14%2F023%2F</url>
    <content type="text"><![CDATA[1.7 &#x5199;&#x65B9;&#x6CD5;&#x548C;&#x8BFB;&#x65B9;&#x6CD5;&#x7684;&#x52A0;&#x9501;&#x9009;&#x62E9;&#x95EE;&#x9898;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF1A;&#x5B58;&#x5728;&#x4E00;&#x4E2A; Account &#x5BF9;&#x8C61;&#xFF08;&#x5C5E;&#x6027;&#x6709;&#x540D;&#x79F0;&#x548C;&#x4F59;&#x989D;&#xFF09;&#xFF0C;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x5B58;&#x5728;&#x7684;&#x6CE8;&#x91CA;&#x6682;&#x65F6;&#x5FFD;&#x7565;&#x4E0D;&#x8BA1;&#xFF1A;set() &#x65B9;&#x6CD5;&#x662F;&#x540C;&#x6B65;&#x7684;&#xFF0C;getBalance() &#x65B9;&#x6CD5;&#x4E0D;&#x662F;&#x540C;&#x6B65;&#x7684;&#x3002; main&#x65B9;&#x6CD5;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5148;&#x542F;&#x52A8;&#x4E86;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x8BBE;&#x7F6E;&#x8D26;&#x6237;&#x540D;&#x548C;&#x4F59;&#x989D;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x4F1A;&#x4E24;&#x6B21;&#x8BFB;&#x53D6;&#x8D26;&#x6237;&#x4F59;&#x989D;&#xFF0C;&#x53EF;&#x80FD;&#x770B;&#x5230;&#x7684;&#x8BBE;&#x7F6E;&#x4F59;&#x989D;&#x548C;&#x8BFB;&#x53D6;&#x4F59;&#x989D;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5F53; Account &#x7C7B;&#x7684; run() &#x65B9;&#x6CD5;&#x4E2D;&#x589E;&#x52A0;&#x7EBF;&#x7A0B;&#x7761;&#x7720;&#xFF0C;&#x4EE5;&#x589E;&#x5927;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x8BBE;&#x7F6E;&#x8D26;&#x6237;&#x540D;&#x79F0;&#x4E4B;&#x540E;&#xFF0C;&#x8FD8;&#x6CA1;&#x8BBE;&#x7F6E;&#x8D26;&#x6237;&#x4F59;&#x989D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x5C31;&#x8BFB;&#x53D6;&#x5230;&#x4E86;&#x8D26;&#x6237;&#x4F59;&#x989D;&#xFF0C;&#x56E0;&#x6B64;&#x5BFC;&#x81F4;&#x810F;&#x8BFB;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x91D1;&#x878D;&#x4E1A;&#x52A1;&#x4E2D;&#xFF0C;&#x810F;&#x8BFB;&#x5F88;&#x6709;&#x5FC5;&#x8981;&#x907F;&#x514D;&#x7684;&#x3002; &#x907F;&#x514D;&#x7EBF;&#x7A0B;&#x810F;&#x8BFB;&#x95EE;&#x9898;&#x5C31;&#x9700;&#x8981;&#x5BF9;&#x8BFB;&#x64CD;&#x4F5C;&#x4E5F;&#x8FDB;&#x884C;&#x52A0;&#x9501;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051/** * &#x5BF9;&#x4E1A;&#x52A1;&#x5199;&#x65B9;&#x6CD5;&#x52A0;&#x9501; * &#x5BF9;&#x4E1A;&#x52A1;&#x8BFB;&#x65B9;&#x6CD5;&#x4E0D;&#x52A0;&#x9501; * &#x5BB9;&#x6613;&#x4EA7;&#x751F;&#x810F;&#x8BFB;&#x95EE;&#x9898;&#xFF08;dirtyRead&#xFF09; */import java.util.concurrent.TimeUnit;public class Account { String name; double balance; public synchronized void set(String name, double balance) { this.name = name; /* try { Thread.sleep(2000); } catch (InterruptedException e) { e.printStackTrace(); } */ this.balance = balance; } public /*synchronized*/ double getBalance(String name) { return this.balance; } public static void main(String[] args) { Account a = new Account(); new Thread(()-&gt;a.set(&quot;zhangsan&quot;, 100.0)).start(); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(a.getBalance(&quot;zhangsan&quot;)); try { TimeUnit.SECONDS.sleep(2); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(a.getBalance(&quot;zhangsan&quot;)); }} 1.8 synchronized &#x662F;&#x91CD;&#x5165;&#x9501;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF1A;m1() &#x548C; m2() &#x65B9;&#x6CD5;&#x90FD;&#x52A0;&#x4E86; synchronized &#x9501;&#xFF0C;&#x4E24;&#x4E2A;&#x9501;&#x7684;&#x5BF9;&#x8C61;&#x90FD;&#x662F;this&#xFF0C;&#x90A3;&#x4E48;&#x5F53;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5DF2;&#x7ECF;&#x8FD0;&#x884C; m1() &#x65B9;&#x6CD5;&#x4E4B;&#x65F6;&#xFF0C;&#x5728; m1() &#x65B9;&#x6CD5;&#x4E2D;&#x8C03;&#x7528;&#x4E86; m2() &#x65B9;&#x6CD5;&#xFF0C;&#x4E14;&#x8FD9;&#x4E2A; m2() &#x65B9;&#x6CD5;&#x4E5F;&#x662F;&#x52A0;&#x4E86;&#x9501;&#x7684;&#xFF0C;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x8FD9;&#x4E2A; m2() &#x65B9;&#x6CD5;&#x8FD0;&#x884C;&#xFF0C;&#x7B54;&#x6848;&#x662F;&#x53EF;&#x4EE5;&#x7684;&#xFF0C;synchronized &#x4F1A;&#x6709;&#x8BA1;&#x6570;&#x5668;&#x8FDB;&#x884C;&#x8BA1;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x91CD;&#x5165;&#x4E86;&#x51E0;&#x6B21;&#x3002; 12345678910111213141516171819202122232425262728/** * &#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#xFF0C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5DF2;&#x7ECF;&#x62E5;&#x6709;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x9501;&#xFF0C;&#x518D;&#x6B21;&#x7533;&#x8BF7;&#x7684;&#x65F6;&#x5019;&#x4ECD;&#x7136;&#x4F1A;&#x5F97;&#x5230;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x9501;. * &#x4E5F;&#x5C31;&#x662F;&#x8BF4;synchronized&#x83B7;&#x5F97;&#x7684;&#x9501;&#x662F;&#x53EF;&#x91CD;&#x5165;&#x7684; * */import java.util.concurrent.TimeUnit;public class T { synchronized void m1() { System.out.println(&quot;m1 start&quot;); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } m2(); } synchronized void m2() { try { TimeUnit.SECONDS.sleep(2); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(&quot;m2&quot;); }} &#x5728;&#x5B50;&#x7C7B;&#x548C;&#x7236;&#x7C7B;&#x4E4B;&#x95F4;&#xFF0C;&#x4E5F;&#x662F;&#x53EF;&#x4EE5; synchronized &#x91CD;&#x5165;&#x3002; 1234567891011121314151617181920212223242526272829303132333435/** * &#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#xFF0C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5DF2;&#x7ECF;&#x62E5;&#x6709;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x9501;&#xFF0C;&#x518D;&#x6B21;&#x7533;&#x8BF7;&#x7684;&#x65F6;&#x5019;&#x4ECD;&#x7136;&#x4F1A;&#x5F97;&#x5230;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x9501;. * &#x4E5F;&#x5C31;&#x662F;&#x8BF4;synchronized&#x83B7;&#x5F97;&#x7684;&#x9501;&#x662F;&#x53EF;&#x91CD;&#x5165;&#x7684; * &#x8FD9;&#x91CC;&#x662F;&#x7EE7;&#x627F;&#x4E2D;&#x6709;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x7684;&#x60C5;&#x5F62;&#xFF0C;&#x5B50;&#x7C7B;&#x8C03;&#x7528;&#x7236;&#x7C7B;&#x7684;&#x540C;&#x6B65;&#x65B9;&#x6CD5; * */package yxxy.c_010;import java.util.concurrent.TimeUnit;public class T { synchronized void m() { System.out.println(&quot;m start&quot;); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(&quot;m end&quot;); } public static void main(String[] args) { new TT().m(); } }class TT extends T { @Override synchronized void m() { System.out.println(&quot;child m start&quot;); super.m(); System.out.println(&quot;child m end&quot;); }} 1.9 synchronized&#x9047;&#x5230;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x91CA;&#x653E;&#x9501;&#x7A0B;&#x5E8F;&#x5728;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x5F02;&#x5E38;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x9501;&#x4F1A;&#x88AB;&#x91CA;&#x653E;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x5728;&#x5E76;&#x53D1;&#x5904;&#x7406;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6709;&#x5F02;&#x5E38;&#x8981;&#x591A;&#x52A0;&#x5C0F;&#x5FC3;&#xFF0C;&#x4E0D;&#x7136;&#x53EF;&#x80FD;&#x4F1A;&#x53D1;&#x751F;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x5F53; count &#x5B50;&#x589E;&#x5230; 5 &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x56E0;&#x4E3A;&#x7B97;&#x672F;&#x8BA1;&#x7B97;&#x5F02;&#x5E38;&#x5BFC;&#x81F4;&#x9501;&#x88AB;&#x91CA;&#x653E;&#xFF0C;&#x90A3;&#x4E48;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x53EA;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x534A;&#x64CD;&#x4F5C;&#xFF0C;&#x53E6;&#x4E00;&#x534A;&#x672A;&#x64CD;&#x4F5C;&#x7684;&#x8D44;&#x6E90;&#x4F1A;&#x88AB;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x62A2;&#x53BB;&#x64CD;&#x4F5C;&#xFF0C;&#x9020;&#x6210;&#x7EBF;&#x7A0B;&#x540C;&#x6B65;&#x95EE;&#x9898;&#x3002; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849/** * &#x7A0B;&#x5E8F;&#x5728;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x5F02;&#x5E38;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x9501;&#x4F1A;&#x88AB;&#x91CA;&#x653E; * &#x6240;&#x4EE5;&#xFF0C;&#x5728;&#x5E76;&#x53D1;&#x5904;&#x7406;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6709;&#x5F02;&#x5E38;&#x8981;&#x591A;&#x52A0;&#x5C0F;&#x5FC3;&#xFF0C;&#x4E0D;&#x7136;&#x53EF;&#x80FD;&#x4F1A;&#x53D1;&#x751F;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x60C5;&#x51B5;&#x3002; * &#x6BD4;&#x5982;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;web app&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x591A;&#x4E2A;servlet&#x7EBF;&#x7A0B;&#x5171;&#x540C;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#xFF0C;&#x8FD9;&#x65F6;&#x5982;&#x679C;&#x5F02;&#x5E38;&#x5904;&#x7406;&#x4E0D;&#x5408;&#x9002;&#xFF0C; * &#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E2D;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x5C31;&#x4F1A;&#x8FDB;&#x5165;&#x540C;&#x6B65;&#x4EE3;&#x7801;&#x533A;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x8BBF;&#x95EE;&#x5230;&#x5F02;&#x5E38;&#x4EA7;&#x751F;&#x65F6;&#x7684;&#x6570;&#x636E;&#x3002; * &#x56E0;&#x6B64;&#x8981;&#x975E;&#x5E38;&#x5C0F;&#x5FC3;&#x7684;&#x5904;&#x7406;&#x540C;&#x6B65;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E2D;&#x7684;&#x5F02;&#x5E38; * */public class T { int count = 0; synchronized void m() { System.out.println(Thread.currentThread().getName() + &quot; start&quot;); while(true) { count ++; System.out.println(Thread.currentThread().getName() + &quot; count = &quot; + count); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } if(count == 5) { int i = 1/0; //&#x6B64;&#x5904;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x9501;&#x5C06;&#x88AB;&#x91CA;&#x653E;&#xFF0C;&#x8981;&#x60F3;&#x4E0D;&#x88AB;&#x91CA;&#x653E;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x8FDB;&#x884C;catch&#xFF0C;&#x7136;&#x540E;&#x8BA9;&#x5FAA;&#x73AF;&#x7EE7;&#x7EED; } } } public static void main(String[] args) { T t = new T(); Runnable r = new Runnable() { @Override public void run() { t.m(); } }; new Thread(r, &quot;t1&quot;).start(); try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { e.printStackTrace(); } new Thread(r, &quot;t2&quot;).start(); }} 1.10 volatile &#x4FDD;&#x8BC1;&#x7EBF;&#x7A0B;&#x7684;&#x53EF;&#x89C1;&#x6027;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748/** * volatile &#x5173;&#x952E;&#x5B57;&#xFF0C;&#x4F7F;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x5728;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x95F4;&#x53EF;&#x89C1; * A B&#x7EBF;&#x7A0B;&#x90FD;&#x7528;&#x5230;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;java&#x9ED8;&#x8BA4;&#x662F;A&#x7EBF;&#x7A0B;&#x4E2D;&#x4FDD;&#x7559;&#x4E00;&#x4EFD;copy&#xFF0C;&#x8FD9;&#x6837;&#x5982;&#x679C;B&#x7EBF;&#x7A0B;&#x4FEE;&#x6539;&#x4E86;&#x8BE5;&#x53D8;&#x91CF;&#xFF0C;&#x5219;A&#x7EBF;&#x7A0B;&#x672A;&#x5FC5;&#x77E5;&#x9053; * &#x4F7F;&#x7528;volatile&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x4F1A;&#x8BA9;&#x6240;&#x6709;&#x7EBF;&#x7A0B;&#x90FD;&#x4F1A;&#x8BFB;&#x5230;&#x53D8;&#x91CF;&#x7684;&#x4FEE;&#x6539;&#x503C; * * &#x5728;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;running&#x662F;&#x5B58;&#x5728;&#x4E8E;&#x5806;&#x5185;&#x5B58;&#x7684;t&#x5BF9;&#x8C61;&#x4E2D; * &#x5F53;&#x7EBF;&#x7A0B;t1&#x5F00;&#x59CB;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x628A;running&#x503C;&#x4ECE;&#x5185;&#x5B58;&#x4E2D;&#x8BFB;&#x5230;t1&#x7EBF;&#x7A0B;&#x7684;&#x5DE5;&#x4F5C;&#x533A;&#xFF0C;&#x5728;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;copy&#xFF0C;&#x5E76;&#x4E0D;&#x4F1A;&#x6BCF;&#x6B21;&#x90FD;&#x53BB; * &#x8BFB;&#x53D6;&#x5806;&#x5185;&#x5B58;&#xFF0C;&#x8FD9;&#x6837;&#xFF0C;&#x5F53;&#x4E3B;&#x7EBF;&#x7A0B;&#x4FEE;&#x6539;running&#x7684;&#x503C;&#x4E4B;&#x540E;&#xFF0C;t1&#x7EBF;&#x7A0B;&#x611F;&#x77E5;&#x4E0D;&#x5230;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x4F1A;&#x505C;&#x6B62;&#x8FD0;&#x884C; * * &#x4F7F;&#x7528;volatile&#xFF0C;&#x5C06;&#x4F1A;&#x5F3A;&#x5236;&#x6240;&#x6709;&#x7EBF;&#x7A0B;&#x90FD;&#x53BB;&#x5806;&#x5185;&#x5B58;&#x4E2D;&#x8BFB;&#x53D6;running&#x7684;&#x503C; * * &#x53EF;&#x4EE5;&#x9605;&#x8BFB;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x8FDB;&#x884C;&#x66F4;&#x6DF1;&#x5165;&#x7684;&#x7406;&#x89E3; * http://www.cnblogs.com/nexiyi/p/java_memory_model_and_thread.html * * volatile&#x5E76;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5171;&#x540C;&#x4FEE;&#x6539;running&#x53D8;&#x91CF;&#x65F6;&#x6240;&#x5E26;&#x6765;&#x7684;&#x4E0D;&#x4E00;&#x81F4;&#x95EE;&#x9898;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;volatile&#x4E0D;&#x80FD;&#x66FF;&#x4EE3;synchronized * */import java.util.concurrent.TimeUnit;public class T { /*volatile*/ boolean running = true; //&#x5BF9;&#x6BD4;&#x4E00;&#x4E0B;&#x6709;&#x65E0;volatile&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6574;&#x4E2A;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x7684;&#x533A;&#x522B; void m() { System.out.println(&quot;m start&quot;); while(running) { /* try { TimeUnit.MILLISECONDS.sleep(10); } catch (InterruptedException e) { e.printStackTrace(); }*/ } System.out.println(&quot;m end!&quot;); } public static void main(String[] args) { T t = new T(); new Thread(t::m, &quot;t1&quot;).start(); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } t.running = false; } } &#x6CE8;&#x610F;&#xFF1A;volatile &#x5E76;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x539F;&#x5B50;&#x6027; &#x5341;&#x4E2A;&#x7EBF;&#x7A0B;&#x5728;&#x81EA;&#x589E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F53;&#x81EA;&#x589E;&#x5B8C;&#x4E86;&#x5C31;&#x4F1A;&#x5237;&#x65B0;&#x5230;&#x4E3B;&#x5185;&#x5B58;&#xFF0C;&#x5F53;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x8981;&#x62FF;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x66F4;&#x65B0;&#xFF0C;&#x4F46;&#x662F;&#x62FF;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x521A;&#x8981;&#x81EA;&#x589E;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;CPU &#x8D44;&#x6E90;&#x88AB;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x62A2;&#x5360;&#xFF0C;&#x56E0;&#x6B64;&#x522B;&#x7684;&#x7EBF;&#x7A0B;&#x90FD;&#x81EA;&#x589E;&#x6210;&#x5F88;&#x5927;&#x7684;&#x6570;&#x503C;&#xFF0C;&#x800C;&#x6B64;&#x7EBF;&#x7A0B;&#x518D;&#x62A2;&#x5230; CPU &#x8D44;&#x6E90;&#x6267;&#x884C;&#x81EA;&#x589E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x662F;&#x4E4B;&#x524D;&#x7684;&#x5C0F;&#x6570;&#x503C;&#x81EA;&#x589E;&#xFF0C;&#x56E0;&#x6B64;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x81EA;&#x589E;&#x4E00;&#x4E07;&#xFF0C;&#x5341;&#x4E2A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x4E4B;&#x540E;&#xFF0C;&#x6700;&#x7EC8;&#x7684; count &#x5E94;&#x8BE5;&#x662F;&#x5341;&#x4E07;&#xFF0C;&#x5F53;&#x65F6;&#x7ED3;&#x679C;&#x5F88;&#x5DEE;&#x5F3A;&#x4EBA;&#x610F;&#x3002; 123456789101112131415161718192021222324252627282930313233343536/** * volatile&#x5E76;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5171;&#x540C;&#x4FEE;&#x6539;running&#x53D8;&#x91CF;&#x65F6;&#x6240;&#x5E26;&#x6765;&#x7684;&#x4E0D;&#x4E00;&#x81F4;&#x95EE;&#x9898;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;volatile&#x4E0D;&#x80FD;&#x66FF;&#x4EE3;synchronized * &#x8FD0;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x5E76;&#x5206;&#x6790;&#x7ED3;&#x679C; * */import java.util.ArrayList;import java.util.List;public class T { volatile int count = 0; void m() { for(int i=0; i&lt;10000; i++) count++; } public static void main(String[] args) { T t = new T(); List&lt;Thread&gt; threads = new ArrayList&lt;Thread&gt;(); for(int i=0; i&lt;10; i++) { threads.add(new Thread(t::m, &quot;thread-&quot;+i)); } threads.forEach((o)-&gt;o.start()); threads.forEach((o)-&gt;{ try { o.join(); } catch (InterruptedException e) { e.printStackTrace(); } }); System.out.println(t.count); } } &#x4F7F;&#x7528;&#x5E26;&#x6709;&#x539F;&#x5B50;&#x6027;&#x64CD;&#x4F5C;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684; AtomicInteger&#x5728;&#x81EA;&#x589E;&#x65F6;&#x5019;&#x5C31;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x4E00;&#x81F4;&#x6027;&#x95EE;&#x9898;&#x3002; 12345678910111213141516171819202122232425262728293031323334353637383940414243/** * &#x89E3;&#x51B3;&#x540C;&#x6837;&#x7684;&#x95EE;&#x9898;&#x7684;&#x66F4;&#x9AD8;&#x6548;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x7528;AtomXXX&#x7C7B; * AtomXXX&#x7C7B;&#x672C;&#x8EAB;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x539F;&#x5B50;&#x6027;&#x7684;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x591A;&#x4E2A;&#x65B9;&#x6CD5;&#x8FDE;&#x7EED;&#x8C03;&#x7528;&#x662F;&#x539F;&#x5B50;&#x6027;&#x7684; * */import java.util.ArrayList;import java.util.List;import java.util.concurrent.atomic.AtomicInteger;public class T { /*volatile*/ //int count = 0; AtomicInteger count = new AtomicInteger(0); /*synchronized*/ void m() { for (int i = 0; i &lt; 10000; i++) //if count.get() &lt; 1000 count.incrementAndGet(); //count++ } public static void main(String[] args) { T t = new T(); List&lt;Thread&gt; threads = new ArrayList&lt;Thread&gt;(); for (int i = 0; i &lt; 10; i++) { threads.add(new Thread(t::m, &quot;thread-&quot; + i)); } threads.forEach((o) -&gt; o.start()); threads.forEach((o) -&gt; { try { o.join(); } catch (InterruptedException e) { e.printStackTrace(); } }); System.out.println(t.count); }} 1.11 synchronized &#x4F18;&#x5316;&#xFF08;&#x7C97;&#x7EC6;&#x9501;&#xFF09;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x7531;&#x4E8E; synchronized &#x9501;&#x7684;&#x8303;&#x56F4;&#x4E0D;&#x540C;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x6548;&#x7387;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x8D8A;&#x7CBE;&#x7EC6;&#x7684;&#x9501;&#x8D8A;&#x9AD8;&#x6548;&#x3002; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950/** * synchronized&#x4F18;&#x5316; * &#x540C;&#x6B65;&#x4EE3;&#x7801;&#x5757;&#x4E2D;&#x7684;&#x8BED;&#x53E5;&#x8D8A;&#x5C11;&#x8D8A;&#x597D; * &#x6BD4;&#x8F83;m1&#x548C;m2 * */import java.util.concurrent.TimeUnit;public class T { int count = 0; synchronized void m1() { //do sth need not sync try { TimeUnit.SECONDS.sleep(2); } catch (InterruptedException e) { e.printStackTrace(); } //&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E2D;&#x53EA;&#x6709;&#x4E0B;&#x9762;&#x8FD9;&#x53E5;&#x9700;&#x8981;sync&#xFF0C;&#x8FD9;&#x65F6;&#x4E0D;&#x5E94;&#x8BE5;&#x7ED9;&#x6574;&#x4E2A;&#x65B9;&#x6CD5;&#x4E0A;&#x9501; count ++; //do sth need not sync try { TimeUnit.SECONDS.sleep(2); } catch (InterruptedException e) { e.printStackTrace(); } } void m2() { //do sth need not sync try { TimeUnit.SECONDS.sleep(2); } catch (InterruptedException e) { e.printStackTrace(); } //&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E2D;&#x53EA;&#x6709;&#x4E0B;&#x9762;&#x8FD9;&#x53E5;&#x9700;&#x8981;sync&#xFF0C;&#x8FD9;&#x65F6;&#x4E0D;&#x5E94;&#x8BE5;&#x7ED9;&#x6574;&#x4E2A;&#x65B9;&#x6CD5;&#x4E0A;&#x9501; //&#x91C7;&#x7528;&#x7EC6;&#x7C92;&#x5EA6;&#x7684;&#x9501;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7EBF;&#x7A0B;&#x4E89;&#x7528;&#x65F6;&#x95F4;&#x53D8;&#x77ED;&#xFF0C;&#x4ECE;&#x800C;&#x63D0;&#x9AD8;&#x6548;&#x7387; synchronized(this) { count ++; } //do sth need not sync try { TimeUnit.SECONDS.sleep(2); } catch (InterruptedException e) { e.printStackTrace(); } }} 1.12 &#x5230;&#x5E95;&#x9501;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#xFF08;&#x9501;&#x5B9A;&#x5806;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#xFF09;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;m() &#x65B9;&#x6CD5;&#x662F;&#x4E00;&#x4E2A;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x5F53;&#x7B2C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x62FF;&#x5230;&#x9501;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6309;&#x7406;&#x6765;&#x8BF4;&#xFF0C;&#x4E00;&#x5B9A;&#x662F;&#x4E0D;&#x4F1A;&#x91CA;&#x653E;&#x9501;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x5C31;&#x662F;&#x4E2A;&#x65E0;&#x9650;&#x6B7B;&#x5FAA;&#x73AF;&#x6267;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x800C;&#x5F53;&#x9501;&#x5BF9;&#x8C61;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x4F1A;&#x9020;&#x6210;&#x9501;&#x5B9A;&#x8981;&#x9501;&#x7684;&#x5BF9;&#x8C61;&#x88AB;&#x91CA;&#x653E;&#x6389;&#x4E86;&#x3002; 1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * &#x9501;&#x5B9A;&#x67D0;&#x5BF9;&#x8C61;o&#xFF0C;&#x5982;&#x679C;o&#x7684;&#x5C5E;&#x6027;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x4E0D;&#x5F71;&#x54CD;&#x9501;&#x7684;&#x4F7F;&#x7528; * &#x4F46;&#x662F;&#x5982;&#x679C;o&#x53D8;&#x6210;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x5219;&#x9501;&#x5B9A;&#x7684;&#x5BF9;&#x8C61;&#x53D1;&#x751F;&#x6539;&#x53D8; * &#x5E94;&#x8BE5;&#x907F;&#x514D;&#x5C06;&#x9501;&#x5B9A;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x53D8;&#x6210;&#x53E6;&#x5916;&#x7684;&#x5BF9;&#x8C61; * */import java.util.concurrent.TimeUnit;public class T { Object o = new Object(); void m() { synchronized(o) { while(true) { try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(Thread.currentThread().getName()); } } } public static void main(String[] args) { T t = new T(); //&#x542F;&#x52A8;&#x7B2C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B; new Thread(t::m, &quot;t1&quot;).start(); try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { e.printStackTrace(); } //&#x521B;&#x5EFA;&#x7B2C;&#x4E8C;&#x4E2A;&#x7EBF;&#x7A0B; Thread t2 = new Thread(t::m, &quot;t2&quot;); t.o = new Object(); //&#x9501;&#x5BF9;&#x8C61;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x6240;&#x4EE5;t2&#x7EBF;&#x7A0B;&#x5F97;&#x4EE5;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x6CE8;&#x91CA;&#x6389;&#x8FD9;&#x53E5;&#x8BDD;&#xFF0C;&#x7EBF;&#x7A0B;2&#x5C06;&#x6C38;&#x8FDC;&#x5F97;&#x4E0D;&#x5230;&#x6267;&#x884C;&#x673A;&#x4F1A; t2.start(); }} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>并发编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java高并发编程 | 学习笔记（一）]]></title>
    <url>%2F2019%2F01%2F28%2F022%2F</url>
    <content type="text"><![CDATA[1. &#x591A;&#x7EBF;&#x7A0B;&#x57FA;&#x7840;&#x56DE;&#x987E;1.1 synchronized&#x5173;&#x952E;&#x5B57;&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x5F15;&#x53D1;&#x7684;&#x6570;&#x636E;&#x5171;&#x4EAB;&#x95EE;&#x9898;&#xFF0C;&#x6700;&#x5E38;&#x89C1;&#x5F15;&#x7528;&#x7684;&#x9501;&#x673A;&#x5236;&#x5C31;&#x662F;&#x5229;&#x7528;synchronized&#x5173;&#x952E;&#x5B57; 1234567891011121314151617/** * synchronized&#x5173;&#x952E;&#x5B57; * &#x5BF9;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x52A0;&#x9501; */public class T { private int count = 10; private Object o = new Object(); public void m() { synchronized(o) { // &#x4EFB;&#x4F55;&#x7EBF;&#x7A0B;&#x8981;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5FC5;&#x987B;&#x5148;&#x62FF;&#x5230; o &#x7684;&#x9501; count--; System.out.println(Thread.currentThread().getName() + &quot; count = &quot; + count); } } } &#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;synchronized&#x5173;&#x952E;&#x5B57;&#x9501;&#x4F4F;&#x7684;&#x662F;&#x5806;&#x5185;&#x5B58;&#x4E2D;&#x7684;Object o&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5F15;&#x7528; o&#x3002; 1.2 synchronized&#x5173;&#x952E;&#x5B57;&#x5BF9;&#x5F53;&#x524D;&#x7C7B;&#x5BF9;&#x8C61;&#x52A0;&#x9501;&#x5982;&#x4E0A;&#x5C0F;&#x8282;&#x6240;&#x793A;&#xFF0C;&#x6BCF;&#x6B21;&#x9501;&#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD; new &#x4E00;&#x4E2A;&#x8981;&#x9501;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x672A;&#x514D;&#x592A;&#x9EBB;&#x70E6;&#xFF0C;&#x4E0D;&#x5982;&#x9501;&#x4E00;&#x4E2A;&#x73B0;&#x6210;&#x7684;&#x5BF9;&#x8C61;&#xFF1A;this 123456789101112131415/** * synchronized&#x5173;&#x952E;&#x5B57; * &#x5BF9;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x52A0;&#x9501; */public class T { private int count = 10; public void m() { synchronized(this) { // &#x4EFB;&#x4F55;&#x7EBF;&#x7A0B;&#x8981;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5FC5;&#x987B;&#x5148;&#x62FF;&#x5230;this&#x7684;&#x9501; count--; System.out.println(Thread.currentThread().getName() + &quot; count = &quot; + count); } }} &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E0E;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x7B49;&#x540C;&#xFF1A; 123456789101112/** * synchronized&#x5173;&#x952E;&#x5B57; * &#x5BF9;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x52A0;&#x9501; */public class T { private int count = 10; public synchronized void m() { // &#x7B49;&#x540C;&#x4E8E;&#x5728;&#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7801;&#x6267;&#x884C;&#x65F6;&#x8981;synchronized(this) count--; System.out.println(Thread.currentThread().getName() + &quot; count = &quot; + count); }} 1.3 synchronized &#x9501;&#x4F4F;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#x5F53;&#x6709;static&#x5B58;&#x5728;&#x7684;&#x65F6;&#x5019;&#xFF0C;synchronized&#x5173;&#x952E;&#x5B57;&#x9501;&#x4F4F;&#x7684;&#x662F;&#x9759;&#x6001;&#x7C7B;&#x7684; .class &#x7C7B;&#x5BF9;&#x8C61;&#xFF08;java.lang.Class &#x7C7B;&#xFF09; 123456789101112131415161718/** * synchronized&#x5173;&#x952E;&#x5B57; * &#x5BF9;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x52A0;&#x9501; */public class T { private static int count = 10; public synchronized static void m() { //&#x8FD9;&#x91CC;&#x7B49;&#x540C;&#x4E8E;synchronized(org.woodwhales.T.class) count--; System.out.println(Thread.currentThread().getName() + &quot; count = &quot; + count); } public static void mm() { synchronized(T.class) { //&#x8003;&#x8651;&#x4E00;&#x4E0B;&#x8FD9;&#x91CC;&#x5199;synchronized(this)&#x662F;&#x5426;&#x53EF;&#x4EE5;&#xFF1F; count --; } }} 1.5 synchronized&#x5173;&#x952E;&#x5B57;&#x89E3;&#x51B3;&#x7EBF;&#x7A0B;&#x91CD;&#x5165;&#x95EE;&#x9898;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x7C7B; T &#x7684; run() &#x65B9;&#x6CD5;&#x6CA1;&#x6709; synchronized &#x9501;&#x673A;&#x5236;&#x4FDD;&#x62A4;&#x65B9;&#x6CD5;&#x4F53;&#x91CC;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x51FA;&#x73B0;&#x7EBF;&#x7A0B;&#x91CD;&#x5165;&#x7684;&#x95EE;&#x9898;&#x800C;&#x5BFC;&#x81F4;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x4E00;&#x81F4;&#x95EE;&#x9898;&#x3002; 12345678910111213141516public class T implements Runnable { private int count = 10; @Override public /*synchronized*/ void run() { count--; System.out.println(Thread.currentThread().getName() + &quot; count = &quot; + count); } public static void main(String[] args) { T t = new T(); for(int i=0; i&lt;5; i++) { new Thread(t, &quot;THREAD&quot; + i).start(); } }} &#x8F93;&#x51FA;&#x5947;&#x602A;&#x7684;&#x7ED3;&#x679C;&#xFF1A; 12345THREAD0 count = 8THREAD3 count = 6THREAD2 count = 7THREAD1 count = 8THREAD4 count = 5 &#x4ECE;&#x4E0A;&#x8FF0;&#x793A;&#x4F8B;&#x53EF;&#x77E5;&#xFF1A;synchronized &#x4EE3;&#x7801;&#x5757;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x64CD;&#x4F5C;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF0C;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x8D44;&#x6E90;&#x4E2D;&#x662F;&#x4E0D;&#x53EF;&#x5206;&#x5272;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5F53;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x5F97;&#x5230;&#x9501;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x4ED6;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x8FD9;&#x628A;&#x9501;&#xFF0C;&#x800C;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x83B7;&#x5F97;&#x9501;&#xFF0C;&#x83B7;&#x5F97;&#x7684;&#x524D;&#x63D0;&#x6761;&#x4EF6;&#x662F;&#xFF1A;&#x5DF2;&#x83B7;&#x5F97;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x9501;&#x4EE3;&#x7801;&#x5757;&#x4E2D;&#x7684;&#x8D44;&#x6E90;&#x64CD;&#x4F5C;&#x4E4B;&#x540E;&#x91CA;&#x653E;&#x6389;&#x9501;&#x3002; 1234567891011121314151617181920/** * &#x5BF9;&#x6BD4;&#x4E0A;&#x9762;&#x4E00;&#x4E2A;&#x5C0F;&#x7A0B;&#x5E8F;&#xFF0C;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x7A0B;&#x5E8F;&#x7684;&#x8F93;&#x51FA; * T &#x5BF9;&#x8C61;&#x7684; run() &#x65B9;&#x6CD5;&#x4F7F;&#x7528;&#x4E86;&#x540C;&#x6B65;&#x9501;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x591A;&#x7EBF;&#x7A0B;&#x540C;&#x6B65;&#x95EE;&#x9898; */public class T implements Runnable { private int count = 10; public synchronized void run() { count--; System.out.println(Thread.currentThread().getName() + &quot; count = &quot; + count); } public static void main(String[] args) { T t = new T(); for(int i=0; i&lt;5; i++) { new Thread(t, &quot;THREAD&quot; + i).start(); } } } &#x6267;&#x884C;&#x7ED3;&#x679C;&#x59CB;&#x7EC8;&#x662F;&#xFF1A; 12345THREAD0 count = 9THREAD1 count = 8THREAD3 count = 7THREAD2 count = 6THREAD4 count = 5 1.6 &#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x548C;&#x975E;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x88AB;&#x591A;&#x7EBF;&#x7A0B;&#x8C03;&#x7528;&#x4E0B;&#x9762;&#x793A;&#x4F8B;&#x4E2D;&#xFF1A;m1() &#x65B9;&#x6CD5;&#x662F;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#xFF0C;m2() &#x65B9;&#x6CD5;&#x662F;&#x975E;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#xFF0C; 1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * &#x540C;&#x6B65;&#x548C;&#x975E;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8C03;&#x7528;&#xFF1F; * &#x53EF;&#x4EE5; */public class T { public synchronized void m1() { System.out.println(Thread.currentThread().getName() + &quot; m1 start...&quot;); try { Thread.sleep(10000); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(Thread.currentThread().getName() + &quot; m1 end&quot;); } public void m2() { try { Thread.sleep(5000); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(Thread.currentThread().getName() + &quot; m2 &quot;); } public static void main(String[] args) { T t = new T(); /*new Thread(()-&gt;t.m1(), &quot;t1&quot;).start(); new Thread(()-&gt;t.m2(), &quot;t2&quot;).start();*/ new Thread(t::m1, &quot;t1&quot;).start(); new Thread(t::m2, &quot;t2&quot;).start(); /* &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x5728; JDK1.8 &#x4E2D;&#x7B49;&#x540C;&#x4E8E;&#x4E0B;&#x9762;&#x4EE3;&#x7801; new Thread(new Runnable() { @Override public void run() { t.m1(); } }); */ }} &#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF1A;m1 &#x6253;&#x5370;&#x7684;&#x8FC7;&#x7A0B;&#x4E4B;&#x4E2D;&#xFF0C; m2 &#x4E5F;&#x6253;&#x5370;&#x4E86;&#x51FA;&#x6765;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x7ED3;&#x8BBA;&#xFF0C;m1() &#x65B9;&#x6CD5;&#x88AB;&#x7EBF;&#x7A0B;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x975E;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x88AB;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x8C03;&#x7528;&#x8FD0;&#x884C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F; synchronized &#x65B9;&#x6CD5;&#x5757;&#x5728;&#x6267;&#x884C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x975E; synchronized &#x65B9;&#x6CD5;&#x662F;&#x53EF;&#x4EE5;&#x88AB;&#x6267;&#x884C;&#x7684;&#x3002; 123t1 m1 start...t2 m2 t1 m1 end document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>并发编程</category>
      </categories>
      <tags>
        <tag>并发编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Restful API 最佳实践]]></title>
    <url>%2F2019%2F01%2F27%2F021%2F</url>
    <content type="text"><![CDATA[&#x524D;&#x540E;&#x7AEF;&#x5206;&#x79BB;&#x548C;&#x5FAE;&#x670D;&#x52A1;&#x6210;&#x4E3A;&#x73B0;&#x4EE3;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x7684;&#x5927;&#x8D8B;&#x52BF;&#x4E0B;&#xFF0C;API&#x8BBE;&#x8BA1;&#x4E5F;&#x5E94;&#x8BE5;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x89C4;&#x8303;&#x548C;&#x9AD8;&#x6548;&#x3002; 1. RESTfulREST&#xFF08;&#x82F1;&#x6587;&#xFF1A;Representational State Transfer&#xFF0C;&#x7B80;&#x79F0;REST&#xFF09;&#xFF0C;RESTful&#x662F;&#x4E00;&#x79CD;&#x5BF9;&#x57FA;&#x4E8E;HTTP&#x7684;&#x5E94;&#x7528;&#x8BBE;&#x8BA1;&#x98CE;&#x683C;&#xFF0C;&#x53EA;&#x662F;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x7EC4;&#x8BBE;&#x8BA1;&#x539F;&#x5219;&#x548C;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x79CD;&#x6807;&#x51C6;&#x3002; &#x4ECE;&#x672C;&#x8D28;&#x4E0A;&#x7406;&#x89E3;RESTful&#xFF0C;&#x5B83;&#x5176;&#x5B9E;&#x662F;&#x5C3D;&#x53EF;&#x80FD;&#x590D;&#x7528;HTTP&#x7279;&#x6027;&#x6765;&#x89C4;&#x8303;&#x8F6F;&#x4EF6;&#x8BBE;&#x8BA1;&#xFF0C;&#x751A;&#x81F3;&#x63D0;&#x9AD8;&#x4F20;&#x8F93;&#x6548;&#x7387;&#x3002;HTTP&#x5305;&#x5904;&#x4E8E;&#x7F51;&#x7EDC;&#x5E94;&#x7528;&#x5C42;&#xFF0C;&#x56E0;&#x6B64;HTTP&#x5305;&#x4E3A;&#x5E73;&#x53F0;&#x65E0;&#x5173;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#xFF0C;&#x5982;&#x679C;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x4F7F;&#x7528;HTTP&#x7684;&#x5305;&#x7279;&#x5F81;&#x800C;&#x4E0D;&#x662F;&#x5927;&#x91CF;&#x5728;body&#x5B9A;&#x4E49;&#x81EA;&#x5DF1;&#x7684;&#x89C4;&#x5219;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x66F4;&#x7B80;&#x6D01;&#x3001;&#x6E05;&#x6670;&#x3001;&#x9AD8;&#x6548;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x540C;&#x6837;&#x7684;&#x9700;&#x6C42;&#x3002; &#x8BF7;&#x6C42;&#x65B9;&#x6CD5; &#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x8DEF;&#x5F84; &#x6570;&#x636E;&#x64CD;&#x4F5C;&#x8BF4;&#x660E; GET /users/ &#x83B7;&#x53D6;&#x6240;&#x6709;&#x7528;&#x6237;&#x6570;&#x636E; GET /users/1 &#x83B7;&#x53D6;id=1&#x7684;&#x7528;&#x6237;&#x6570;&#x636E; POST /users &#x65B0;&#x589E;&#x4E00;&#x6761;&#x7528;&#x6237;&#x6570;&#x636E; DELETE /users/1 &#x5220;&#x9664;id=1&#x7684;&#x7528;&#x6237;&#x6570;&#x636E; RESTful&#x7684;&#x672C;&#x8D28;&#x662F;&#x57FA;&#x4E8E;HTTP&#x534F;&#x8BAE;&#x5BF9;&#x8D44;&#x6E90;&#x7684;&#x589E;&#x5220;&#x6539;&#x67E5;&#x64CD;&#x4F5C;&#x505A;&#x51FA;&#x5B9A;&#x4E49;&#x3002; 1.1 &#x51E0;&#x4E2A;&#x5178;&#x578B;&#x7684;RESTful API&#x573A;&#x666F;&#xFF1A; &#x529F;&#x80FD; URL HTTP Method &#x83B7;&#x53D6;&#x4E00;&#x7EC4;&#x6570;&#x636E;&#x5217;&#x8868; /base-path/records GET &#x6839;&#x636E;ID&#x83B7;&#x53D6;&#x67D0;&#x4E2A;&#x6570;&#x636E; /base-path/records/{recordID} GET &#x65B0;&#x5EFA;&#x6570;&#x636E; /base-path/records POST &#x5B8C;&#x6574;&#x5730;&#x66F4;&#x65B0;&#x6570;&#x636E; /base-path/records/{recordID} PUT &#x90E8;&#x5206;&#x66F4;&#x65B0;&#x6570;&#x636E; /base-path/records/{recordID} PATCH &#x5220;&#x9664; /base-path/records/{recordID} DELETE &#x5938;&#x57DF;&#x8BBF;&#x95EE;&#x9884;&#x8BF7;&#x6C42; /base-path/records/{recordID} OPTION &#x867D;&#x7136;HTTP&#x534F;&#x8BAE;&#x5B9A;&#x4E49;&#x4E86;&#x5176;&#x4ED6;&#x7684;Method&#xFF0C;&#x4F46;&#x662F;&#x5C31;&#x666E;&#x901A;&#x573A;&#x666F;&#x6765;&#x8BF4;&#xFF0C;&#x7528;&#x597D;&#x4E0A;&#x9762;&#x7684;&#x51E0;&#x9879;&#x5DF2;&#x7ECF;&#x8DB3;&#x591F;&#x4E86;&#x3002; RESTful&#x7684;&#x51E0;&#x4E2A;&#x6CE8;&#x610F;&#x70B9;&#xFF1A; URL&#x53EA;&#x662F;&#x8868;&#x8FBE;&#x88AB;&#x64CD;&#x4F5C;&#x7684;&#x8D44;&#x6E90;&#x4F4D;&#x7F6E;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;&#x52A8;&#x8BCD;&#xFF0C;&#x4E14;&#x6CE8;&#x610F;&#x5355;&#x590D;&#x6570;&#x533A;&#x5206; &#x9664;&#x4E86;POST&#x548C;DELETE&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x64CD;&#x4F5C;&#x9700;&#x8981;&#x51A5;&#x7B49;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x5BF9;&#x6570;&#x636E;&#x591A;&#x6B21;&#x66F4;&#x65B0;&#x5E94;&#x8BE5;&#x8FD4;&#x56DE;&#x540C;&#x6837;&#x7684;&#x5185;&#x5BB9; &#x8BBE;&#x8BA1;&#x98CE;&#x683C;&#x6CA1;&#x6709;&#x5BF9;&#x9519;&#x4E4B;&#x5206;&#xFF0C;RESTful&#x4E00;&#x79CD;&#x8BBE;&#x8BA1;&#x98CE;&#x683C;&#xFF0C;&#x4E0E;&#x6B64;&#x5BF9;&#x5E94;&#x7684;&#x8FD8;&#x6709;RPC&#x751A;&#x81F3;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x98CE;&#x683C; RESTful&#x548C;&#x8BED;&#x8A00;&#x3001;&#x4F20;&#x8F93;&#x683C;&#x5F0F;&#x65E0;&#x5173; &#x65E0;&#x72B6;&#x6001;&#xFF0C;HTTP&#x8BBE;&#x8BA1;&#x672C;&#x6765;&#x5C31;&#x662F;&#x6CA1;&#x6709;&#x72B6;&#x6001;&#x7684;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x770B;&#x8D77;&#x6765;&#x6709;&#x72B6;&#x6001;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x6D4F;&#x89C8;&#x5668;&#x4F7F;&#x7528;&#x4E86;Cookies&#xFF0C;&#x6BCF;&#x6B21;&#x8BF7;&#x6C42;&#x90FD;&#x4F1A;&#x628A;Session ID&#xFF08;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x8EAB;&#x4EFD;&#x6807;&#x8BC6;&#xFF09;&#x4F20;&#x9012;&#x5230;headers&#x4E2D;&#x3002;&#x5173;&#x4E8E;RESTful&#x98CE;&#x683C;&#x4E0B;&#x600E;&#x4E48;&#x505A;&#x7528;&#x6237;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x6211;&#x4EEC;&#x4F1A;&#x5728;&#x540E;&#x9762;&#x8BB2;&#x5230;&#x3002; RESTful&#x6CA1;&#x6709;&#x5B9A;&#x4E49;body&#x4E2D;&#x5185;&#x5BB9;&#x4F20;&#x8F93;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x6709;&#x53E6;&#x5916;&#x7684;&#x89C4;&#x8303;&#x6765;&#x63CF;&#x8FF0;&#x600E;&#x4E48;&#x8BBE;&#x8BA1;body&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x7F51;&#x7EDC;&#x4E0A;&#x6709;&#x4E9B;&#x6587;&#x7AE0;&#x5BF9;RESTful&#x7684;&#x8303;&#x56F4;&#x7406;&#x89E3;&#x6709;&#x5DEE;&#x5F02; 1.2 &#x907F;&#x514D;&#x591A;&#x7EA7; URL&#x5E38;&#x89C1;&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF0C;&#x8D44;&#x6E90;&#x9700;&#x8981;&#x591A;&#x7EA7;&#x5206;&#x7C7B;&#xFF0C;&#x56E0;&#x6B64;&#x5F88;&#x5BB9;&#x6613;&#x5199;&#x51FA;&#x591A;&#x7EA7;&#x7684; URL&#xFF0C;&#x6BD4;&#x5982;&#x83B7;&#x53D6;&#x67D0;&#x4E2A;&#x4F5C;&#x8005;&#x7684;&#x67D0;&#x4E00;&#x7C7B;&#x6587;&#x7AE0;&#x3002; 1GET /authors/12/categories/2 &#x8FD9;&#x79CD; URL &#x4E0D;&#x5229;&#x4E8E;&#x6269;&#x5C55;&#xFF0C;&#x8BED;&#x4E49;&#x4E5F;&#x4E0D;&#x660E;&#x786E;&#xFF0C;&#x5F80;&#x5F80;&#x8981;&#x60F3;&#x4E00;&#x4F1A;&#xFF0C;&#x624D;&#x80FD;&#x660E;&#x767D;&#x542B;&#x4E49;&#x3002; &#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x9664;&#x4E86;&#x7B2C;&#x4E00;&#x7EA7;&#xFF0C;&#x5176;&#x4ED6;&#x7EA7;&#x522B;&#x90FD;&#x7528;&#x67E5;&#x8BE2;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x8FBE;&#x3002; 1GET /authors/12?categories=2 &#x4E0B;&#x9762;&#x662F;&#x53E6;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x67E5;&#x8BE2;&#x5DF2;&#x53D1;&#x5E03;&#x7684;&#x6587;&#x7AE0;&#x3002;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x8BBE;&#x8BA1;&#x6210;&#x4E0B;&#x9762;&#x7684; URL&#x3002; 1GET /articles/published &#x67E5;&#x8BE2;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5199;&#x6CD5;&#x660E;&#x663E;&#x66F4;&#x597D;&#x3002; 1GET /articles?published=true 2. JSON API&#x56E0;&#x4E3A;RESTful&#x98CE;&#x683C;&#x4EC5;&#x4EC5;&#x89C4;&#x5B9A;&#x4E86;URL&#x548C;HTTP Method&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x5B9A;&#x4E49;body&#x4E2D;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x600E;&#x4E48;&#x5B9A;&#x4E49;&#x8BF7;&#x6C42;&#x6216;&#x8005;&#x8FD4;&#x56DE;&#x5BF9;&#x8C61;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x4EE5;&#x53CA;&#x8BE5;&#x5982;&#x4F55;&#x9488;&#x5BF9;&#x4E0D;&#x540C;&#x7684;&#x60C5;&#x51B5;&#x8FD4;&#x56DE;&#x4E0D;&#x540C;&#x7684;HTTP &#x72B6;&#x6001;&#x7801;&#xFF1F; API &#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#x683C;&#x5F0F;&#xFF0C;&#x4E0D;&#x5E94;&#x8BE5;&#x662F;&#x7EAF;&#x6587;&#x672C;&#xFF0C;&#x800C;&#x5E94;&#x8BE5;&#x662F;&#x4E00;&#x4E2A; JSON &#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x624D;&#x80FD;&#x8FD4;&#x56DE;&#x6807;&#x51C6;&#x7684;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x56DE;&#x5E94;&#x7684; HTTP &#x5934;&#x7684;Content-Type&#x5C5E;&#x6027;&#x8981;&#x8BBE;&#x4E3A;application/json&#x3002; 2.1 MIME &#x7C7B;&#x578B;JSON API&#x6570;&#x636E;&#x683C;&#x5F0F;&#x5DF2;&#x7ECF;&#x88AB;IANA&#x673A;&#x6784;&#x63A5;&#x53D7;&#x4E86;&#x6CE8;&#x518C;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x987B;&#x4F7F;&#x7528;application/vnd.api+json&#x7C7B;&#x578B;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x660E;&#x786E;&#x544A;&#x8BC9;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x63A5;&#x53D7; JSON &#x683C;&#x5F0F;&#xFF0C;&#x5373;&#x8BF7;&#x6C42;&#x7684; HTTP &#x5934;&#x7684;ACCEPT&#x5C5E;&#x6027;&#x4E5F;&#x8981;&#x8BBE;&#x6210;application/json&#x3002; 12GET /orders/2 HTTP/1.1 Accept: application/json 2.2 JSON&#x6587;&#x6863;&#x7ED3;&#x6784;&#x5728;&#x9876;&#x7EA7;&#x8282;&#x70B9;&#x4F7F;&#x7528;data&#x3001;errors&#x3001;meta&#xFF0C;&#x6765;&#x63CF;&#x8FF0;&#x6570;&#x636E;&#x3001;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3001;&#x5143;&#x4FE1;&#x606F;&#x3002; &#x6CE8;&#x610F;&#xFF1A;data&#x548C;errors&#x5E94;&#x8BE5;&#x4E92;&#x65A5;&#xFF0C;&#x4E0D;&#x80FD;&#x518D;&#x4E00;&#x4E2A;&#x6587;&#x6863;&#x4E2D;&#x540C;&#x65F6;&#x5B58;&#x5728;&#xFF0C;meta&#x5728;&#x9879;&#x76EE;&#x5B9E;&#x9645;&#x4E0A;&#x7528;&#x7684;&#x5F88;&#x5C11;&#xFF0C;&#x53EA;&#x6709;&#x7279;&#x522B;&#x60C5;&#x51B5;&#x624D;&#x9700;&#x8981;&#x7528;&#x5230;&#xFF0C;&#x6BD4;&#x5982;&#x8FD4;&#x56DE;&#x670D;&#x52A1;&#x5668;&#x7684;&#x4E00;&#x4E9B;&#x4FE1;&#x606F;&#x3002; 2.3 data&#x5C5E;&#x6027;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;data&#x7684;&#x5BF9;&#x8C61;&#x683C;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x6709;&#x6548;&#x4FE1;&#x606F;&#x4E00;&#x822C;&#x90FD;&#x653E;&#x5728;attributes&#x4E2D;&#x3002; id&#x663E;&#x800C;&#x6613;&#x89C1;&#x4E3A;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;&#x6570;&#x5B57;&#x4E5F;&#x53EF;&#x4EE5;&#x4E3A;hash&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x53D6;&#x51B3;&#x4E8E;&#x540E;&#x7AEF;&#x5B9E;&#x73B0; type &#x63CF;&#x8FF0;&#x6570;&#x636E;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;&#x5E94;&#x4E3A;&#x6570;&#x636E;&#x6A21;&#x578B;&#x7684;&#x7C7B;&#x540D; attributes &#x4EE3;&#x8868;&#x8D44;&#x6E90;&#x7684;&#x5177;&#x4F53;&#x6570;&#x636E; relationships&#x3001;links&#x4E3A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF0C;&#x7528;&#x6765;&#x653E;&#x7F6E;&#x5173;&#x8054;&#x6570;&#x636E;&#x548C;&#x8D44;&#x6E90;&#x5730;&#x5740;&#x7B49;&#x6570;&#x636E; 2.4 errors&#x5C5E;&#x6027;&#x8FD9;&#x91CC;&#x7684;errors&#x548C;data&#x6709;&#x4E00;&#x70B9;&#x4E0D;&#x540C;&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x8FD4;&#x56DE;&#x503C;&#x4E2D;errors&#x4F5C;&#x4E3A;&#x5217;&#x8868;&#x5B58;&#x5728;&#xFF0C;&#x56E0;&#x4E3A;&#x9488;&#x5BF9;&#x6BCF;&#x4E2A;&#x8D44;&#x6E90;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x591A;&#x4E2A;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002;&#x6700;&#x5178;&#x578B;&#x7684;&#x4F8B;&#x5B50;&#x4E3A;&#xFF0C;&#x6211;&#x4EEC;&#x8BF7;&#x6C42;&#x7684;&#x5BF9;&#x8C61;&#x4E2D;&#x67D0;&#x4E9B;&#x5B57;&#x6BB5;&#x4E0D;&#x7B26;&#x5408;&#x9A8C;&#x8BC1;&#x8981;&#x6C42;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x9A8C;&#x8BC1;&#x4FE1;&#x606F;&#xFF0C;&#x4F46;&#x662F;HTTP&#x72B6;&#x6001;&#x7801;&#x4F1A;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x7684;401&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5177;&#x4F53;&#x7684;&#x9A8C;&#x8BC1;&#x4FE1;&#x606F;&#x5728;errors&#x7ED9;&#x51FA;&#x6765;&#x3002; &#x5728;title&#x5B57;&#x6BB5;&#x4E2D;&#x7ED9;&#x51FA;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5728;&#x672C;&#x5730;&#x6216;&#x8005;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x60F3;&#x6253;&#x51FA;&#x66F4;&#x591A;&#x7684;&#x8C03;&#x8BD5;&#x5806;&#x6808;&#x4FE1;&#x606F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x4E00;&#x4E2A;detail&#x5B57;&#x6BB5;&#x8BA9;&#x8C03;&#x8BD5;&#x66F4;&#x52A0;&#x65B9;&#x4FBF;&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E00;&#x70B9;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x5728;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x5C4F;&#x853D;&#x90E8;&#x5206;&#x654F;&#x611F;&#x4FE1;&#x606F;&#xFF0C;detail&#x5B57;&#x6BB5;&#x6700;&#x597D;&#x5728;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x4E0D;&#x53EF;&#x89C1;&#x3002; 3 &#x5E38;&#x7528;&#x7684;&#x8FD4;&#x56DE;&#x7801; &#x4E0D;&#x8981;&#x53D1;&#x751F;&#x4E86;&#x9519;&#x8BEF;&#x4F46;&#x7ED9;2xx&#x54CD;&#x5E94;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x53EF;&#x80FD;&#x4F1A;&#x7F13;&#x5B58;&#x6210;&#x529F;&#x7684;http&#x8BF7;&#x6C42;&#xFF1B; &#x6B63;&#x786E;&#x8BBE;&#x7F6E;http&#x72B6;&#x6001;&#x7801;&#xFF0C;&#x4E0D;&#x8981;&#x81EA;&#x5B9A;&#x4E49;&#xFF1B; Response body &#x63D0;&#x4F9B; 1) &#x9519;&#x8BEF;&#x7684;&#x4EE3;&#x7801;&#xFF08;&#x65E5;&#x5FD7;/&#x95EE;&#x9898;&#x8FFD;&#x67E5;&#xFF09;&#xFF1B;2) &#x9519;&#x8BEF;&#x7684;&#x63CF;&#x8FF0;&#x6587;&#x672C;&#xFF08;&#x5C55;&#x793A;&#x7ED9;&#x7528;&#x6237;&#xFF09;&#x3002; &#x5E38;&#x7528;&#x7684;http&#x72B6;&#x6001;&#x7801;&#x53CA;&#x4F7F;&#x7528;&#x573A;&#x666F;&#xFF1A; &#x72B6;&#x6001;&#x7801; &#x4F7F;&#x7528;&#x573A;&#x666F; 200 ok &#x8BF7;&#x6C42;&#x6210;&#x529F; 201 created POST&#x521B;&#x5EFA;&#x8D44;&#x6E90;&#x8FD4;&#x56DE;&#x6210;&#x529F;&#x7684;&#x6807;&#x5FD7; 400 bad request &#x5E38;&#x7528;&#x5728;&#x53C2;&#x6570;&#x6821;&#x9A8C; 401 unauthorized &#x672A;&#x7ECF;&#x9A8C;&#x8BC1;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x5E38;&#x89C1;&#x4E8E;&#x672A;&#x767B;&#x5F55;&#x3002;&#x5982;&#x679C;&#x7ECF;&#x8FC7;&#x9A8C;&#x8BC1;&#x540E;&#x4F9D;&#x7136;&#x6CA1;&#x6743;&#x9650;&#xFF0C;&#x5E94;&#x8BE5; 403&#xFF08;&#x5373; authentication &#x548C; authorization &#x7684;&#x533A;&#x522B;&#xFF09;&#x3002; 403 forbidden &#x65E0;&#x6743;&#x9650; 404 not found &#x8D44;&#x6E90;&#x4E0D;&#x5B58;&#x5728; 500 internal server error &#x975E;&#x4E1A;&#x52A1;&#x7C7B;&#x5F02;&#x5E38; 503 service unavaliable &#x7531;&#x5BB9;&#x5668;&#x629B;&#x51FA;&#xFF0C;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#x4E0D;&#x8981;&#x629B;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38; &#x53C2;&#x8003;&#x6587;&#x732E;&#xFF1A; &#x7EC6;&#x8BF4;API - &#x91CD;&#x65B0;&#x8BA4;&#x8BC6;RESTful RESTful API &#x6700;&#x4F73;&#x5B9E;&#x8DF5; &#x7406;&#x89E3;RESTful&#x67B6;&#x6784; Restful API &#x7684;&#x8BBE;&#x8BA1;&#x89C4;&#x8303; &#x5FAE;&#x8F6F;API&#x6307;&#x5357; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>软件架构</category>
      </categories>
      <tags>
        <tag>Restful</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[领域驱动设计中国峰会2018]]></title>
    <url>%2F2019%2F01%2F22%2F020%2F</url>
    <content type="text"><![CDATA[&#x4F7F;&#x7528;&#x89C6;&#x9891;&#x64AD;&#x653E;&#x5668;&#xFF1A;Pot Player &#x89C6;&#x9891;&#x64AD;&#x653E;&#x5668;&#xFF0C;Ctrl+U&#x6253;&#x5F00;&#x94FE;&#x63A5;&#x5373;&#x53EF;&#x64AD;&#x653E;&#x3002; TRACK1 &#x9886;&#x57DF;&#x9A71;&#x52A8;&#x8BBE;&#x8BA1;&#x4E0E;&#x4F01;&#x4E1A;&#x5E94;&#x7528;&#x67B6;&#x6784;1. &#x76D2;&#x9A6C;&#x6838;&#x5FC3;&#x7CFB;&#x7EDF;&#x67B6;&#x6784;&#x6F14;&#x8FDB;&#x5F20;&#x7FA4;&#x8F89; &#x963F;&#x91CC;&#x76D2;&#x9A6C;&#x67B6;&#x6784;&#x603B;&#x76D1; &#x9886;&#x57DF;&#x9A71;&#x52A8;&#x8BBE;&#x8BA1;&#x56FD;&#x5185;&#x6700;&#x65E9;&#x7684;&#x4E00;&#x6279;&#x5B9E;&#x8DF5;&#x8005; 15 + &#x5E74;&#x6280;&#x672F;&#x53CA;&#x7BA1;&#x7406;&#x5B9E;&#x6218;&#x7ECF;&#x9A8C;&#xFF0C;&#x524D;&#x963F;&#x91CC;&#x57FA;&#x7840;&#x673A;&#x6784;&#x4E8B;&#x4E1A;&#x90E8;&#x5DE5;&#x7A0B;&#x6548;&#x7387;&#x603B;&#x76D1;&#xFF0C;&#x957F;&#x671F;&#x4E00;&#x7EBF;&#x6307;&#x5BFC;&#x5927;&#x578B;&#x590D;&#x6742;&#x7CFB;&#x7EDF;&#x7684;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#xFF0C;DevOps&#x3001;&#x5FAE;&#x670D;&#x52A1;&#x67B6;&#x6784;&#x53CA;&#x9886;&#x57DF;&#x9A71;&#x52A8;&#x8BBE;&#x8BA1;&#x56FD;&#x5185;&#x6700;&#x65E9;&#x7684;&#x4E00;&#x6279;&#x5B9E;&#x8DF5;&#x8005;&#x3002;&#x5D07;&#x5C1A;&#x5B9E;&#x8DF5;&#x51FA;&#x771F;&#x77E5;&#xFF0C;&#x4E00;&#x76F4;&#x594B;&#x6597;&#x5728;&#x6280;&#x672F;&#x4E00;&#x7EBF;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp2fzke2tde4dp/mda-imcp2fzke2tde4dp.m3u8 2. &#x5728;&#x4E00;&#x4E2A;&#x5B9E;&#x9645;&#x590D;&#x6742;&#x4E1A;&#x52A1;&#x4E2D;&#x843D;&#x5730;DDD&#x65B9;&#x6CD5;&#x4E0E;&#x76F8;&#x5173;&#x67B6;&#x6784;&#x66F9;&#x5251; &#x56DB;&#x5DDD;&#x597D;&#x533B;&#x751F;&#x836F;&#x4E1A;&#x96C6;&#x56E2;CTO http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp4c2uwe61yxzg/mda-imcp4c2uwe61yxzg.m3u8 3. &#x7528;&#x72B6;&#x6001;&#x673A;&#x5C01;&#x88C5;&#x9886;&#x57DF;&#x903B;&#x8F91;&#x6F58;&#x52A0;&#x5B87; UMLChina &#x9996;&#x5E2D;&#x4E13;&#x5BB6;&amp;&#x521B;&#x59CB;&#x4EBA; UMLChina&#x521B;&#x59CB;&#x4EBA;&#xFF0C;&#x6F5C;&#x5FC3;&#x7814;&#x7A76;&#x9700;&#x6C42;&#x548C;&#x8BBE;&#x8BA1;&#x6280;&#x80FD;&#x3002;2002&#x5E74;&#x5F00;&#x59CB;&#x5BF9;&#x5916;&#x63D0;&#x4F9B;UML&#x9700;&#x6C42;&#x548C;&#x8BBE;&#x8BA1;&#x7684;&#x6280;&#x672F;&#x6307;&#x5BFC;&#x548C;&#x8BAD;&#x7EC3;&#x670D;&#x52A1;&#x3002;&#x5230;&#x73B0;&#x5728;&#x4E3A;&#x6B62;&#xFF0C;&#x5DF2;&#x7ECF;&#x4E0A;&#x95E8;&#x4E3A;&#x8D85;&#x8FC7;260&#x5BB6;&#x7684;&#x7EC4;&#x7EC7;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#xFF0C;&#x8986;&#x76D6;&#x4E86;&#x56FD;&#x5185;&#x5404;&#x4E2A;&#x9886;&#x57DF;&#x7684;&#x9886;&#x8896;&#x4F01;&#x4E1A;&#xFF0C;&#x5305;&#x62EC;&#x901A;&#x4FE1;&#x3001;&#x4F01;&#x4E1A;&#x7BA1;&#x7406;&#x3001;&#x7535;&#x5B50;&#x5546;&#x52A1;&#x3001;&#x623F;&#x5730;&#x4EA7;&#x3001;&#x7F51;&#x7EDC;&#x6E38;&#x620F;&#x3001;&#x5730;&#x7406;&#x4FE1;&#x606F;&#x3001;&#x7269;&#x6D41;&#x3001;&#x6570;&#x7801;&#x8BBE;&#x5907;&#x3001;&#x533B;&#x7597;&#x8BBE;&#x5907;&#x3001;&#x5DE5;&#x4E1A;&#x63A7;&#x5236;&#x2026;..&#x7B49;&#x9886;&#x57DF;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp4whpze2prmmz/mda-imcp4whpze2prmmz.m3u8 4. &#x5F53;&#x6211;&#x4EEC;&#x5728;&#x8C08;&#x8BBA;&#x4E1A;&#x52A1;&#x67B6;&#x6784;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5230;&#x5E95;&#x5728;&#x8C08;&#x8BBA;&#x4EC0;&#x4E48;&#x4EA2;&#x6C5F;&#x59B9; ThoughtWorks&#x9996;&#x5E2D;&#x4E1A;&#x52A1;&#x5206;&#x6790;&#x5E08; &#x4E2D;&#x56FD;&#x533A;&#x4E1A;&#x52A1;&#x5206;&#x6790;&#x5B9E;&#x8DF5;&#x8D1F;&#x8D23;&#x4EBA; &#x5728;&#x654F;&#x6377;/&#x7CBE;&#x76CA;&#x4EA7;&#x54C1;&#x9700;&#x6C42;&#x5206;&#x6790;&#x3001;&#x5927;&#x4F01;&#x4E1A;&#x9700;&#x6C42;&#x7BA1;&#x7406;&#x3001;&#x884C;&#x4E1A;&#x7814;&#x7A76;&#x7B49;&#x65B9;&#x9762;&#xFF0C;&#x6709;&#x4E30;&#x5BCC;&#x7684;&#x5B9E;&#x6218;&#x548C;&#x6559;&#x7EC3;&#x7ECF;&#x9A8C;&#xFF1B;&#x5979;&#x4E5F;&#x662F;&#x4E1A;&#x52A1;&#x5206;&#x6790;&#x5E08;(IIBA)&#x3001;&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x7684;&#x6D3B;&#x8DC3;&#x53C2;&#x4E0E;&#x8005;&#xFF0C;&#x662F;DnA(Design and Analysis)&#x793E;&#x533A;&#x3001;ThoughtWorks&#x4E2D;&#x56FD;&#x884C;&#x4E1A;&#x7814;&#x7A76;&#x793E;&#x533A;&#x7684;&#x53D1;&#x8D77;&#x4EBA;&#xFF0C;&#x4E5F;&#x662F;ThoughtWorks&#x5546;&#x4E1A;&#x6D1E;&#x89C1;&#x7684;&#x4E3B;&#x7F16;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnuy9dsj93enst/mda-imcnuy9dsj93enst.m3u8 5. &#x53EF;&#x89C6;&#x5316;&#x7684;&#x9057;&#x7559;&#x7CFB;&#x7EDF;&#x5FAE;&#x670D;&#x52A1;&#x6539;&#x9020;&#x6BDB;&#x8D85; ThoughtWorks &#x5DE5;&#x7A0B;&#x5E08;&#x3001;&#x4E13;&#x6CE8;&#x9057;&#x7559;&#x7CFB;&#x7EDF;&#x6539;&#x9020;&#x3001;&#x5FAE;&#x670D;&#x52A1;&#x76F8;&#x5173;&#x6280;&#x672F; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnxyh50hxazpcg/mda-imcnxyh50hxazpcg.m3u8 TRACK2 &#x9886;&#x57DF;&#x9A71;&#x52A8;&#x7684;&#x4E1A;&#x52A1;&#x4E2D;&#x53F0;1. &#x5F53;&#x6211;&#x4EEC;&#x8C08;&#x4E2D;&#x53F0;&#x65F6;&#x6211;&#x4EEC;&#x5728;&#x8C08;&#x4E9B;&#x4EC0;&#x4E48;&#xFF1F;&#x738B;&#x5065; ThoughtWorks&#x9996;&#x5E2D;&#x54A8;&#x8BE2;&#x5E08; &#x4E00;&#x76F4;&#x4ECE;&#x4E8B;&#x56FD;&#x5185;&#x5916;&#x5927;&#x578B;&#x4F01;&#x4E1A;&#x7EA7;&#x8F6F;&#x4EF6;&#x7684;&#x8BBE;&#x8BA1;&#x4E0E;&#x5F00;&#x53D1;&#xFF0C;&#x65F6;&#x523B;&#x4FDD;&#x6301;&#x7740;&#x5BF9;&#x6280;&#x672F;&#x7684;&#x70ED;&#x7231;&#xFF0C;&#x4EAB;&#x53D7;&#x7740;&#x7F16;&#x7801;&#x7684;&#x5FEB;&#x4E50;&#xFF0C;&#x70ED;&#x8877;&#x4E8E;&#x6280;&#x672F;&#x5206;&#x4EAB;&#x3002;&#x76EE;&#x524D;&#x4E13;&#x6CE8;&#x4E8E;&#x4E3A;&#x670D;&#x52A1;&#x67B6;&#x6784;&#xFF0C;&#x7CFB;&#x7EDF;&#x8D28;&#x91CF;&#x4FDD;&#x969C;&#x548C;&#x6301;&#x7EED;&#x4EA4;&#x4ED8;&#x76F8;&#x5173;&#x9886;&#x57DF;&#x7684;&#x5B66;&#x4E60;&#x4E0E;&#x5206;&#x4EAB;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnt08v3ga8hipv/mda-imcnt08v3ga8hipv.m3u8 2. &#x6F14;&#x8FDB;&#x5F0F;&#x67B6;&#x6784;&#x7684;&#x5E73;&#x53F0;&#x5316;&#x843D;&#x5730;&#x59DA;&#x5B89;&#x5CF0; ThoughtWorks&#x8D44;&#x6DF1;&#x7CBE;&#x76CA;&#x654F;&#x6377;&#x987E;&#x95EE; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnwi8h17gxbzuv/mda-imcnwi8h17gxbzuv.m3u8 TRACK3 &#x9886;&#x57DF;&#x7EDF;&#x4E00;&#x8BED;&#x8A00;&#x7684;&#x5B9E;&#x8DF5;&#x6A21;&#x5F0F;1. &#x9886;&#x57DF;&#x5EFA;&#x6A21;&#x7684;&#x6613;&#x4E0E;&#x96BE;&#x738B;&#x9E4F; &#x534E;&#x4E3A;&#x516C;&#x53F8; LS&#x4E91;&#x8BA1;&#x7B97;&#x57F9;&#x8BAD;&#x65B9;&#x6848;&#x67B6;&#x6784;&#x5E08; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imqk8qnrx6t2hifa/mda-imqk8qnrx6t2hifa.m3u8 2. &#x5982;&#x4F55;&#x8BA9;DDD&#x843D;&#x5730;&#x548C;&#x575A; ThoughtWorks&#x9AD8;&#x7EA7;&#x54A8;&#x8BE2;&#x5E08; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp0ppb8j04i05k/mda-imcp0ppb8j04i05k.m3u8 3. &#x9886;&#x57DF;&#x6A21;&#x578B;&#x4E0E;&#x5F62;&#x5F0F;&#x5316;&#x9A8C;&#x8BC1;&#x6280;&#x672F;&#x674E;&#x51EF;&#x822A; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnwym2ufz5cex3/mda-imcnwym2ufz5cex3.m3u8 4. &#x7CFB;&#x7EDF;&#x5206;&#x5C42;&#x6A21;&#x578B;&#x9002;&#x914D;&#x5B9E;&#x8DF5; &#x5434;&#x96EA;&#x5CF0; ThoughtWorks&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x5E08; &#x4E3B;&#x8981;&#x8D1F;&#x8D23;&#x654F;&#x6377;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x4E0E;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x3002;&#x4ED6;&#x5177;&#x6709;10+&#x5E74;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x7ECF;&#x9A8C;&#xFF0C;&#x4ECE;&#x4E8B;&#x4E8E;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x3001;&#x7535;&#x5B50;&#x5546;&#x52A1;&#x3001;&#x533B;&#x7597;&#x3001;&#x7535;&#x4FE1;&#x884C;&#x4E1A;&#x7684;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x3001;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x53CA;&#x654F;&#x6377;&#x5B9E;&#x8DF5;&#x3002;&#x64C5;&#x957F;Java/Scala&#x6280;&#x672F;&#xFF0C;DDD&#x3001;&#x5FAE;&#x670D;&#x52A1;&#x67B6;&#x6784;&#x3001;Reactive&#x5206;&#x5E03;&#x5F0F;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x3001;DevOps&#x4EE5;&#x53CA;&#x7CBE;&#x76CA;&#x5B9E;&#x8DF5;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp34g5xy8tz6k8/mda-imcp34g5xy8tz6k8.m3u8 TRACK4 &#x9886;&#x57DF;&#x7EDF;&#x8BBE;&#x8BA1;&#x4E0E;&#x67B6;&#x6784;&#x5E08;1. &#x57FA;&#x4E8E;DDD&#x7684;&#x9886;&#x57DF;&#x5EFA;&#x6A21;&#x4E2D;&#x7684;&#x6A21;&#x7248;&#x548C;&#x5DE5;&#x5177;&#x5B9E;&#x8DF5;&#x738B;&#x6D77;&#x6587; &#x7528;&#x53CB;&#x7F51;&#x7EDC;&#x79D1;&#x6280;&#x80A1;&#x4EFD;&#x6709;&#x9650;&#x516C;&#x53F8;&#x9AD8;&#x7EA7;&#x6280;&#x672F;&#x67B6;&#x6784;&#x5E08; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnsmrb9xutkzfw/mda-imcnsmrb9xutkzfw.m3u8 2. &#x590D;&#x6742;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x4E0B;&#x7684;&#x4E1A;&#x52A1;&#x67B6;&#x6784;&#x68B3;&#x7406;&#x5230;&#x6280;&#x672F;&#x67B6;&#x6784;&#x8BBE;&#x8BA1; - UX&#x4E0E;&#x67B6;&#x6784;&#x5E08;&#x7684;&#x5B8C;&#x7F8E;&#x7ED3;&#x5BF9;&#x5B63;&#x709C; ThoughtWorks&#x9AD8;&#x7EA7;&#x54A8;&#x8BE2;&#x5E08; &#x6731;&#x50B2; &#x6234;&#x59C6;&#x52D2;&#x5927;&#x4E2D;&#x534E;&#x533A;&#x9AD8;&#x7EA7;&#x67B6;&#x6784;&#x5E08; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnugm94qm2h7qu/mda-imcnugm94qm2h7qu.m3u8 3. DDD&#x5B9E;&#x8DF5;&#x4E2D;&#x7684;&#x90A3;&#x4E9B;&#x5751;&#x738B;&#x7ACB; &#x53A6;&#x95E8;&#x4E91;&#x96FE;&#x79D1;&#x6280;&#x6709;&#x9650;&#x516C;&#x53F8;&#x521B;&#x59CB;&#x4EBA;/&#x603B;&#x7ECF;&#x7406; &#x524D;&#x963F;&#x91CC;&#x8D44;&#x6DF1;&#x5DE5;&#x7A0B;&#x5E08;&#xFF0C;&#x56FD;&#x5185;&#x6700;&#x65E9;&#x4E00;&#x6279;&#x5B9E;&#x8DF5;&#x548C;&#x63A8;&#x5E7F;DDD&#x7684;&#x8DF5;&#x884C;&#x8005;&#xFF0C;&#x5EFA;&#x7ACB;&#x4E86;&#x4E00;&#x5957;&#x9002;&#x7528;&#x4E8E;DDD&#x7684;&#x654F;&#x6377;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#xFF0C;&#x957F;&#x671F;&#x805A;&#x7126;&#x4E8E;&#x9886;&#x57DF;&#x5206;&#x6790;&#x3001;&#x5F69;&#x8272;UML&#x5EFA;&#x6A21;&#xFF0C;&#x64C5;&#x957F;&#x590D;&#x6742;&#x4E1A;&#x52A1;&#x7684;&#x6A21;&#x578B;&#x63D0;&#x70BC;&#x4E0E;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#xFF0C;&#x4E3B;&#x5F20;&#x5728;&#x805A;&#x5408;&#x7684;&#x5B9E;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x5FAE;&#x5355;&#x4F53;&#x65F6;&#x5C31;&#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x91C7;&#x7528;&#x5FAE;&#x670D;&#x52A1;&#xFF0C;&#x73B0;&#x4EFB;&#x53A6;&#x95E8;&#x4E91;&#x96FE;&#x79D1;&#x6280;&#x6709;&#x9650;&#x516C;&#x53F8;&#x521B;&#x59CB;&#x4EBA;/&#x603B;&#x7ECF;&#x7406;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnzedq0t27x236/mda-imcnzedq0t27x236.m3u8 4. &#x91D1;&#x878D;&#x652F;&#x4ED8;&#x7CFB;&#x7EDF;&#x7684;&#x6539;&#x9020;&#x4E4B;&#x8DEF;&#x91D1;&#x660E; Video++&#x6781;&#x94FE;&#x79D1;&#x6280;&#x96C6;&#x56E2;&#x521B;&#x59CB;&#x4EBA;/CEO http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp1dy2wa8irznt/mda-imcp1dy2wa8irznt.m3u8 TRACK5 &#x9886;&#x57DF;&#x9A71;&#x52A8;&#x8BBE;&#x8BA1;&#x4E0E;&#x6F14;&#x8FDB;&#x5F0F;&#x67B6;&#x6784;1. DDD&#x5728;&#x65C5;&#x6E38;&#x7535;&#x5546;&#x67B6;&#x6784;&#x6F14;&#x8FDB;&#x4E2D;&#x7684;&#x5B9E;&#x8DF5;&#x5F90;&#x6CFC; &#x7F8E;&#x56E2;&#x9152;&#x65C5;&#x7814;&#x53D1;&#x4E2D;&#x5FC3;&#x9AD8;&#x7EA7;&#x6280;&#x672F;&#x4E13;&#x5BB6; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnvwik58npernt/mda-imcnvwik58npernt.m3u8 2. &#x9886;&#x57DF;&#x9A71;&#x52A8;&#x67B6;&#x6784;&#x900F;&#x6790;&#x4E0E;&#x67B6;&#x6784;&#x89E3;&#x8026;&#x5F20;&#x9038; &#x6C11;&#x822A;&#x6210;&#x90FD;&#x4FE1;&#x606F;&#x6280;&#x672F;&#x603B;&#x76D1; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnyaici9v4mz3j/mda-imcnyaici9v4mz3j.m3u8 3. &#x5316;&#x7E41;&#x4E3A;&#x7B80;&#x2013;DDD&#x9A71;&#x52A8;&#x590D;&#x6742;&#x4E1A;&#x52A1;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x7684;&#x6F14;&#x8FDB;&#x767D;&#x5F66;&#x78CA; &#x5E7F;&#x8054;&#x8FBE;&#x79D1;&#x6280;&#x80A1;&#x4EFD;&#x6709;&#x9650;&#x516C;&#x53F8;&#x6280;&#x672F;&#x67B6;&#x6784;&#x90E8;&#x7ECF;&#x7406; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp0e9mfgjp62x7/mda-imcp0e9mfgjp62x7.m3u8 4. &#x7AEF;&#x53E3;&#x548C;&#x9002;&#x914D;&#x5668;&#x67B6;&#x6784;&#xFF1A;DDD&#x597D;&#x5E2E;&#x624B;&#x5468;&#x5B87;&#x521A; ThoughtWorks&#x9AD8;&#x7EA7;&#x54A8;&#x8BE2;&#x5E08; ThoughtWorks&#x9AD8;&#x7EA7;&#x54A8;&#x8BE2;&#x5E08;&#xFF0C;DDD&#x5B9E;&#x8DF5;&#x5BB6; 10&#x5E74;&#x4F01;&#x4E1A;&#x7EA7;&#x5E94;&#x7528;&#x5F00;&#x53D1;&#x7ECF;&#x9A8C;&#xFF0C;&#x4E3B;&#x8981;&#x8D1F;&#x8D23;&#x8F6F;&#x4EF6;&#x4EA4;&#x4ED8;&#x548C;&#x6301;&#x7EED;&#x4EA4;&#x4ED8;&#x54A8;&#x8BE2;&#x3002;&#x4ECE;09&#x5E74;&#x5F00;&#x59CB;&#x5173;&#x6CE8;&#x9886;&#x57DF;&#x9A71;&#x52A8;&#x8BBE;&#x8BA1;&#xFF0C;&#x662F;Stack Overflow DDD&#x6807;&#x7B7E; All Time Top Answerer &#x4E4B;&#x4E00;&#xFF0C;&#x66FE;&#x5728;&#x591A;&#x4E2A;&#x884C;&#x4E1A;&#x9886;&#x57DF;&#x4E2D;&#x5B9E;&#x6218;&#x8FC7;DDD&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnxkq5rnuu777y/mda-imcnxkq5rnuu777y.m3u8 5. DDD&#x4FC3;&#x8FDB;&#x4F20;&#x7EDF;&#x67B6;&#x6784;&#x5FAE;&#x670D;&#x52A1;&#x8F6C;&#x578B;&#x8303;&#x94A2; &#x822A;&#x5929;&#x4FE1;&#x606F;&#x91D1;&#x7A0E;&#x672C;&#x90E8;&#x9996;&#x5E2D;&#x67B6;&#x6784;&#x5E08; &#x822A;&#x5929;&#x4FE1;&#x606F;&#x80A1;&#x4EFD;&#x6709;&#x9650;&#x516C;&#x53F8;&#x9996;&#x5E2D;&#x67B6;&#x6784;&#x5E08;&#xFF0C;&#x300A;&#x5927;&#x8BDD;&#x91CD;&#x6784;&#x300B;&#x4F5C;&#x8005;&#xFF0C;&#x54C8;&#x5DE5;&#x5927;&#x8F6F;&#x4EF6;&#x5DE5;&#x7A0B;&#x7855;&#x58EB;&#xFF0C;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x53CA;&#x91CD;&#x6784;&#x7684;&#x5BA2;&#x5EA7;&#x8BB2;&#x5E08;&#x3002;&#x4ECE;&#x9700;&#x6C42;&#x5206;&#x6790;&#x3001;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x5230;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x3001;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x90FD;&#x6709;&#x4E30;&#x5BCC;&#x7684;&#x4ECE;&#x4E1A;&#x7ECF;&#x9A8C;&#x3002;&#x5927;&#x578B;&#x9057;&#x7559;&#x7CFB;&#x7EDF;&#x6539;&#x9020;&#x4E13;&#x4E1A;&#x6237;&#xFF0C;&#x957F;&#x671F;&#x5173;&#x6CE8;&#x5927;&#x578B;&#x4E1A;&#x52A1;&#x7CFB;&#x7EDF;&#x7684;&#x54C1;&#x8D28;&#x4FDD;&#x8BC1;&#x3001;&#x9632;&#x6B62;&#x8150;&#x5316;&#x4EE5;&#x53CA;&#x6280;&#x672F;&#x6539;&#x9020;&#x7B49;&#x56F0;&#x6270;&#x8F6F;&#x4EF6;&#x4F01;&#x4E1A;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8FDB;&#x800C;&#x63D0;&#x51FA;&#x4E86;&#x8BB8;&#x591A;&#x5B9E;&#x7528;&#x800C;&#x6709;&#x6548;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5728;&#x9057;&#x7559;&#x7CFB;&#x7EDF;&#x4F18;&#x5316;&#x4E0E;&#x6539;&#x9020;&#x65B9;&#x9762;&#x6709;&#x4E30;&#x5BCC;&#x7684;&#x7ECF;&#x9A8C;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnzzecrtsjtgar/mda-imcnzzecrtsjtgar.m3u8 TRACK6 &#x9886;&#x57DF;&#x9A71;&#x52A8;&#x4E0E;&#x53CD;&#x5E94;&#x5F0F;&#x67B6;&#x6784;1. &#x57FA;&#x4E8E; FP &#x7684; DDD &#x5B9E;&#x8DF5;&#x5F20;&#x6653;&#x9F99; &#x4E2D;&#x5174;&#x901A;&#x8BAF;&#x865A;&#x62DF;&#x5316;&#x67B6;&#x6784;&#x5E08; 2008&#x5E74;&#x6BD5;&#x4E1A;&#x4E8E;&#x54C8;&#x5C14;&#x6EE8;&#x5DE5;&#x7A0B;&#x5927;&#x5B66;&#x8BA1;&#x7B97;&#x673A;&#x5E94;&#x7528;&#x4E13;&#x4E1A;&#xFF0C;&#x7231;&#x597D;&#x7F16;&#x7A0B;&#xFF0C;&#x4E1A;&#x4F59;&#x65F6;&#x95F4;&#x559C;&#x6B22;&#x5199;&#x4E00;&#x4E9B;&#x6280;&#x672F;&#x7C7B;&#x6587;&#x7AE0;&#x3002;2008&#x5E74;&#x5C31;&#x804C;&#x4E8E;ZTE&#xFF0C;&#x53C2;&#x4E0E;&#x8FC7;&#x5927;&#x578B;&#x901A;&#x4FE1;&#x8F6F;&#x4EF6;&#x7684;&#x5F00;&#x53D1;&#xFF0C;&#x64C5;&#x957F;TDD&#x548C;&#x91CD;&#x6784;&#x7B49;XP&#x5B9E;&#x8DF5;&#x3002;&#x8FD1;&#x5E74;&#x6765;&#x53C2;&#x4E0E;&#x865A;&#x62DF;&#x5316;&#x4EA7;&#x54C1;&#x7684;&#x7814;&#x53D1;&#xFF0C;&#x540C;&#x65F6;&#x8D1F;&#x8D23;&#x63D0;&#x5347;&#x5168;&#x5458;&#x7684;DDD&#x80FD;&#x529B;&#xFF0C;&#x4ECE;DDD&#x5BFC;&#x5165;&#x5230;DDD&#x8BAD;&#x7EC3;&#x8425;&#xFF0C;&#x4E0D;&#x65AD;&#x7684;&#x7ED9;&#x5B66;&#x5458;&#x4F20;&#x9012;DDD&#x7684;&#x601D;&#x60F3;&#x548C;&#x5B9E;&#x8DF5;&#x6280;&#x80FD;&#xFF0C;&#x76EE;&#x524D;DDD&#x5DF2;&#x5728;&#x591A;&#x4E2A;&#x56E2;&#x961F;&#x6709;&#x6548;&#x843D;&#x5730;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x5927;&#x5BB6;&#x7684;&#x4E00;&#x81F4;&#x8BA4;&#x53EF;&#x3002;&#x9664;&#x8FC7;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x4E2A;&#x4EBA;&#x5728;&#x7EC4;&#x7EC7;&#x4E2D;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x5176;&#x5B83;&#x6807;&#x7B7E;&#xFF0C;&#x6BD4;&#x5982;&#x67B6;&#x6784;&#x5E08;&#x3001;&#x54A8;&#x8BE2;&#x5E08;&#x548C;&#x6280;&#x672F;&#x6559;&#x7EC3;&#x7B49;&#x3002;&#x4E2A;&#x4EBA;&#x7684;&#x7B80;&#x4E66;&#x5730;&#x5740;&#xFF1A;http://www.jianshu.com/u/1381dc29fed9&#x3002; &#x719F;&#x7EC3;&#x638C;&#x63E1;C++/Golang/Python/Java&#x7B49;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x8FD9;&#x4E00;&#x5E74;&#x4E3B;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x662F;Golang&#xFF0C;&#x540C;&#x65F6;Golang&#x4E5F;&#x6210;&#x4E86;DDD&#x843D;&#x5730;&#x7684;&#x4E3B;&#x8981;&#x8BED;&#x8A00;&#x3002;&#x8FD9;&#x4E00;&#x5E74;&#x5728;&#x7B80;&#x4E66;&#x4E0A;&#x4E5F;&#x5199;&#x4E86;&#x591A;&#x7BC7;&#x4E0E;DDD&#x76F8;&#x5173;&#x7684;&#x6280;&#x672F;&#x6587;&#x7AE0;&#xFF0C;&#x6BD4;&#x5982;&#x300A;&#x8F6F;&#x4EF6;&#x8BBE;&#x8BA1;&#x7684;&#x6F14;&#x53D8;&#x8FC7;&#x7A0B;&#x300B;&#xFF0C;&#x300A;Golang&#x4E8B;&#x52A1;&#x6A21;&#x578B;&#x300B;&#xFF0C;&#x300A;DDD&#x5206;&#x5C42;&#x67B6;&#x6784;&#x7684;&#x4E09;&#x79CD;&#x6A21;&#x5F0F;&#x300B;&#xFF0C;&#x300A;Implement Domain Object in Golang&#x300B;&#xFF0C;&#x300A;FizzBuzzWhizz in Python from OO and FP&#x300B;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnvki9wv6qcezu/mda-imcnvki9wv6qcezu.m3u8 2. &#x6DD8;&#x5B9D;&#x5E94;&#x7528;&#x67B6;&#x6784;&#x5347;&#x7EA7;&#x2014;&#x2014;&#x53CD;&#x5E94;&#x5F0F;&#x67B6;&#x6784;&#x7684;&#x63A2;&#x7D22;&#x4E0E;&#x5B9E;&#x8DF5;&#x8BB8;&#x6CFD;&#x5F6C; &#x963F;&#x91CC;&#x5DF4;&#x5DF4;&#x6DD8;&#x5B9D;&#x6280;&#x672F;&#x4E13;&#x5BB6; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnyvvf7666vxh7/mda-imcnyvvf7666vxh7.m3u8 2. Every Entity as A Microservice&#x9676;&#x6587; &#x6EF4;&#x6EF4;&#x51FA;&#x884C;&#x5E73;&#x53F0;&#x6280;&#x672F;&#x90E8;&#x9996;&#x5E2D;&#x67B6;&#x6784;&#x5E08; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnu2patj7nwe7z/mda-imcnu2patj7nwe7z.m3u8 3. &#x4ECE;&#x5FAE;&#x670D;&#x52A1;&#x5230; FaaS&#x8BB8;&#x6653;&#x658C; &#x963F;&#x91CC;&#x5DF4;&#x5DF4;-AliExpress&#x9AD8;&#x7EA7;&#x6280;&#x672F;&#x4E13;&#x5BB6; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp3dqu9gwxz3uk/mda-imcp3dqu9gwxz3uk.m3u8 4. &#x7269;&#x8054;&#x7F51;&#x5E73;&#x53F0;&#x7684;&#x53CD;&#x5E94;&#x5F0F;&#x8BBE;&#x8BA1;&#x5510;&#x6210; ThoughtWorks IoT&#x9996;&#x5E2D;&#x54A8;&#x8BE2;&#x5E08; ThoughtWorks&#x4E2D;&#x56FD;&#x533A;loT&#x56E2;&#x961F;&#x7684;&#x6280;&#x672F;&#x4E13;&#x5BB6;&#xFF0C;&#x66FE;&#x5148;&#x540E;&#x4E3A;&#x56FD;&#x5185;&#x5916;&#x822A;&#x7A7A;&#x4EA7;&#x4E1A;&#x3002;&#x6C7D;&#x8F66;&#x5236;&#x9020;&#x3001;&#x7535;&#x5668;&#x5236;&#x9020;&#x7B49;&#x9886;&#x57DF;&#x7684;&#x9886;&#x519B;&#x4F01;&#x4E1A;&#x63D0;&#x4F9B;&#x8F6F;&#x786C;&#x4EF6;&#x67B6;&#x6784;&#x54A8;&#x8BE2;&#x3001;&#x5927;&#x578B;&#x9057;&#x7559;&#x7CFB;&#x7EDF;&#x91CD;&#x6784;&#x89C4;&#x5212;&#x3001;&#x5FAE;&#x670D;&#x52A1;&#x67B6;&#x6784;&#x8F6C;&#x578B;&#x89C4;&#x5212;&#x3001;&#x8F6F;&#x786C;&#x4EF6;&#x7CFB;&#x7EDF;&#x4EA4;&#x4ED8;&#x7B49;&#x670D;&#x52A1;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp106wczcqn9i4/mda-imcp106wczcqn9i4.m3u8 OTHER1. &#x5FAE;&#x670D;&#x52A1;&#x7684;&#x5BB9;&#x5668;&#x5316;&#x5B9E;&#x8DF5;&#x90A2;&#x6D77;&#x6D9B; &#x7075;&#x96C0;&#x4E91; &#x5FAE;&#x670D;&#x52A1;&#x9996;&#x5E2D;&#x4E13;&#x5BB6; &#x8BA1;&#x7B97;&#x673A;&#x5E94;&#x7528;&#x7855;&#x58EB;(&#x82F1;&#x56FD;)&#xFF0C;&#x7075;&#x96C0;&#x4E91;&#x5FAE;&#x670D;&#x52A1;&#x9996;&#x5E2D;&#x4E13;&#x5BB6;&#xFF0C;&#x8FD1;20&#x5E74;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x7ECF;&#x9A8C;&#xFF0C;8&#x5E74;&#x4E9A;&#x9A6C;&#x900A;&#x9AD8;&#x7EA7;&#x8F6F;&#x4EF6;&#x5DE5;&#x7A0B;&#x5E08;&#x3002;&#x4E2A;&#x4EBA;&#x4E13;&#x6CE8;PaaS&#x5E94;&#x7528;&#x548C;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x3002; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcnthqs324ai79y/mda-imcnthqs324ai79y.m3u8 2. Complex Adaptive SystemsDave Snowden Cognitive Edge&#x7BA1;&#x7406;&#x54A8;&#x8BE2;&#x516C;&#x53F8; &#x521B;&#x59CB;&#x4EBA;&#x517C;&#x9996;&#x5E2D;&#x79D1;&#x5B66;&#x5B98; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp1zupqgrc52e5/mda-imcp1zupqgrc52e5.m3u8 3. Readable Code-Laura SavinoLaura Savino DDD Europe &#x4E3B;&#x8981;&#x8BB2;&#x5E08;&#x4E4B;&#x4E00; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcp3xy24ggcm42y/mda-imcp3xy24ggcm42y.m3u8 4. Beyond Uncertainty, Design from Domain Perspective&#x738B;&#x5A01; DDD China &#x8054;&#x5408;&#x53D1;&#x8D77;&#x4EBA;&#x3001;ThoughtWorks&#x8D44;&#x6DF1;&#x67B6;&#x6784;&#x5E08; http://ik4pfm2ryuf70bxxd8f.exp.bcevod.com/mda-imcntnep3xr4hbmq/mda-imcntnep3xr4hbmq.m3u8 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>软件架构</category>
      </categories>
      <tags>
        <tag>DDD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PlantUML 语法之时序图]]></title>
    <url>%2F2019%2F01%2F13%2F017%2F</url>
    <content type="text"><![CDATA[plantUML &#x4E0B;&#x8F7D;(&#x542B;&#x300A;plantUML&#x8BED;&#x6CD5;&#x6307;&#x5357;&#x624B;&#x518C;&#x300B;)&#xFF1A;http://plantuml.com/download plantUML &#x5728;&#x7EBF;&#x751F;&#x6210;&#x5668;&#xFF1A;online demo server Visual Studio Code &#x5B89;&#x88C5; plantUML &#x63D2;&#x4EF6;&#xFF0C;&#x5728;&#x63D2;&#x4EF6;&#x5E94;&#x7528;&#x5546;&#x5E97;&#x4E2D;&#x641C;&#x7D22;&#xFF1A;PlantUML&#xFF0C;&#x70B9;&#x51FB;&#x5B89;&#x88C5;&#x5373;&#x53EF;&#x3002; &#x5FEB;&#x6377;&#x952E;&#xFF1A;Alt + D &#x5373;&#x53EF;&#x5FEB;&#x901F;&#x9884;&#x89C8;&#xFF0C;Ctrl + Shift + P &#x5373;&#x53EF;&#x5FEB;&#x901F;&#x8C03;&#x51FA;&#x547D;&#x4EE4;&#x9762;&#x677F;&#xFF0C;&#x9009;&#x62E9;&#x201D;&#x5BFC;&#x51FA;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x56FE;&#x8868;&#x201D;&#x5373;&#x53EF;&#x5BFC;&#x51FA;&#x6210;&#x56FE;&#x7247;&#x6216;&#x8005;svg&#x6587;&#x4EF6;&#x3002; &#x5B89;&#x88C5; graphviz &#x4F7F;&#x7528; plantuml &#x753B;&#x7C7B;&#x56FE;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x9700;&#x8981;&#x5728; VS Code &#x4E2D;&#x5B89;&#x88C5;&#xFF1A;Graphviz Preview&#xFF0C; &#x5982;&#x679C;&#x8FD8;&#x662F;&#x4E0D;&#x753B;&#x7C7B;&#x56FE;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5B89;&#x88C5;graphviz&#x3002; &#x4E0B;&#x8F7D;zip &#x5305;&#xFF0C;&#x5C06;zip&#x5305;&#x89E3;&#x538B;&#xFF0C;&#x5E76;&#x79FB;&#x52A8;&#x5230;&#x56FA;&#x5B9A;&#x76EE;&#x5F55;&#xFF08;&#x5E38;&#x7528;&#x8F6F;&#x4EF6;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x5373;&#x53EF;&#xFF09;&#xFF0C;&#x590D;&#x5236;graphviz &#x5B89;&#x88C5;&#x5305;&#x76EE;&#x5F55;&#x4E0B;&#x7684; bin &#x76EE;&#x5F55;&#x4E0B;&#x7684; dot.exe&#x6587;&#x4EF6;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x8BBE;&#x7F6E;&#x5230;&#x7CFB;&#x7EDF;&#x7684;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#xFF1A;&#x5728;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#x66FE;&#x52A0;GRAPHVIZ_DOT&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x91CD;&#x542F; VS Code&#x3002; VS Code &#x9ED8;&#x8BA4;&#x662F;&#x82F1;&#x6587;&#x7CFB;&#x7EDF;&#xFF0C;&#x53EF;&#x5B89;&#x88C5;&#x201D;Chinese (Simplified) Language&#x201D;&#x4E2D;&#x6587;&#x8BED;&#x8A00;&#x63D2;&#x4EF6;&#x3002; &#x4E00;&#x3001;&#x7B80;&#x5355;&#x4F8B;&#x5B50;&#x6D88;&#x606F;&#x6D41;&#x5411;&#x4F7F;&#x7528; -&gt; &#x8868;&#x793A;, &#x6B64;&#x65F6;&#x7ED8;&#x5236;&#x51FA;&#x5B9E;&#x7EBF;&#x7BAD;&#x5934;; --&gt; &#x5219;&#x7ED8;&#x5236;&#x70B9;&#x7EBF;&#x7BAD;&#x5934;&#x3002;&#x82E5;&#x8981;&#x7ED8;&#x5236;&#x53CD;&#x5411;&#x6D88;&#x606F;&#x6D41;&#x5411;, &#x53EF;&#x4EE5;&#x4F7F;&#x7528; &lt;- &#x6216; &lt;--&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x6CA1;&#x6709;&#x663E;&#x793A;&#x7533;&#x660E;&#x6A21;&#x5757;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;&#x77E9;&#x5F62;&#x56FE;&#x5F62;&#x6A21;&#x5757;&#xFF0C;&#x5E76;&#x4E14;&#x968F;&#x7740;&#x4EE3;&#x7801;&#x7684;&#x4E66;&#x5199;&#x987A;&#x5E8F;&#x8FDB;&#x884C;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x7684;&#x5C55;&#x793A;&#x3002; 123456@startuml&#x6A21;&#x5757;1 -&gt; &#x6A21;&#x5757;2: Authentication Request&#x6A21;&#x5757;2 --&gt; &#x6A21;&#x5757;1: Authentication Response&#x6A21;&#x5757;1 -&gt; &#x6A21;&#x5757;2: Another authentication Request&#x6A21;&#x5757;2 &lt;-- &#x6A21;&#x5757;1: another authentication Response@enduml &#x4E8C;&#x3001;&#x7533;&#x660E;&#x4F8B;&#x56FE;&#xFF08;&#x79CD;&#x7C7B;&#xFF09;&#x7531; participant &#x58F0;&#x660E;&#x7684;&#x53C2;&#x4E0E;&#x8005;&#x7684;&#x56FE;&#x5F62;&#x662F;&#x4E00;&#x4E2A;&#x77E9;&#x5F62;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x7531;&#x5176;&#x5B83;&#x5173;&#x952E;&#x5B57;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x53C2;&#x4E0E;&#x8005;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x5173;&#x952E;&#x5B57;&#x58F0;&#x660E;&#x7684;&#x53C2;&#x4E0E;&#x7ED8;&#x5236;&#x65F6;&#x4F7F;&#x7528;&#x7684;&#x56FE;&#x5F62;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF1A; participant actor boundary control entity database collections 12345678910111213@startumlactor &#x89D2;&#x8272;boundary &#x5206;&#x754C;control &#x63A7;&#x5236;&#x5668;entity &#x6570;&#x636E;&#x5BF9;&#x8C61;database &#x6570;&#x636E;&#x5E93;collections &#x96C6;&#x5408;&#x89D2;&#x8272; -&gt; &#x5206;&#x754C; : &#x53D1;&#x9001;&#x5230;&#x5206;&#x754C;&#x89D2;&#x8272; -&gt; &#x63A7;&#x5236;&#x5668; : &#x53D1;&#x9001;&#x5230;&#x63A7;&#x5236;&#x5668;&#x89D2;&#x8272; -&gt; &#x6570;&#x636E;&#x5BF9;&#x8C61; : &#x53D1;&#x9001;&#x5230;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x89D2;&#x8272; -&gt; &#x6570;&#x636E;&#x5E93; : &#x53D1;&#x9001;&#x5230;&#x6570;&#x636E;&#x5E93;&#x89D2;&#x8272; -&gt; &#x96C6;&#x5408; : &#x53D1;&#x9001;&#x5230;&#x96C6;&#x5408;@enduml &#x4E09;&#x3001;&#x4F7F;&#x7528;&#x522B;&#x540D;&#x53CA;&#x80CC;&#x666F;&#x989C;&#x8272;&#x522B;&#x540D; &#x82E5;&#x53C2;&#x4E0E;&#x8005;&#x540D;&#x79F0;&#x8FC7;&#x957F;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x53C2;&#x4E0E;&#x8005;&#x540D;&#x5B57;&#x7531;&#x591A;&#x4E2A;&#x5355;&#x8BCD;&#x7EC4;&#x6210;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5173;&#x952E;&#x5B57; as &#x7ED9;&#x53C2;&#x4E0E;&#x8005;&#x53D6;&#x4E00;&#x4E2A;&#x522B;&#x540D;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x522B;&#x540D;&#x6307;&#x4EE3;&#x8BE5;&#x53C2;&#x4E0E;&#x8005;&#x3002; &#x53C2;&#x4E0E;&#x8005;&#x80CC;&#x666F;&#x8272; &#x5728;&#x53C2;&#x4E0E;&#x8005;&#x540D;&#x79F0;&#x4E4B;&#x540E;&#x4EE5; #COLOR &#x7684;&#x5F62;&#x5F0F;&#x53EF;&#x4EE5;&#x8BBE;&#x5B9A;&#x53C2;&#x4E0E;&#x8005;&#x56FE;&#x6807;&#x7684;&#x80CC;&#x666F;&#x8272;&#x3002; 12345678910111213141516@startumlactor &#x7BA1;&#x7406;&#x5458; #red&apos; &#x5B9A;&#x4E49;&#x989C;&#x8272;&#x89D2;&#x8272;&#x7684;&#x80CC;&#x666F;&#x989C;&#x8272;&#xFF0C;&#x4EE5;&#x533A;&#x522B;&#x4E0D;&#x7528;&#x7684;&#x5143;&#x7D20;participant &#x670D;&#x52A1;1&apos; &#x5B9A;&#x4E49;&#x522B;&#x540D;participant &quot;&#x8BF7;&#x6C42;&#x65E5;&#x5FD7;&quot; as R #99FF99&apos; &#x4E5F;&#x53EF;&#x4EE5;&#x4E0B;&#x9762;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5B9A;&#x4E49;&#x522B;&#x540D;participant S as &quot;&#x54CD;&#x5E94;&#x65E5;&#x5FD7;&quot; #99FF00participant &#x670D;&#x52A1;2&#x670D;&#x52A1;1-&gt;&#x670D;&#x52A1;2: &#x9A8C;&#x8BC1;&#x8BF7;&#x6C42;&#x670D;&#x52A1;1-&gt;R: &#x65E5;&#x5FD7;&#x8BB0;&#x5F55;&#x670D;&#x52A1;2-&gt;&#x670D;&#x52A1;1: &#x9A8C;&#x8BC1;&#x54CD;&#x5E94;&#x670D;&#x52A1;2-&gt;S: &#x65E5;&#x5FD7;&#x8BB0;&#x5F55;@enduml &#x56DB;&#x3001;&#x8BBE;&#x7F6E;&#x7BAD;&#x5934;&#x989C;&#x8272;&#x5728;&#x7BAD;&#x5934;&#x8BED;&#x6CD5;&#x4E2D;&#x95F4;&#x4EE5; [#COLOR] &#x7684;&#x5F62;&#x5F0F;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x7BAD;&#x5934;&#x989C;&#x8272;&#xFF1A; 1234567@startuml&apos; &#x8BBE;&#x7F6E;&#x7BAD;&#x5934;&#x989C;&#x8272;&#x670D;&#x52A1;1 -[#Red]-&gt; &#x670D;&#x52A1;2: &#x53D1;&#x9001;&#x8BF7;&#x6C42; [&#x865A;&#x7EBF;&#x7BAD;&#x5934;]&apos;&#x865A;&#x7EBF;&#x7BAD;&#x5934; --&gt;&#x670D;&#x52A1;2 -[#Green]&gt; &#x670D;&#x52A1;3: &#x53D1;&#x9001;&#x8BF7;&#x6C42; [&#x5B9E;&#x7EBF;&#x7BAD;&#x5934;]&apos;&#x5B9E;&#x7EBF;&#x7BAD;&#x5934; -&gt;@enduml &#x4E94;&#x3001;&#x8BBE;&#x7F6E;&#x7BAD;&#x5934;&#x98CE;&#x683C; x. &#x5C06;&#x5176;&#x653E;&#x5230;&#x7BAD;&#x5934;&#x7B26;&#x53F7;&#x524D;&#x6216;&#x540E;&#xFF0C;UML &#x4E2D;&#x8868;&#x793A;&#x4E22;&#x5931;&#x6D88;&#x606F;. &#x4F7F;&#x7528; / &#x4EE3;&#x66FF; &gt; &#x6216; &#x4F7F;&#x7528; \ &#x4EE3;&#x66FF; &lt;&#xFF0C;&#x56FE;&#x6807;&#x7BAD;&#x5934;&#x53EA;&#x6709;&#x534A;&#x4E2A;. &#x4F7F;&#x7528; //&#xFF0C; &gt;&gt;&#xFF0C; &lt;&lt;&#xFF0C; \\ &#x5C06;&#x4EA7;&#x751F;&#x7EC6;&#x7BAD;&#x5934;. &#x4F7F;&#x7528; -- &#x4EE3;&#x66FF; - &#x5C06;&#x4EA7;&#x751F;&#x865A;&#x7EBF;. &#x5728;&#x7BAD;&#x5934;&#x6216;&#x7BAD;&#x5C3E;&#x653E;&#x7F6E; o, &#x76F8;&#x5E94;&#x4F4D;&#x7F6E;&#x4F1A;&#x7ED8;&#x5236; &#x2018;o&#x2019;. &#x53EF;&#x4EE5;&#x4EA7;&#x751F;&#x53CC;&#x5411;&#x7BAD;&#x5934; &#x516D;&#x3001;&#x7BAD;&#x5934;&#x7ED9;&#x81EA;&#x5DF1;&#x53D1;&#x6D88;&#x606F;&#x53C2;&#x4E0E;&#x8005;&#x53EF;&#x4EE5;&#x7ED9;&#x81EA;&#x5DF1;&#x53D1;&#x6D88;&#x606F; 123456@startuml&apos; &#x82E5;&#x6D88;&#x606F;&#x5F88;&#x957F;, &#x53EF;&#x4EE5;&#x4F7F;&#x7528; &quot;\n&quot; &#x6362;&#x884C;.&apos; &#x6D88;&#x606F;&#x9ED8;&#x8BA4;&#x662F;&#x6216;&#x5BF9;&#x9F50;.&apos; &#x53C2;&#x4E0E;&#x8005;&#x540D;&#x79F0;&#x5219;&#x662F;&#x9ED8;&#x8BA4;&#x4E2D;&#x95F4;&#x5BF9;&#x9F50;.&#x670D;&#x52A1;&#x5668;-&gt;&#x670D;&#x52A1;&#x5668;: &#x82E5;&#x6D88;&#x606F;&#x5F88;&#x957F;, &#x53EF;&#x4EE5;&#x4F7F;&#x7528; &quot;\\n&quot; &#x6362;&#x884C; \n &#x6D88;&#x606F;&#x9ED8;&#x8BA4;&#x662F;&#x6216;&#x5BF9;&#x9F50; \n &#x53C2;&#x4E0E;&#x8005;&#x540D;&#x79F0;&#x5219;&#x662F;&#x9ED8;&#x8BA4;&#x4E2D;&#x95F4;&#x5BF9;&#x9F50;@enduml &#x4E03;&#x3001;&#x6D88;&#x606F;&#x81EA;&#x52A8;&#x7F16;&#x53F7; autonumber &#x4ECE; 1 &#x5F00;&#x59CB;&#x5BF9;&#x6D88;&#x606F;&#x81EA;&#x52A8;&#x7F16;&#x53F7; autonumber START&#x4ECE; START &#x5F00;&#x59CB;&#x5BF9;&#x6D88;&#x606F;&#x81EA;&#x52A8;&#x7F16;&#x53F7; autonumber START INCREMENT&#x4ECE; START &#x5F00;&#x59CB;&#xFF0C;&#x6309; &#x589E;&#x91CF; INCREMENT &#x5BF9;&#x6D88;&#x606F;&#x81EA;&#x52A8;&#x7F16;&#x53F7; 123456789101112131415@startumlautonumber&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x7B2C;&#x4E00;&#x6B21;&#x8BF7;&#x6C42; [&#x81EA;&#x52A8;&#x7F16;&#x53F7;]&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x7B2C;&#x4E00;&#x6B21;&#x54CD;&#x5E94; [&#x81EA;&#x52A8;&#x7F16;&#x53F7;]autonumber 15&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x7B2C;&#x4E8C;&#x6B21;&#x8BF7;&#x6C42; [&#x4ECE;&#x7F16;&#x53F7;15&#x5F00;&#x59CB;, &#x81EA;&#x52A8;&#x7F16;&#x53F7;]&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x7B2C;&#x4E8C;&#x6B21;&#x54CD;&#x5E94; [&#x4ECE;&#x7F16;&#x53F7;15&#x5F00;&#x59CB;, &#x81EA;&#x52A8;&#x7F16;&#x53F7;]autonumber 40 10&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x7B2C;&#x4E00;&#x6B21;&#x8BF7;&#x6C42; [&#x4ECE;&#x7F16;&#x53F7;40&#x5F00;&#x59CB;, &#x4EE5; 10 &#x4E3A;&#x5355;&#x4F4D;&#x81EA;&#x52A8;&#x7F16;&#x53F7;]&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x7B2C;&#x4E8C;&#x6B21;&#x54CD;&#x5E94; [&#x4ECE;&#x7F16;&#x53F7;40&#x5F00;&#x59CB;, &#x4EE5; 10 &#x4E3A;&#x5355;&#x4F4D;&#x81EA;&#x52A8;&#x7F16;&#x53F7;]@enduml &#x516B;&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x6D88;&#x606F;&#x7F16;&#x53F7;&#x6837;&#x5F0F;123456789101112131415@startumlautonumber &quot;&lt;b&gt;[000]&quot;&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x8BC1;&#x8BF7;&#x6C42; [&#x7F16;&#x53F7;&#x5E26;&#x4E2D;&#x62EC;&#x53F7;&#x53CA;&#x52A0;&#x7C97;&#x6837;&#x5F0F;]&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x9A8C;&#x8BC1;&#x54CD;&#x5E94; [&#x7F16;&#x53F7;&#x5E26;&#x4E2D;&#x62EC;&#x53F7;&#x53CA;&#x52A0;&#x7C97;&#x6837;&#x5F0F;]autonumber 15 &quot;&lt;b&gt;(&lt;u&gt;##&lt;/u&gt;)&quot;&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x9A8C;&#x8BC1;&#x8BF7;&#x6C42; [&#x7F16;&#x53F7;&#x5E26;&#x62EC;&#x53F7;&#x53CA;&#x4E0B;&#x5212;&#x7EBF;&#x6837;&#x5F0F;]&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x9A8C;&#x8BC1;&#x54CD;&#x5E94; [&#x7F16;&#x53F7;&#x5E26;&#x62EC;&#x53F7;&#x53CA;&#x4E0B;&#x5212;&#x7EBF;&#x6837;&#x5F0F;]autonumber 40 10 &quot;&lt;font color=red&gt;&lt;b&gt;&#x6D88;&#x606F;&#x7F16;&#x53F7; 0 &quot;&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x9A8C;&#x8BC1;&#x8BF7;&#x6C42; [&#x7F16;&#x53F7;&#x5E26;&#x7EA2;&#x8272;&#x53CA;&#x52A0;&#x7C97;&#x6837;&#x5F0F;]&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x9A8C;&#x8BC1;&#x54CD;&#x5E94; [&#x7F16;&#x53F7;&#x5E26;&#x7EA2;&#x8272;&#x53CA;&#x52A0;&#x7C97;&#x6837;&#x5F0F;]@enduml &#x4E5D;&#x3001;&#x505C;&#x6B62;&#x6D88;&#x606F;&#x81EA;&#x52A8;&#x7F16;&#x53F7;123456789101112131415161718192021@startumlautonumber 10 10 &quot;&lt;b&gt;[000]&quot;&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x9A8C;&#x8BC1;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x9A8C;&#x8BC1;&#x54CD;&#x5E94;autonumber stop&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x505C;&#x6B62;&#x81EA;&#x52A8;&#x7F16;&#x53F7;&#x540E;&#x7684;&#x6D88;&#x606F;autonumber resume &quot;&lt;font color=red&gt;&lt;b&gt;&#x6D88;&#x606F;&#x7F16;&#x53F7; 0 &quot;&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x53E6;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x53E6;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x54CD;&#x5E94;autonumber stop&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x505C;&#x6B62;&#x81EA;&#x52A8;&#x7F16;&#x53F7;&#x540E;&#x7684;&#x6D88;&#x606F;autonumber resume 1 &quot;&lt;font color=blue&gt;&lt;b&gt;&#x6D88;&#x606F;&#x7F16;&#x53F7; 0 &quot;&#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF; : &#x53E6;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x5668; &lt;- &#x5BA2;&#x6237;&#x7AEF; : &#x53E6;&#x4E00;&#x4E2A;&#x9A8C;&#x8BC1;&#x54CD;&#x5E94;@enduml &#x5341;&#x3001;&#x6D88;&#x606F;&#x5206;&#x7EC4;&#x6709;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x5BF9;&#x6D88;&#x606F;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x5173;&#x952E;&#x8BCD;&#x6765;&#x5B9E;&#x73B0;&#xFF1A; alt/else opt loop par break critical group, &#x8FD9;&#x4E2A;&#x5173;&#x952E;&#x8BCD;&#x540E;&#x9762;&#x7684;&#x6587;&#x5B57;&#x4F1A;&#x4F5C;&#x4E3A;&#x7EC4;&#x540D;&#x663E;&#x793A;&#x5728;&#x56FE;&#x5F62;&#x4E0A; &#x4E0A;&#x9762;&#x7684;&#x5173;&#x952E;&#x8BCD;&#x540E;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x6587;&#x672C;&#x7528;&#x6765;&#x663E;&#x793A;&#x5728;&#x5934;&#x90E8;&#xFF08;&#x6CE8;&#xFF1A;group &#x9664;&#x5916;&#xFF0C;&#x56E0; &#x4E3A;&#x5B83;&#x540E;&#x9762;&#x7684;&#x6587;&#x672C;&#x7528;&#x6765;&#x663E;&#x793A;&#x5728;&#x7EC4;&#x540D;&#x79F0;&#x7684;&#x4F4D;&#x7F6E;&#xFF09;&#x3002;&#x5728;&#x7EC4;&#x5D4C;&#x5957;&#x7EC4;&#x7684;&#x7ED3;&#x6784;&#x91CC;&#x53EF;&#x4EE5;&#x7528;&#x5173; &#x952E;&#x8BCD;end&#x6765;&#x5173;&#x95ED;&#x7EC4;&#x6216;&#x8005;&#x8BF4;&#x662F;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x7EC4;&#x7B26;&#x53F7;&#x7684;&#x7ED3;&#x675F;&#x7B26;&#xFF08;&#x7C7B;&#x4F3C;if/endif&#xFF09;&#x3002; 1234567891011121314151617181920@startuml&#x5BA2;&#x6237;&#x7AEF; -&gt; &#x670D;&#x52A1;&#x5668;: &#x9A8C;&#x8BC1;&#x8BF7;&#x6C42;alt &#x9A8C;&#x8BC1;&#x6210;&#x529F; &#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF;: &#x9A8C;&#x8BC1;&#x54CD;&#x5E94;else &#x9A8C;&#x8BC1;&#x5931;&#x8D25;&#xFF1A;&#x7B2C;&#x4E00;&#x79CD;&#x5931;&#x8D25;&#x60C5;&#x51B5; &#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF;: &#x9A8C;&#x8BC1;&#x5931;&#x8D25; group &#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5206;&#x7EC4;&#x60C5;&#x51B5; &#x5BA2;&#x6237;&#x7AEF; -&gt; &#x65E5;&#x5FD7;&#x670D;&#x52A1; : &#x5F00;&#x59CB;&#x8BB0;&#x5F55;&#x65E5;&#x5FD7;l oop &#x5FAA;&#x73AF; 1000 &#x6B21; &#x5BA2;&#x6237;&#x7AEF; -&gt; &#x670D;&#x52A1;&#x5668;: DNS &#x5C1D;&#x8BD5; end&#x5BA2;&#x6237;&#x7AEF; -&gt; &#x65E5;&#x5FD7;&#x670D;&#x52A1; : &#x7ED3;&#x675F;&#x65E5;&#x5FD7;&#x8BB0;&#x5F55;endelse &#x9A8C;&#x8BC1;&#x5931;&#x8D25;&#xFF1A;&#x7B2C;&#x4E8C;&#x79CD;&#x5931;&#x8D25;&#x60C5;&#x51B5; &#x670D;&#x52A1;&#x5668; -&gt; &#x5BA2;&#x6237;&#x7AEF;: &#x8981;&#x6C42;&#x5BA2;&#x6237;&#x7AEF;&#x91CD;&#x65B0;&#x8BF7;&#x6C42;end@enduml &#x5341;&#x4E00;&#x3001;&#x6D88;&#x606F;&#x6CE8;&#x89E3;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x7ECF;&#x5E38;&#x4F1A;&#x5728;&#x6D88;&#x606F;&#x7684;&#x5DE6;&#x8FB9;&#x6216;&#x53F3;&#x8FB9;&#x4F7F;&#x7528;&#x6CE8;&#x89E3;&#xFF0C;&#x8981;&#x6DFB;&#x52A0;&#x6CE8;&#x89E3;&#xFF0C;&#x53EA;&#x8981;&#x4F7F;&#x7528; note left &#x6216; note right &#x5173;&#x952E;&#x8BCD;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; 123456789101112@startuml&#x5BA2;&#x6237;&#x7AEF;-&gt;&#x670D;&#x52A1;&#x5668; : &#x8BF7;&#x6C42;note left: &#x8FD9;&#x662F;&#x5DE6;&#x4FA7;&#x6CE8;&#x89E3;&#x670D;&#x52A1;&#x5668; -&gt;&#x5BA2;&#x6237;&#x7AEF; : &#x54CD;&#x5E94;note right: &#x8FD9;&#x662F;&#x53F3;&#x4FA7;&#x6CE8;&#x89E3;&#x670D;&#x52A1;&#x5668; -&gt;&#x670D;&#x52A1;&#x5668; : &#x4E1A;&#x52A1;&#x6D41;&#x7A0B;&#x5904;&#x7406;note left&#x6CE8;&#x89E3;&#x4E5F;&#x53EF;&#x4EE5;&#x591A;&#x884C;&#x7F16;&#x5199;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528; note &#x548C; end note &#x5373;&#x53EF;end note@enduml &#x5341;&#x4E8C;&#x3001;&#x5176;&#x4ED6;&#x6CE8;&#x89E3;&#x65B9;&#x5F0F;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x5173;&#x952E;&#x8BCD; note left of &#xFF0C; note right of &#x6216; note over &#xFF0C; &#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x628A;&#x6CE8;&#x89E3;&#x653E;&#x7F6E;&#x5728;&#x4E0E;&#x4E4B;&#x76F8;&#x5173;&#x7684;&#x53C2;&#x4E0E;&#x8005;&#x7684;&#x5DE6;&#x8FB9;&#x6216;&#x53F3;&#x8FB9;&#xFF0C;&#x6216;&#x4E0B;&#x65B9;&#x3002; &#x901A;&#x8FC7;&#x6539;&#x53D8;&#x6CE8;&#x89E3;&#x7684;&#x80CC;&#x666F;&#x8272;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x9AD8;&#x4EAE;&#x4E00;&#x4E2A;&#x6CE8;&#x89E3;&#x6587;&#x672C;&#x5757;&#x3002; &#x5982;&#x679C;&#x8981;&#x4F7F;&#x7528;&#x591A;&#x884C;&#x6CE8;&#x89E3;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5173;&#x952E;&#x8BCD; end note &#x6765;&#x8868;&#x793A;&#x6CE8;&#x89E3;&#x7684;&#x7ED3;&#x675F;&#x3002; 12345678910111213141516171819@startumlparticipant &#x5BA2;&#x6237;&#x7AEF;participant &#x670D;&#x52A1;&#x5668;note left of &#x5BA2;&#x6237;&#x7AEF; #aqua &#x8FD9;&#x662F;&#x76F8;&#x5BF9;&#x5BA2;&#x6237;&#x7AEF;&#x6A21;&#x5757;&#x5DE6;&#x4FA7;&#x7684;&#x6CE8;&#x89E3;end notenote right of &#x5BA2;&#x6237;&#x7AEF;: &#x8FD9;&#x662F;&#x76F8;&#x5BF9;&#x5BA2;&#x6237;&#x7AEF;&#x6A21;&#x5757;&#x53F3;&#x4FA7;&#x7684;&#x6CE8;&#x89E3;note over &#x5BA2;&#x6237;&#x7AEF;: &#x8FD9;&#x662F;&#x76F8;&#x5BF9;&#x5BA2;&#x6237;&#x7AEF;&#x6A21;&#x5757;&#x4E2D;&#x95F4;&#x7684;&#x6CE8;&#x89E3;note over &#x5BA2;&#x6237;&#x7AEF;, &#x670D;&#x52A1;&#x5668; #FFAAAA: &#x8FD9;&#x662F;&#x76F8;&#x5BF9;\n &#x670D;&#x52A1;&#x5668;&#x548C;&#x5BA2;&#x6237;&#x7AEF;&#x4E4B;&#x95F4;&#x7684;&#x6CE8;&#x89E3;note over &#x5BA2;&#x6237;&#x7AEF;, &#x670D;&#x52A1;&#x5668; &#x8FD9;&#x662F;&#x6362;&#x884C;&#x7684;&#x6CE8;&#x89E3; &#x4F7F;&#x7528; note &#x548C; end note &#x7EC4;&#x5408;end note@enduml &#x5341;&#x4E09;&#x3001;&#x6700;&#x4F73;&#x6837;&#x5F0F;&#x9ED8;&#x8BA4;&#x6837;&#x5F0F;&#x989C;&#x8272;&#x4E3A;&#x9EC4;&#x8272;&#xFF0C;&#x7EC4;&#x4EF6;&#x5757;&#x662F;&#x4E0A;&#x4E0B;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x8FD9;&#x4F1A;&#x4EA7;&#x751F;&#x66F4;&#x591A;&#x7684;&#x89C6;&#x89C9;&#x566A;&#x97F3;&#xFF0C;&#x56E0;&#x6B64;&#x53BB;&#x6389;&#x5E95;&#x90E8;&#x7684;&#x91CD;&#x590D;&#x5E76;&#x5C06;&#x989C;&#x8272;&#x6539;&#x4E3A;&#x7D20;&#x8272;&#x4E3A;&#x597D;&#xFF1A; 123456789101112131415161718192021@startumlhide footboxskinparam sequenceMessageAlign centerskinparam sequenceArrowFontSize 11skinparam noteFontSize 11skinparam monochrome trueskinparam lifelinestrategy solidautonumber &quot;&lt;b&gt;[00]&quot;actor &#x89D2;&#x8272;boundary &#x5206;&#x754C;control &#x63A7;&#x5236;&#x5668;entity &#x6570;&#x636E;&#x5BF9;&#x8C61;database &#x6570;&#x636E;&#x5E93;collections &#x96C6;&#x5408;&#x89D2;&#x8272; -&gt; &#x5206;&#x754C; : &#x53D1;&#x9001;&#x5230;&#x5206;&#x754C;&#x89D2;&#x8272; -&gt; &#x63A7;&#x5236;&#x5668; : &#x53D1;&#x9001;&#x5230;&#x63A7;&#x5236;&#x5668;&#x89D2;&#x8272; -&gt; &#x6570;&#x636E;&#x5BF9;&#x8C61; : &#x53D1;&#x9001;&#x5230;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x89D2;&#x8272; -&gt; &#x6570;&#x636E;&#x5E93; : &#x53D1;&#x9001;&#x5230;&#x6570;&#x636E;&#x5E93;&#x89D2;&#x8272; -&gt; &#x96C6;&#x5408; : &#x53D1;&#x9001;&#x5230;&#x96C6;&#x5408;@enduml &#x53C2;&#x8003;&#x8D44;&#x6599;&#xFF1A; &#x5B98;&#x65B9;&#x6307;&#x5357;&#x82F1;&#x6587;&#x7248; &#x5B98;&#x7F51; &#x5B98;&#x7F51;&#x5728;&#x7EBF;&#x5236;&#x4F5C; plantuml &#x4E4B;&#x5E8F;&#x5217;&#x56FE;(&#x4E00;) &#x4F7F;&#x7528;Emacs&#x6572;&#x51FA;UML&#xFF0C;PlantUML&#x5FEB;&#x901F;&#x6307;&#x5357; &#x4F7F;&#x7528; Sublime + PlantUML &#x9AD8;&#x6548;&#x5730;&#x753B;&#x56FE; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>UML</category>
      </categories>
      <tags>
        <tag>PlantUML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ndoe.js安装及环境配置(for windows)]]></title>
    <url>%2F2019%2F01%2F13%2F016%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;1.1 &#x4E0B;&#x8F7D;&#xFF2E;ode.js&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;https://nodejs.org/en/download/ 1.2 &#x5B89;&#x88C5;&#x76F4;&#x63A5;&#x75AF;&#x72C2;&#x70B9;&#x51FB;&#x201D;&#x4E0B;&#x4E00;&#x6B65;&#x201D;&#xFF0C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x3002; &#x672C;&#x6559;&#x7A0B;&#x5728;&#x5B89;&#x88C5;&#x5411;&#x5BFC;&#x4E2D;&#x6307;&#x5B9A; node.js &#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E3A;&#xFF1A;D:\programs\nodejs 1.3 &#x68C0;&#x67E5;&#x662F;&#x5426;&#x5B89;&#x88C5; Node.js &#x6210;&#x529F;&#x8FD0;&#x884C;cmd&#x7A97;&#x53E3;&#xFF0C;&#x6267;&#x884C;node -v&#x547D;&#x4EE4;&#x67E5;&#x770B;&#x5DF2;&#x5B89;&#x88C5; node.js &#x7684;&#x7248;&#x672C;&#x3002; &#x6267;&#x884C;npm -v&#x547D;&#x4EE4;&#xFF0C;&#x67E5;&#x770B;&#x5DF2;&#x5B89;&#x88C5; npm &#x7684;&#x7248;&#x672C;&#x3002; &#x8BF4;&#x660E;&#xFF1A;Node.js &#x5B89;&#x88C5;&#x4E2D;&#x5DF2;&#x7ECF;&#x96C6;&#x6210;&#x5B89;&#x88C5;&#x4E86; npm&#xFF0C;npm &#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x5BF9; Node.js &#x4F9D;&#x8D56;&#x7684;&#x5305;&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x7528;&#x6765;&#x5B89;&#x88C5;/&#x5378;&#x8F7D; Node.js &#x9700;&#x8981;&#x88C5;&#x7684;&#x4E1C;&#x897F;&#x3002; &#x4E8C;&#x3001;&#x73AF;&#x5883;&#x914D;&#x7F6E; &#x8BF4;&#x660E;&#xFF1A;&#x73AF;&#x5883;&#x914D;&#x7F6E;&#x4E3B;&#x8981;&#x914D;&#x7F6E;&#x7684;&#x662F; npm &#x5B89;&#x88C5;&#x7684;&#x5168;&#x5C40;&#x6A21;&#x5757;&#x6240;&#x5728;&#x8DEF;&#x5F84;&#x4EE5;&#x53CA;&#x7F13;&#x5B58; cache &#x7684;&#x8DEF;&#x5F84;&#x3002; &#x56E0;&#x4E3A;&#x4EE5;&#x540E;&#x5728;&#x6267;&#x884C;&#x7C7B;&#x4F3C;&#xFF1A;npm install express [-g] &#xFF08;&#x540E;&#x9762;&#x7684;&#x53EF;&#x9009;&#x53C2;&#x6570;-g&#xFF0C;g&#x4EE3;&#x8868;global&#x5168;&#x5C40;&#x5B89;&#x88C5;&#x7684;&#x610F;&#x601D;&#xFF09;&#x7684;&#x5B89;&#x88C5;&#x547D;&#x4EE4;&#x65F6;&#xFF0C;&#x4F1A;&#x5C06;&#x5B89;&#x88C5;&#x7684;&#x6A21;&#x5757;&#x5B89;&#x88C5;&#x5230;&#x9ED8;&#x8BA4;&#x8DEF;&#x5F84;&#x4E2D;&#xFF08;C:\Users\&#x7528;&#x6237;&#x540D;\AppData\Roaming\npm&#xFF09;&#x8DEF;&#x5F84;&#x4E2D;&#xFF0C;&#x4F1A;&#x5360;&#x7528; C &#x76D8;&#x7A7A;&#x95F4;&#x3002; 2.1 &#x5168;&#x5C40;&#x53CA;&#x7F13;&#x5B58;&#x5B89;&#x88C5;&#x8DEF;&#x5F84;&#x914D;&#x7F6E;&#x56E0;&#x4E3A; Node.js &#x5B89;&#x88C5;&#x7684;&#x8DEF;&#x5F84;&#x662F;&#xFF1A;D:\programs\nodejs&#xFF0C;&#x6240;&#x4EE5;&#x5C06;&#x5168;&#x5C40;&#x548C;&#x7F13;&#x5B58;&#x5B89;&#x88C5;&#x8DEF;&#x5F84;&#x4E5F;&#x914D;&#x7F6E;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x65B9;&#x4FBF;&#x7BA1;&#x7406;&#xFF0C;&#x5728;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA;node_global&#x548C;node_cache&#x7A7A;&#x76EE;&#x5F55;&#xFF1A; 2.2 npm &#x914D;&#x7F6E;&#x521B;&#x5EFA;&#x5B8C;&#x4E24;&#x4E2A;&#x7A7A;&#x6587;&#x4EF6;&#x5939;&#x4E4B;&#x540E;&#xFF0C;&#x6253;&#x5F00; cmd &#x547D;&#x4EE4;&#x7A97;&#x53E3;&#xFF0C;&#x8F93;&#x5165;&#xFF1A; 12npm config set prefix &quot;D:\programs\nodejs\node_global&quot;npm config set cache &quot;D:\programs\nodejs\node_cache&quot; &#x67E5;&#x770B; npm &#x914D;&#x7F6E;&#x547D;&#x4EE4;&#xFF1A;npm config list &#x67E5;&#x770B; npm &#x6240;&#x6709;&#x914D;&#x7F6E;&#x547D;&#x4EE4;&#xFF1A;npm config list -l npm &#x672C;&#x5730;&#x5B89;&#x88C5;&#x4E0E;&#x5168;&#x5C40;&#x5B89;&#x88C5;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F; npm install grunt // &#x672C;&#x5730;&#x5B89;&#x88C5;&#xFF0C;&#x5219;&#x662F;&#x5C06;&#x6A21;&#x5757;&#x4E0B;&#x8F7D;&#x5230;&#x5F53;&#x524D;&#x547D;&#x4EE4;&#x884C;&#x6240;&#x5728;&#x76EE;&#x5F55;&#x3002;npm install -g grunt // &#x5168;&#x5C40;&#x5B89;&#x88C5;&#xFF0C;&#x6A21;&#x5757;&#x5C06;&#x88AB;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x5230;&#x5168;&#x5C40;&#x76EE;&#x5F55;&#x4E2D;&#x3002; 2.3 &#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x914D;&#x7F6E;&#x201C;&#x6211;&#x7684;&#x7535;&#x8111;&#x201D; - &#x201C;&#x53F3;&#x952E;&#x201D; - &#x201C;&#x5C5E;&#x6027;&#x201D; - &#x201C;&#x9AD8;&#x7EA7;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x201D; - &#x201C;&#x9AD8;&#x7EA7;&#x201D; - &#x201C;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x201D; &#x8FDB;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x5BF9;&#x8BDD;&#x6846;&#xFF0C;&#x5728;&#x7CFB;&#x7EDF;&#x53D8;&#x91CF;&#x4E0B;&#x65B0;&#x5EFA;&#xFF1A; NODE_PATH&#xFF0C;D:\programs\nodejs\node_global\node_modules &#x4FEE;&#x6539;&#x7528;&#x6237;&#x53D8;&#x91CF;&#x914D;&#x7F6E;&#xFF1A; PATH&#x503C;&#x4FEE;&#x6539;&#x4E3A;D:\programs\nodejs\node_global &#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;&#x5728;&#x7528;&#x6237;&#x53D8;&#x91CF;&#x4E2D;&#x7684;PATH&#x6CA1;&#x6709;&#x770B;&#x5230;&#x9ED8;&#x8BA4;&#x7684; node.js &#x5168;&#x5C40;&#x76EE;&#x5F55;&#xFF0C;&#x90A3;&#x4E48;&#x8BF4;&#x660E;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x597D;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x5378;&#x8F7D;&#xFF0C;&#x91CD;&#x542F;&#x7535;&#x8111;&#x518D;&#x5B89;&#x88C5;&#x4E00;&#x6B21;&#x3002; 2.4 &#x6D4B;&#x8BD5;&#x914D;&#x7F6E;&#x5B8C;&#x540E;&#xFF0C;&#x5B89;&#x88C5;&#x4E2A; module &#x6D4B;&#x8BD5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5B89;&#x88C5;&#x6700;&#x5E38;&#x7528;&#x7684;express&#x6A21;&#x5757;&#xFF0C;&#x6253;&#x5F00; cmd &#x7A97;&#x53E3;&#xFF0C;&#x8F93;&#x5165;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x6A21;&#x5757;&#x7684;&#x5168;&#x5C40;&#x5B89;&#x88C5;&#xFF1A; 1npm install express -g # -g&#x662F;&#x5168;&#x5C40;&#x5B89;&#x88C5;&#x7684;&#x610F;&#x601D; &#x67E5;&#x770B;&#x5168;&#x5C40;&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x770B;&#x89C1;&#x521A;&#x521A;&#x5B89;&#x88C5;&#x6210;&#x529F;&#x7684;&#x6A21;&#x5757;&#x76EE;&#x5F55;&#xFF1A; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Ndoe.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的 2018 与 2019]]></title>
    <url>%2F2019%2F01%2F09%2F009%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;2018 &#x4ECA;&#x65E9;&#x7FFB;&#x770B;&#x7A0B;&#x5E8F;&#x89C6;&#x754C;&#x7684;&#x4E00;&#x7BC7;&#x300A;&#x6D3B;&#x52A8;+&#x798F;&#x5229;&#xFF1A;&#x6765;&#x7ACB;&#x4E2A;&#x4E0D;&#x5012;&#x7684;Flag&#x300B;&#x6587;&#x7AE0;&#xFF0C;&#x91CC;&#x9762;&#x8BB2;&#x5230;&#x4E00;&#x4E2A;&#x89C2;&#x70B9;&#x5F88;&#x597D;&#xFF1A; &#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#x53EF;&#x4EE5;&#x5EF6;&#x540E;&#x4E24;&#x5E74;&#x5B9E;&#x73B0;&#xFF0C;&#x90A3;&#x591A;&#x534A;&#x4ECA;&#x5E74;&#x4F60;&#x4E0D;&#x4F1A;&#x82B1;&#x7CBE;&#x529B;&#x53BB;&#x505A;&#x5B83;&#x3002; &#x65F6;&#x95F4;&#x6D41;&#x901D;&#x5F88;&#x5FEB;&#xFF0C;2019 &#x5E74;&#x7684;&#x7B2C; 2 &#x4E2A;&#x5DE5;&#x4F5C;&#x5468;&#x5DF2;&#x7ECF;&#x5FEB;&#x8FC7;&#x5B8C;&#x4E86;&#x3002; &#x8F6C;&#x884C; &#x7B2C;&#x4E00;&#x6B21;&#x4E3B;&#x52A8;&#x505A;&#x51FA;&#x5F88;&#x4EE4;&#x4EBA;&#x8BE7;&#x5F02;&#x7684;&#x8F6C;&#x884C;&#x51B3;&#x5B9A;&#xFF0C;&#x6709;&#x79CD;&#x6C89;&#x821F;&#x7834;&#x65A7;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x95ED;&#x95E8;&#x81EA;&#x5B66;&#x534A;&#x5E74;&#x591A;&#xFF0C;&#x611F;&#x8C22;&#x81EA;&#x5DF1;&#xFF0C;&#x7ED9;&#x81EA;&#x5DF1;&#x4E00;&#x4E2A;&#x6210;&#x4E3A;&#x4E00;&#x679A;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x673A;&#x4F1A;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x4F53;&#x4F1A;&#x5230;&#x53EA;&#x8981;&#x4ED8;&#x51FA;&#x5C31;&#x6709;&#x56DE;&#x62A5;&#xFF0C;&#x5373;&#x4F7F;&#x8FD9;&#x8BDD;&#x6709;&#x903B;&#x8F91;&#x9519;&#x8BEF;&#xFF0C;&#x4F46;&#x4E0D;&#x4ED8;&#x51FA;&#x662F;&#x7B49;&#x7740;&#x4E70;&#x5F69;&#x7968;&#x4E2D;&#x5927;&#x5956;&#x5417;&#xFF0C;&#x4ED8;&#x51FA;&#x4E86;&#x8FD8;&#x662F;&#x6CA1;&#x6536;&#x83B7;&#xFF0C;&#x90A3;&#x4E00;&#x5B9A;&#x662F;&#x4ED8;&#x51FA;&#x5C11;&#x4E86;&#xFF0C;&#x8FD9;&#x7897;&#x9E21;&#x6C64;&#xFF0C;&#x6211;&#x505A;&#x7684;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x5168;&#x5E72;&#x4E86;&#x3002; &#x7231;&#x60C5; &#x519C;&#x5386;&#x6625;&#x8282;&#x4E34;&#x8FD1;&#xFF0C;&#x542C;&#x6751;&#x91CC;&#x4EBA;&#x5E38;&#x8C08;&#x4F18;&#x79C0;&#x7684;&#x5979;&#xFF0C;&#x56E0;&#x4E0D;&#x82DF;&#x4E14;&#x4E8E;&#x81EA;&#x5DF1;&#x7684;&#x7231;&#x60C5;&#x88AB;&#x4E16;&#x4FD7;&#x7ED1;&#x67B6;&#xFF0C;&#x800C;&#x5A49;&#x62D2;&#x4E86;&#x5927;&#x6279;&#x4F18;&#x79C0;&#x7684;&#x8FFD;&#x6C42;&#x8005;&#x3002;&#x5076;&#x7136;&#xFF0C;&#x5728;&#x5BB6;&#x4EBA;&#x4EB2;&#x621A;&#x7684;&#x64AE;&#x5408;&#x4E0B;&#xFF0C;&#x4E0E;&#x5979;&#x76F8;&#x9047;&#xFF0C;&#x4ECE;&#x5C1D;&#x8BD5;&#x7740;&#x63A5;&#x6536;&#x5BF9;&#x65B9;&#x7684;&#x793A;&#x597D;&#x5F00;&#x59CB;&#xFF0C;&#x6709;&#x79CD;&#x76F8;&#x89C1;&#x6068;&#x665A;&#x7684;&#x611F;&#x89C9;&#xFF0C;&#x80FD;&#x88AB;&#x5979;&#x76F8;&#x4E2D;&#xFF0C;&#x662F;&#x81EA;&#x5DF1;&#x7684;&#x5E78;&#x8FD0;&#xFF0C;&#x6709;&#x79CD;&#x7F18;&#x5206;&#x5929;&#x6CE8;&#x5B9A;&#x7684;&#x611F;&#x89C9;&#x3002; &#x611F;&#x8C22;&#x6709;&#x5979;&#xFF0C;&#x5728;&#x627E;&#x5DE5;&#x4F5C;&#x65E0;&#x679C;&#x800C;&#x8FF7;&#x832B;&#x5F77;&#x5FA8;&#x65F6;&#x7ED9;&#x6211;&#x4FE1;&#x5FC3;&#x548C;&#x52C7;&#x6C14;&#xFF0C;&#x7231;&#x5979;&#x4E00;&#x751F;&#x3002; &#x5B66;&#x4E60; &#x5B66;&#x5982;&#x9006;&#x6C34;&#x884C;&#x821F;&#xFF0C;&#x4E0D;&#x8FDB;&#x5219;&#x9000;&#x3002; &#x611F;&#x8C22;&#x8001;&#x677F;&#x539F;&#x610F;&#x683D;&#x57F9;&#xFF0C;&#x8FD9;&#x4E2A;&#x5165;&#x884C;&#x673A;&#x4F1A;&#x6765;&#x4E4B;&#x4E0D;&#x6613;&#xFF0C;&#x7B97;&#x662F;&#x4E8B;&#x4E1A;&#x7684;&#x8F6C;&#x6298;&#x70B9;&#xFF0C;&#x6DF1;&#x77E5;&#x4E0E;&#x79D1;&#x73ED;&#x5927;&#x725B;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x8DDD;&#xFF0C;&#x6572;&#x8D77;&#x7B2C;&#x4E00;&#x884C;&#x5546;&#x4E1A;&#x4EE3;&#x7801;&#x5F00;&#x59CB;&#xFF0C;&#x5BF9;&#x81EA;&#x8EAB;&#x6280;&#x672F;&#x80FD;&#x529B;&#x80FD;&#x4E0D;&#x8DB3;&#x4EE5;&#x9002;&#x5E94;&#x672A;&#x6765;&#x7684;&#x591A;&#x7AEF;&#x53D8;&#x5316;&#xFF0C;&#x5B58;&#x5728;&#x6DF1;&#x6DF1;&#x7684;&#x62C5;&#x5FE7;&#x3002;&#x4E0B;&#x534A;&#x5E74;&#x88AB;&#x75AF;&#x4F20;&#x7684;&#x4E92;&#x8054;&#x7F51;&#x5BD2;&#x51AC;&#x6D88;&#x606F;&#xFF0C;&#x867D;&#x672A;&#x4EB2;&#x63A5;&#x89E6;&#x4F46;&#x5DF2;&#x4E0D;&#x660E;&#x89C9;&#x5389;&#xFF0C;&#x66F4;&#x52A0;&#x7126;&#x8651;&#x81EA;&#x5DF1;&#x6210;&#x957F;&#x5F97;&#x592A;&#x6162;&#x4E86;&#x3002; &#x4E8C;&#x3001;2019 &#x76EE;&#x6807; &#x4EFB;&#x52A1;&#x62C6;&#x5206; &#x8F93;&#x51FA;&#x81F3;&#x5C11; 100 &#x7BC7;&#x535A;&#x6587;&#xFF0C;&#x53D1;&#x5E03;&#x81F3;&#x672C;&#x535A;&#x5BA2;&#x53CA;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x3002; &#x5E73;&#x5747;&#x6BCF;&#x5468;&#x8F93;&#x51FA;&#x81F3;&#x5C11;&#x4E24;&#x7BC7;&#x6587;&#x7AE0;&#x3002; &#x638C;&#x63E1;&#x7406;&#x89E3;&#x5E38;&#x89C1;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x8F93;&#x51FA;&#x5B66;&#x4E60;&#x7B14;&#x8BB0; &#x5E73;&#x5747;&#x6BCF;&#x6708;&#x81F3;&#x5C11;&#x5B66;&#x4E60;&#x4E24;&#x79CD;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>随笔杂谈</category>
      </categories>
      <tags>
        <tag>编程随想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[redis 学习笔记 | 安装与启动]]></title>
    <url>%2F2019%2F01%2F01%2F008%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x4E0B;&#x8F7D;&#x5B98;&#x7F51;&#x5730;&#x5740;&#xFF1A;https://redis.io/ &#x76EE;&#x524D;&#x6700;&#x65B0;&#x7A33;&#x5B9A;&#x7248;&#x672C;&#x662F;&#xFF1A;redis-5.0.3 &#x4E0B;&#x8F7D;&#x94FE;&#x63A5;&#xFF1A;http://download.redis.io/releases/redis-5.0.3.tar.gz &#x5B98;&#x65B9;&#x5FEB;&#x901F;&#x5165;&#x95E8;&#x6587;&#x6863;&#xFF1A;https://redis.io/topics/quickstart &#x5982;&#x679C;&#x4E0D;&#x60F3;&#x5B89;&#x88C5; redis&#xFF0C;&#x5B98;&#x7F51;&#x63D0;&#x4F9B;&#x4E86;&#x4E2A;&#x7F51;&#x9875;&#x7248;&#x4F53;&#x9A8C;&#x6A21;&#x62DF;&#x5668;&#xFF1A;Web Redis &#x4E8C;&#x3001;&#x5B89;&#x88C5;&#x6B65;&#x9AA4; 1&#xFF1A; &#x672C;&#x6587;&#x5B89;&#x88C5;&#x73AF;&#x5883;&#x4E3A;&#xFF1A;CentOS Linux release 7.4.1708 (Core) &#x67E5;&#x770B; linux &#x7CFB;&#x7EDF;&#x7248;&#x672C;123cat /etc/redhat-release&#x6216;&#x8005;cat /proc/version &#x6B65;&#x9AA4; 2&#xFF1A; &#x5C06; gz &#x5B89;&#x88C5;&#x5305;&#x5728;/usr/&#x76EE;&#x5F55;&#x4E0B;&#x8FDB;&#x884C;&#x89E3;&#x538B;&#xFF1A; &#x89E3;&#x538B; redis &#x5B89;&#x88C5;&#x5305;1tar xvzf redis-stable.tar.gz &#x6B65;&#x9AA4; 3&#xFF1A; &#x7F16;&#x8BD1; &#x8FDB;&#x5165; redis &#x5B89;&#x88C5;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x6267;&#x884C;make&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF1A; &#x7F16;&#x8BD1; redis1make &#x7F16;&#x8BD1;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x51FA;&#x73B0;&#x4E0B;&#x9762;&#x7684;&#x4FE1;&#x606F;&#x63D0;&#x793A;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x5B89;&#x88C5;&#x6210;&#x529F;&#xFF1A; &#x7F16;&#x8BD1;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#x7684;&#x65E5;&#x5FD7;&#x63D0;&#x793A;12345678 CC redis-benchmark.o LINK redis-benchmark INSTALL redis-check-rdb INSTALL redis-check-aofHint: It&apos;s a good idea to run &apos;make test&apos; ;)make[1]: Leaving directory `/usr/redis-5.0.3/src&apos; &#x6B65;&#x9AA4;4&#xFF1A; &#x7F16;&#x8BD1;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x5728;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;&#x4E86;&#x4E00;&#x4E2A;src&#x6587;&#x4EF6;&#xFF0C;&#x8FDB;&#x5165;&#x6B64;&#x76EE;&#x5F55;&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#x64CD;&#x4F5C;&#xFF1A; &#x5B89;&#x88C5;redis12cd src/make install &#x63D0;&#x793A;&#x4E0B;&#x9762;&#x4FE1;&#x606F;&#xFF0C;&#x8868;&#x793A;&#x5B89;&#x88C5;&#x6210;&#x529F;&#xFF1A; &#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x7684;&#x65E5;&#x5FD7;&#x63D0;&#x793A;123456789 CC Makefile.depHint: It&apos;s a good idea to run &apos;make test&apos; ;) INSTALL install INSTALL install INSTALL install INSTALL install INSTALL install &#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x5728;src&#x76EE;&#x5F55;&#x4E0B;&#x770B;&#x5230;&#xFF1A;redis-server&#x548C;redis-cli&#x7B49;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x5728;/usr/local/bin/&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E0B;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x4E86;&#x4E0B;&#x9762;&#x8FD9;&#x4E9B;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF1A; redis &#x5B89;&#x88C5;&#x4E4B;&#x540E;&#x7684; src &#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x7ED3;&#x6784;12345redis-benchmark # Redis&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x542F;&#x52A8;&#x7A0B;&#x5E8F;redis-check-aof # Redis&#x5BA2;&#x6237;&#x7AEF;&#x64CD;&#x4F5C;&#x5DE5;&#x5177;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;telnet&#x6839;&#x636E;&#x5176;&#x7EAF;&#x6587;&#x672C;&#x534F;&#x8BAE;&#x6765;&#x64CD;&#x4F5C;redis-check-rdb # Redis&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;redis-cli # &#x6570;&#x636E;&#x4FEE;&#x590D;&#x5DE5;&#x5177;redis-server # &#x68C0;&#x67E5;&#x5BFC;&#x51FA;&#x5DE5;&#x5177; &#x6CE8;&#x610F;&#xFF1A; 1&#x3001;make &#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x5982;&#x679C;&#x62A5;&#x627E;&#x4E0D;&#x5230; cc &#x547D;&#x4EE4;&#x9519;&#xFF1A;/bin/sh: cc: command not found&#x4E0A;&#x9762;&#x7684;&#x9519;&#x8BEF;&#x63D0;&#x793A;&#x8868;&#x793A;&#x7CFB;&#x7EDF;&#x6CA1;&#x6709; gcc &#x7F16;&#x8BD1;&#x5668;&#xFF0C;&#x9700;&#x8981;&#x5B89;&#x88C5; gcc &#x7F16;&#x8BD1;&#x5668;&#xFF1A; yum install gcc 2&#x3001;&#x5B89;&#x88C5; gcc &#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x4E4B;&#x540E;&#xFF0C;&#x7EE7;&#x7EED;&#x51FA;&#x73B0;&#x4E0B;&#x9762;&#x9519;&#x8BEF;&#xFF1A;zmalloc.h:50:31: error: jemalloc/jemalloc.h: No such file or directory&#x5219;&#x9700;&#x8981;&#x5C06; make &#x547D;&#x4EE4;&#x6539;&#x4E3A; make MALLOC=libc &#x518D;&#x6267;&#x884C;&#x6216;&#x8005;&#x4F7F;&#x7528; make distclean &#x8FDB;&#x884C;&#x6E05;&#x7406;&#x518D;&#x6267;&#x884C; make &#x547D;&#x4EE4; &#x4E09;&#x3001;&#x542F;&#x52A8;&#x5728;src&#x76EE;&#x5F55;&#x4E0B;&#x5FC5;&#x987B;&#x5148;&#x542F;&#x52A8;&#x670D;&#x52A1;&#xFF1A; &#x542F;&#x52A8; redis1redis-server &#x7CFB;&#x7EDF;&#x63D0;&#x793A;&#x4E86; redis &#x542F;&#x52A8;&#x753B;&#x9762;&#xFF0C;&#x5373;&#x53EF;&#x8868;&#x793A;&#x542F;&#x52A8;&#x6210;&#x529F;&#xFF1A; redis &#x542F;&#x52A8;&#x65E5;&#x5FD7;12345678910111213141516171819202122232425262728[root@bogon src]# ./redis-server5688:C 27 Dec 2018 02:00:10.120 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo5688:C 27 Dec 2018 02:00:10.120 # Redis version=5.0.3, bits=64, commit=00000000, modified=0, pid=5688, just started5688:C 27 Dec 2018 02:00:10.120 # Warning: no config file specified, using the default config. In order to specify a config file use ./redis-server /path/to/redis.conf5688:M 27 Dec 2018 02:00:10.121 * Increased maximum number of open files to 10032 (it was originally set to 1024). _._ _.-``__ &apos;&apos;-._ _.-`` `. `_. &apos;&apos;-._ Redis 5.0.3 (00000000/0) 64 bit .-`` .-```. ```\/ _.,_ &apos;&apos;-._ ( &apos; , .-` | `, ) Running in standalone mode |`-._`-...-` __...-.``-._|&apos;` _.-&apos;| Port: 6379 | `-._ `._ / _.-&apos; | PID: 5688 `-._ `-._ `-./ _.-&apos; _.-&apos; |`-._`-._ `-.__.-&apos; _.-&apos;_.-&apos;| | `-._`-._ _.-&apos;_.-&apos; | http://redis.io `-._ `-._`-.__.-&apos;_.-&apos; _.-&apos; |`-._`-._ `-.__.-&apos; _.-&apos;_.-&apos;| | `-._`-._ _.-&apos;_.-&apos; | `-._ `-._`-.__.-&apos;_.-&apos; _.-&apos; `-._ `-.__.-&apos; _.-&apos; `-._ _.-&apos; `-.__.-&apos;5688:M 27 Dec 2018 02:00:10.122 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.5688:M 27 Dec 2018 02:00:10.122 # Server initialized5688:M 27 Dec 2018 02:00:10.122 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &apos;vm.overcommit_memory = 1&apos; to /etc/sysctl.conf and then reboot or run the command &apos;sysctl vm.overcommit_memory=1&apos; for this to take effect.5688:M 27 Dec 2018 02:00:10.122 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &apos;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&apos; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.5688:M 27 Dec 2018 02:00:10.122 * Ready to accept connections &#x6CE8;&#x610F;&#xFF1A;redis &#x670D;&#x52A1;&#x9ED8;&#x8BA4;&#x7AEF;&#x53E3;&#x662F;&#xFF1A;6379&#xFF0C;&#x6B64;&#x65F6;&#x8FDB;&#x7A0B;&#x4E00;&#x76F4;&#x505C;&#x7559;&#x5728;&#x4E86; redis &#x670D;&#x52A1;&#x754C;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x505C;&#x6B62;&#x5C31;&#x5F97;ctrl + C&#x5F3A;&#x884C;&#x7EC8;&#x6B62;&#x7A0B;&#x5E8F;&#x3002; &#x9A8C;&#x8BC1;&#x542F;&#x52A8;&#x662F;&#x5426;&#x6210;&#x529F;&#xFF1A;1&#x3001;&#x67E5;&#x770B;&#x662F;&#x5426;&#x6709;redis&#x670D;&#x52A1; &#xFF1A; ps -ef | grep redis2&#x3001;&#x67E5;&#x770B;&#x7AEF;&#x53E3;&#xFF1A;netstat -tunpl | grep 6379 &#x56DB;&#x3001;&#x8BBE;&#x7F6E;&#x540E;&#x53F0;&#x8FD0;&#x884C;&#x56DE;&#x5230; redis &#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x5728;&#x6B64;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x4F1A;&#x5B58;&#x5728;&#x4E00;&#x4E2A;redis.conf&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x8BBE;&#x7F6E; redis &#x670D;&#x52A1;&#x4E3A;&#x540E;&#x53F0;&#x542F;&#x52A8;&#xFF0C;&#x5C06;daemonize&#x7684;&#x5C5E;&#x6027;&#x7531;no&#x6539;&#x4E3A;yes&#xFF1A; redis &#x540E;&#x53F0;&#x542F;&#x52A8;&#x914D;&#x7F6E;&#x8BBE;&#x7F6E;123# By default Redis does not run as a daemon. Use &apos;yes&apos; if you need it.# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.daemonize yes &#x6CE8;&#x610F;&#xFF1A;&#x6BCF;&#x6B21;&#x4FEE;&#x6539;&#x5B8C;redis.conf&#x6587;&#x4EF6;&#x9700;&#x8981;&#x91CD;&#x542F; redis &#x5E76;&#x8BFB;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002; &#x4E94;&#x3001;&#x8BBE;&#x7F6E;&#x5FEB;&#x6377;&#x542F;&#x52A8;&#x5C06; redis &#x5B89;&#x88C5;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E2D;&#x7684;redis.conf&#x6587;&#x4EF6;&#x590D;&#x5236;&#x4E00;&#x4EFD;&#x5230;/etc/&#x76EE;&#x5F55;&#xFF1A; &#x590D;&#x5236;&#x4E00;&#x4EFD;&#x539F;&#x751F;&#x914D;&#x7F6E;&#x5230;&#x7CFB;&#x7EDF;&#x914D;&#x7F6E;&#x76EE;&#x5F55;1cp ./redis.conf /etc/ &#x8FDB;&#x5165;/usr/local/bin&#x76EE;&#x5F55;&#xFF0C;&#x542F;&#x52A8; redis &#x670D;&#x52A1;&#xFF1A; &#x542F;&#x52A8; redis12cd /usr/local/bin./redis-server /etc/redis.conf &#x5982;&#x679C;&#x542F;&#x52A8;&#x6210;&#x529F;&#xFF0C;&#x5219;&#x63D0;&#x793A;&#x4E0B;&#x9762;&#x4FE1;&#x606F;&#xFF1A; redis &#x542F;&#x52A8;&#x6210;&#x529F;&#x7684;&#x7CFB;&#x7EDF;&#x65E5;&#x5FD7;12345[root@bogon src]# cd /usr/local/bin/[root@bogon bin]# redis-server /etc/redis.conf5780:C 27 Dec 2018 02:28:34.575 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo5780:C 27 Dec 2018 02:28:34.576 # Redis version=5.0.3, bits=64, commit=00000000, modified=0, pid=5780, just started5780:C 27 Dec 2018 02:28:34.576 # Configuration loaded &#x516D;&#x3001;&#x67E5;&#x770B; redis &#x670D;&#x52A1;&#x542F;&#x52A8;&#x60C5;&#x51B5;&#x68C0;&#x67E5; redis &#x662F;&#x5426;&#x542F;&#x52A8;1ps -ef | grep redis &#x770B;&#x5230;&#x4E0B;&#x9762;&#x4FE1;&#x606F;&#x4E5F;&#x8868;&#x793A; redis &#x670D;&#x52A1;&#x542F;&#x52A8;&#x6210;&#x529F;&#xFF1A; redis &#x8FDB;&#x7A0B;&#x65E5;&#x5FD7;123[root@bogon bin]# ps -ef | grep redisroot 5781 1 0 02:28 ? 00:00:00 redis-server 127.0.0.1:6379root 5786 1229 0 02:29 pts/0 00:00:00 grep --color=auto redis &#x4E03;&#x3001;&#x5F00;&#x542F;&#x9632;&#x706B;&#x5899;&#x7AEF;&#x53E3;&#x5F00;&#x542F;&#x7AEF;&#x53E3;1234# &#x6C38;&#x4E45;&#x5F00;&#x542F; 6379 &#x7AEF;&#x53E3;firewall-cmd --zone=public --add-port=6379/tcp --permanent# &#x91CD;&#x542F;&#x7AEF;&#x53E3;firewall-cmd --reload &#x516B;&#x3001;&#x4F7F;&#x7528; redis-cli &#x8FDE;&#x63A5; redis &#x670D;&#x52A1;&#x5728;/usr/local/bin&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5B58;&#x5728; redis &#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF1A;redis-cli redis-cli &#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A;redis-cli -h &#x4E3B;&#x673A;IP -p &#x7AEF;&#x53E3;&#x53F7; -a &#x5BC6;&#x7801;&#x4F8B;&#xFF1A; redis-cli -h 127.0.0.1 -p 6379 -a root123 &#x4F7F;&#x7528;redis-cli&#x8FDE;&#x63A5; redis &#x670D;&#x52A1;&#xFF0C;&#x8FDB;&#x884C; ping-pong &#x6D4B;&#x8BD5;&#x53CA;&#x63D2;&#x5165; key-value &#x8FDB;&#x884C;&#x8FDB;&#x6D4B;&#x8BD5;&#xFF1A; &#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5; redis123456[root@bogon bin]# redis-cli -h 127.0.0.1 -p 6379127.0.0.1:6379&gt; set mykey abcOK127.0.0.1:6379&gt; get mykey&quot;abc&quot;127.0.0.1:6379&gt; shutdown &#x6CE8;&#x610F;&#xFF1A;redis-cli&#x8FDE;&#x63A5; redis &#x670D;&#x52A1;&#x6210;&#x529F;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x8FDB;&#x5165;&#x670D;&#x52A1; IP + &#x7AEF;&#x53E3;&#x7684;&#x547D;&#x4EE4;&#x63A7;&#x5236;&#x53F0;&#xFF0C;&#x505C;&#x6B62; redis &#x670D;&#x52A1;&#x547D;&#x4EE4;&#xFF1A;shutdown&#x9000;&#x51FA;&#x5F53;&#x524D;redis-cli&#x4E0E; redis &#x670D;&#x52A1;&#x8FDE;&#x63A5;&#x547D;&#x4EE4;&#xFF1A;quit &#x4E5D;&#x3001;&#x8BBE;&#x7F6E; redis &#x670D;&#x52A1;&#x5F00;&#x673A;&#x81EA;&#x542F;&#x52A8;&#x8BA9; redis &#x670D;&#x52A1;&#x5F00;&#x673A;&#x8FD0;&#x884C;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x6DFB;&#x52A0;&#x5230;rc.local&#x6587;&#x4EF6;&#xFF0C;&#x6216;&#x8005;&#x5C06;&#x5176;&#x6DFB;&#x52A0;&#x4E3A;&#x7CFB;&#x7EDF;&#x7684; service &#x670D;&#x52A1;&#x3002; 1. &#x914D;&#x7F6E; rc.local &#x6587;&#x4EF6; &#x672C;&#x6587;&#x4F7F;&#x7528;rc.local&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x547D;&#x4EE4;&#xFF1A; &#x914D;&#x7F6E; redis &#x542F;&#x52A8;&#x547D;&#x4EE4;&#x5230;&#x7CFB;&#x7EDF;&#x542F;&#x52A8;&#x6587;&#x4EF6;&#x5185;1echo &quot;/usr/local/bin/redis-server /etc/redis.conf&quot; &gt;&gt; /etc/rc.local 2. &#x914D;&#x7F6E;&#x5230; service &#x670D;&#x52A1; &#x914D;&#x7F6E;&#x5230;&#x7CFB;&#x7EDF;&#x670D;&#x52A1;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;&#xFF1A;&#x7CFB;&#x7EDF;&#x5F00;&#x673A;&#x542F;&#x52A8;&#x65F6;&#x4F1A;&#x53BB;&#x52A0;&#x8F7D;/etc/init.d/&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E0B;&#x9762;&#x7684;&#x6240;&#x6709;&#x811A;&#x672C;&#x6587;&#x4EF6;&#xFF0C;&#x901A;&#x5E38;&#x6BCF;&#x4E2A;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x4F1A;&#x81EA;&#x5B9A;&#x4E49;&#x5B9E;&#x73B0;&#x7A0B;&#x5E8F;&#x7684;&#x542F;&#x52A8;&#xFF1B;&#x82E5;&#x60F3;&#x5C06;&#x65B0;&#x7684;&#x7A0B;&#x5E8F;&#x5F00;&#x673A;&#x81EA;&#x542F;&#x52A8;&#xFF0C;&#x53EA;&#x9700;&#x5728;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x542F;&#x52A8;&#x7A0B;&#x5E8F;&#x7684;&#x811A;&#x672C;&#xFF0C;&#x7136;&#x540E;&#x8BBE;&#x7F6E;&#x76F8;&#x5E94;&#x542F;&#x52A8;&#x89C4;&#x5219;&#x5373;&#x53EF;&#x3002; &#x5982;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5728;/etc/init.d/&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E0B;&#xFF08;&#x548C;/etc/rc.d/init.d/&#x76EE;&#x5F55;&#x76F8;&#x540C;&#xFF09;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;redis&#x811A;&#x672C;&#xFF0C; &#x6BD4;&#x8F83;&#x65B9;&#x4FBF;&#x7684;&#x662F;&#xFF1A;&#x5728; redis &#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E0B;&#x7684;utils&#x76EE;&#x5F55;&#x4E0B;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#xFF1A;redis_init_script&#x53EF;&#x6267;&#x884C;&#x811A;&#x672C;&#xFF0C;&#x5C06;&#x5176;&#x62F7;&#x8D1D;&#x5230;/etc/init.d &#x4E0B;&#xFF0C;&#x5E76;&#x4FEE;&#x6539;&#x540D;&#x5B57;&#x4E3A;redis&#xFF1A; &#x590D;&#x5236; redis &#x542F;&#x52A8;&#x811A;&#x672C;1cp /usr/redis-5.0.3/utils/redis_init_script /etc/init.d/redis &#x5728;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x4E2D;&#x589E;&#x52A0;&#x542F;&#x52A8;&#x6CE8;&#x91CA;&#x4FE1;&#x606F;&#xFF08;&#x4E0B;&#x65B9;&#x7684;&#x6700;&#x540E;&#x4E24;&#x884C;&#xFF09;&#xFF1A; &#x589E;&#x52A0;&#x7CFB;&#x7EDF; chkconfig &#x6CE8;&#x91CA;123456#!/bin/sh## Simple Redis init.d script conceived to work on Linux systems# as it does use of the /proc filesystem.# chkconfig: 2345 90 10# description: Redis is a persistent key-value database &#x8BF4;&#x660E;&#xFF1A;redis &#x670D;&#x52A1;&#x5FC5;&#x987B;&#x5728;&#x8FD0;&#x884C;&#x7EA7; 2&#xFF0C;3&#xFF0C;4&#xFF0C;5 &#x4E0B;&#x88AB;&#x542F;&#x52A8;&#x6216;&#x5173;&#x95ED;&#xFF0C;&#x542F;&#x52A8;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x662F; 90&#xFF0C;&#x5173;&#x95ED;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x662F; 10&#x3002; &#x4FEE;&#x6539;&#x8BE5;&#x811A;&#x672C;&#x4E2D;CONF&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x4E3A;&#x672C;&#x5730;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF1A; &#x81EA;&#x5B9A;&#x4E49;&#x914D;&#x7F6E;&#x8DEF;&#x5F84;1CONF=&quot;/etc/redis.conf&quot; &#x914D;&#x7F6E;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x521D;&#x59CB;&#x5316;&#x53CA;&#x8BBE;&#x7F6E;&#x5F00;&#x673A;&#x81EA;&#x542F;&#xFF1A; &#x6388;&#x6743;&#x811A;&#x672C;&#x5E76;&#x8BBE;&#x7F6E;&#x5F00;&#x673A;&#x81EA;&#x542F;12chmod +x /etc/init.d/redischkconfig redis on chkconfig &#x5E38;&#x7528;&#x547D;&#x4EE4;12345678910111213141516chkconfig --list #&#x5217;&#x51FA;&#x6240;&#x6709;&#x7684;&#x7CFB;&#x7EDF;&#x670D;&#x52A1;chkconfig --add httpd #&#x589E;&#x52A0;httpd&#x670D;&#x52A1;chkconfig --del httpd #&#x5220;&#x9664;httpd&#x670D;&#x52A1;chkconfig --level httpd 2345 on #&#x8BBE;&#x7F6E;httpd&#x5728;&#x8FD0;&#x884C;&#x7EA7;&#x522B;&#x4E3A;2&#x3001;3&#x3001;4&#x3001;5&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x90FD;&#x662F;on&#xFF08;&#x5F00;&#x542F;&#xFF09;&#x7684;&#x72B6;&#x6001;chkconfig --list #&#x5217;&#x51FA;&#x7CFB;&#x7EDF;&#x6240;&#x6709;&#x7684;&#x670D;&#x52A1;&#x542F;&#x52A8;&#x60C5;&#x51B5;chkconfig --list mysqld #&#x5217;&#x51FA;mysqld&#x670D;&#x52A1;&#x8BBE;&#x7F6E;&#x60C5;&#x51B5;chkconfig --level 35 mysqld on #&#x8BBE;&#x5B9A;mysqld&#x5728;&#x7B49;&#x7EA7;3&#x548C;5&#x4E3A;&#x5F00;&#x673A;&#x8FD0;&#x884C;&#x670D;&#x52A1;&#xFF0C;--level 35&#x8868;&#x793A;&#x64CD;&#x4F5C;&#x53EA;&#x5728;&#x7B49;&#x7EA7;3&#x548C;5&#x6267;&#x884C;&#xFF0C;on&#x8868;&#x793A;&#x542F;&#x52A8;&#xFF0C;off&#x8868;&#x793A;&#x5173;&#x95ED;chkconfig mysqld on #&#x8BBE;&#x5B9A;mysqld&#x5728;&#x5404;&#x7B49;&#x7EA7;&#x4E3A;on&#xFF0C;&#x201C;&#x5404;&#x7B49;&#x7EA7;&#x201D;&#x5305;&#x62EC;2&#x3001;3&#x3001;4&#x3001;5&#x7B49;&#x7EA7;&#x7B49;&#x7EA7;0&#x8868;&#x793A;&#xFF1A;&#x8868;&#x793A;&#x5173;&#x673A;&#x7B49;&#x7EA7;1&#x8868;&#x793A;&#xFF1A;&#x5355;&#x7528;&#x6237;&#x6A21;&#x5F0F;&#x7B49;&#x7EA7;2&#x8868;&#x793A;&#xFF1A;&#x65E0;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x7684;&#x591A;&#x7528;&#x6237;&#x547D;&#x4EE4;&#x884C;&#x6A21;&#x5F0F;&#x7B49;&#x7EA7;3&#x8868;&#x793A;&#xFF1A;&#x6709;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x7684;&#x591A;&#x7528;&#x6237;&#x547D;&#x4EE4;&#x884C;&#x6A21;&#x5F0F;&#x7B49;&#x7EA7;4&#x8868;&#x793A;&#xFF1A;&#x4E0D;&#x53EF;&#x7528;&#x7B49;&#x7EA7;5&#x8868;&#x793A;&#xFF1A;&#x5E26;&#x56FE;&#x5F62;&#x754C;&#x9762;&#x7684;&#x591A;&#x7528;&#x6237;&#x6A21;&#x5F0F;&#x7B49;&#x7EA7;6&#x8868;&#x793A;&#xFF1A;&#x91CD;&#x65B0;&#x542F;&#x52A8; &#x6D4B;&#x8BD5;&#x811A;&#x672C;&#x8FD0;&#x884C;&#x60C5;&#x51B5;&#xFF0C;&#x542F;&#x52A8;&#xFF1A;service redis start&#xFF0C;&#x505C;&#x6B62;&#xFF1A;service redis stop redis &#x670D;&#x52A1;&#x811A;&#x672C;&#x542F;&#x52A8;&#x6216;&#x505C;&#x6B62;12service redis startservice redis stop &#x5341;&#x3001;&#x8BBE;&#x7F6E;&#x5BC6;&#x7801;1. &#x521D;&#x59CB;&#x5316; redis &#x5BC6;&#x7801; redis &#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x8F7B;&#x91CF;&#x7EA7;&#x7684;&#x8BA4;&#x8BC1;&#x65B9;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x7F16;&#x8F91;redis.conf&#x914D;&#x7F6E;&#x6765;&#x542F;&#x7528;&#x8BA4;&#x8BC1;&#x3002;&#x5728;redis.conf&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x627E;&#x5230;requirepass&#xFF1A; &#x5BC6;&#x7801;&#x914D;&#x7F6E;1# requirepass foobared &#x5C06;&#x5176;&#x6CE8;&#x91CA;&#x7B26;&#x53F7;&#x53BB;&#x6389;&#xFF0C;&#x5E76;&#x4FEE;&#x6539;&#x6210;&#x81EA;&#x5DF1;&#x7684;&#x5BC6;&#x7801;&#xFF0C;&#x5982;&#xFF1A;requirepass root123&#x5373;&#x53EF;&#x3002; &#x914D;&#x7F6E;&#x4FEE;&#x6539;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x542F;&#x52A8; redis &#x670D;&#x52A1;&#x3002; &#x6CE8;&#x610F;&#xFF1A; redis &#x67E5;&#x8BE2;&#x901F;&#x5EA6;&#x6781;&#x5FEB;&#xFF0C;auth&#x8FD9;&#x79CD;&#x547D;&#x4EE4;&#x6BCF;&#x79D2;&#x80FD;&#x5904;&#x7406; 10w &#x6B21;&#x4EE5;&#x4E0A;&#xFF0C;&#x7B80;&#x5355;&#x7684; redis &#x7684;&#x5BC6;&#x7801;&#x6781;&#x5BB9;&#x6613;&#x88AB;&#x653B;&#x51FB;&#x8005;&#x66B4;&#x7834;&#xFF0C;&#x56E0;&#x6B64;&#x5EFA;&#x8BAE;requirepass&#x81F3;&#x5C11;&#x957F;&#x5EA6; 20 &#x4F4D;&#x4EE5;&#x4E0A;&#xFF0C;&#x4E3A;&#x65B9;&#x4FBF;&#x53EF;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x4E32; sha256sum &#x547D;&#x4EE4;&#x751F;&#x6210;64&#x4F4D;&#x7684;&#x65E0;&#x7279;&#x6B8A;&#x5B57;&#x7B26;&#x4E32;&#x3002; 12$echo &quot;dfasdERQEWRQEW31341dfadsfadsf&quot; | sha256sumaf970b3691a0774b2a5adae1375e14cd9e5db3591564f0eb789c2324cc02362f 2. &#x4E0D;&#x91CD;&#x542F; redis &#x8BBE;&#x7F6E;&#x5BC6;&#x7801; &#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;requirepass&#x7684;&#x5BC6;&#x7801;&#xFF08;&#x5F53; redis &#x91CD;&#x542F;&#x65F6;&#x5BC6;&#x7801;&#x4F9D;&#x7136;&#x6709;&#x6548;&#xFF09;&#x3002; &#x8BBE;&#x7F6E;&#x5BC6;&#x7801;1redis 127.0.0.1:6379&gt; config set requirepass ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815 &#x67E5;&#x8BE2;&#x5BC6;&#x7801;&#xFF1A; &#x67E5;&#x8BE2;&#x5BC6;&#x7801;12redis 127.0.0.1:6379&gt; config get requirepass (error) ERR operation not permitted &#x5BC6;&#x7801;&#x9A8C;&#x8BC1;&#xFF1A; &#x5BC6;&#x7801;&#x9A8C;&#x8BC1;123redis 127.0.0.1:6379&gt; auth ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815 OK &#x518D;&#x6B21;&#x67E5;&#x8BE2;&#xFF1A; &#x67E5;&#x8BE2;&#x5BC6;&#x7801;&#x914D;&#x7F6E;123redis 127.0.0.1:6379&gt; config get requirepass 1) &quot;requirepass&quot; 2) &quot;ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815&quot; &#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x6CA1;&#x6DFB;&#x52A0;&#x5BC6;&#x7801;&#xFF0C;&#x90A3;&#x4E48; redis &#x91CD;&#x542F;&#x540E;&#xFF0C;&#x5BC6;&#x7801;&#x4F1A;&#x5931;&#x6548;&#x3002; 3. &#x767B;&#x9646;&#x5E26;&#x5BC6;&#x7801;&#x7684; redis &#x5728;&#x767B;&#x5F55;&#x7684;&#x65F6;&#x5019;&#x7684;&#x65F6;&#x5019;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#xFF1A; &#x767B;&#x5F55;&#x65F6;&#x9700;&#x8981;&#x5BC6;&#x7801;1redis-cli -h 127.0.0.1 -p 6379 -a ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815 &#x5148;&#x767B;&#x9646;&#x540E;&#x9A8C;&#x8BC1;&#xFF1A; &#x5148;&#x9A8C;&#x8BC1;&#x5BC6;&#x7801;&#x518D;&#x8FDE;&#x63A5;1234redis-cli -p 6379redis 127.0.0.1:6379&gt; auth ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815 OK AUTH&#x547D;&#x4EE4;&#x8DDF;&#x5176;&#x4ED6; redis &#x547D;&#x4EE4;&#x4E00;&#x6837;&#xFF0C;&#x662F;&#x4E0D;&#x52A0;&#x5BC6;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x80FD;&#x5B8C;&#x5168;&#x963B;&#x6B62;&#x653B;&#x51FB;&#x8005;&#x7A83;&#x53D6;&#x5BC6;&#x7801;&#x3002; &#x8BA4;&#x8BC1;&#x5C42;&#x7684;&#x76EE;&#x6807;&#x662F;&#x63D0;&#x4F9B;&#x591A;&#x4E00;&#x5C42;&#x7684;&#x8F7B;&#x91CF;&#x7EA7;&#x4FDD;&#x62A4;&#x3002;&#x5982;&#x679C;&#x9632;&#x706B;&#x5899;&#x6216;&#x8005;&#x7528;&#x6765;&#x4FDD;&#x62A4; redis &#x7684;&#x7CFB;&#x7EDF;&#x9632;&#x5FA1;&#x5916;&#x90E8;&#x653B;&#x51FB;&#x5931;&#x8D25;&#x7684;&#x8BDD;&#xFF0C;&#x5916;&#x90E8;&#x7528;&#x6237;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x901A;&#x8FC7;&#x5BC6;&#x7801;&#x8BA4;&#x8BC1;&#x8FD8;&#x662F;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE; redis &#x670D;&#x52A1;&#x3002; &#x5341;&#x4E00;&#x3001;&#x7981;&#x7528;&#x6216;&#x91CD;&#x547D;&#x540D;&#x5371;&#x9669;&#x547D;&#x4EE4;&#x653B;&#x51FB;&#x8005;&#x5E38;&#x5229;&#x7528;config / save&#x4E24;&#x4E2A;&#x547D;&#x4EE4;&#x5B8C;&#x6210; redis &#x653B;&#x51FB; &#xFF08;&#x56E0;&#x4E3A; redis &#x65E0;&#x7528;&#x6237;&#x6743;&#x9650;&#x9650;&#x5236;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x5EFA;&#x8BAE;&#x5BF9;&#x8FD9;&#x4E24;&#x4E2A;&#x5371;&#x9669;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x4F7F;&#x7528;rename&#x914D;&#x7F6E;&#x9879;&#x8FDB;&#x884C;&#x7981;&#x7528;&#x6216;&#x91CD;&#x547D;&#x540D;&#xFF0C;&#x8FD9;&#x6837;&#x5916;&#x90E8;&#x4E0D;&#x4E86;&#x89E3;&#x91CD;&#x547D;&#x540D;&#x89C4;&#x5219;&#x653B;&#x51FB;&#x8005;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x6267;&#x884C;&#x8FD9;&#x7C7B;&#x547D;&#x4EE4;&#x3002; &#x5728;redis.conf&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7981;&#x7528;FLUSHDB&#x3001;FLUSHALL&#x4E24;&#x4E2A;&#x547D;&#x4EE4;&#xFF0C;&#x6216;&#x8005;&#x91CD;&#x547D;&#x540D;CONFIG&#x3001;SHUTDOWN&#x547D;&#x4EE4;&#xFF08;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x540E;&#x7F00;&#xFF09;&#x3002;&#x8FD9;&#x6837; redis &#x670D;&#x52A1;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x53EA;&#x80FD;&#x8FD0;&#x884C;&#x91CD;&#x547D;&#x540D;&#x4E4B;&#x540E;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x4E0D;&#x80FD;&#x6267;&#x884C;&#x539F;&#x59CB;&#x7684;CONFIG&#x547D;&#x4EE4;&#xFF1A; &#x7981;&#x7528; redis &#x547D;&#x4EE4;1234567# It is also possible to completely kill a command by renaming it into# an empty string:#rename-command CONFIG CONFIG_b9fc8327c4dee7rename-command SHUTDOWN SHUTDOWN_b9fc8327c4dee7rename-command FLUSHDB &quot;&quot; #&#x7981;&#x7528;&#x6B64;&#x547D;&#x4EE4;rename-command FLUSHALL &quot;&quot; #&#x7981;&#x7528;&#x6B64;&#x547D;&#x4EE4; &#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;&#x91CD;&#x547D;&#x540D;&#x547D;&#x4EE4;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x542F;&#x52A8; redis &#x670D;&#x52A1;&#x62A5;&#x4E0B;&#x9762;&#x9519;&#x8BEF;&#xFF1A; &#x91CD;&#x547D;&#x540D;&#x547D;&#x4EE4;&#x4E4B;&#x540E;&#x63D0;&#x793A;&#x9519;&#x8BEF;123DENIED Redis is running protected mode because protected mode is enabled,no bind address was specified, no authentication password is requested to clients.In this mode connections are only accepted from the loopback interface. &#x53EF;&#x4EE5;&#x53C2;&#x89C1;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x89E3;&#x91CA;&#xFF1A;http://redis.io/topics/persistence 12345678910111213141516171819############################## APPEND ONLY MODE ################################ &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;Redis&#x662F;&#x5F02;&#x6B65;&#x7684;&#x628A;&#x6570;&#x636E;&#x5BFC;&#x51FA;&#x5230;&#x78C1;&#x76D8;&#x4E0A;&#x3002;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#x5728;&#x5F88;&#x591A;&#x5E94;&#x7528;&#x91CC;&#x5DF2;&#x7ECF;&#x8DB3;&#x591F;&#x597D;&#xFF0C;&#x4F46;Redis&#x8FDB;&#x7A0B;# &#x51FA;&#x95EE;&#x9898;&#x6216;&#x65AD;&#x7535;&#x65F6;&#x53EF;&#x80FD;&#x9020;&#x6210;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x4E22;&#x5931;(&#x8FD9;&#x53D6;&#x51B3;&#x4E8E;&#x914D;&#x7F6E;&#x7684;save&#x6307;&#x4EE4;)&#x3002;## AOF&#x662F;&#x4E00;&#x79CD;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x53EF;&#x9760;&#x7684;&#x66FF;&#x4EE3;&#x6301;&#x4E45;&#x5316;&#x6A21;&#x5F0F;&#xFF0C;&#x4F8B;&#x5982;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x6570;&#x636E;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x7B56;&#x7565;&#xFF08;&#x53C2;&#x89C1;&#x540E;&#x9762;&#x7684;&#x914D;&#x7F6E;&#xFF09;# &#x5728;&#x9047;&#x5230;&#x50CF;&#x670D;&#x52A1;&#x5668;&#x65AD;&#x7535;&#x6216;&#x5355;&#x5199;&#x60C5;&#x51B5;&#x4E0B;Redis&#x81EA;&#x8EAB;&#x8FDB;&#x7A0B;&#x51FA;&#x95EE;&#x9898;&#x4F46;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4ECD;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#x7B49;&#x7A81;&#x53D1;&#x4E8B;&#x4EF6;&#x65F6;&#xFF0C;Redis# &#x80FD;&#x53EA;&#x4E22;&#x5931;1&#x79D2;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x3002;## AOF&#x548C;RDB&#x6301;&#x4E45;&#x5316;&#x80FD;&#x540C;&#x65F6;&#x542F;&#x52A8;&#x5E76;&#x4E14;&#x4E0D;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#x3002;# &#x5982;&#x679C;AOF&#x5F00;&#x542F;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x542F;&#x52A8;&#x65F6;Redis&#x5C06;&#x52A0;&#x8F7D;AOF&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x66F4;&#x80FD;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x7684;&#x53EF;&#x9760;&#x6027;&#x3002;## &#x8BF7;&#x67E5;&#x770B; http://redis.io/topics/persistence &#x6765;&#x83B7;&#x53D6;&#x66F4;&#x591A;&#x4FE1;&#x606F;.appendonly no# &#x7EAF;&#x7D2F;&#x52A0;&#x6587;&#x4EF6;&#x540D;&#x5B57;&#xFF08;&#x9ED8;&#x8BA4;&#xFF1A;&quot;appendonly.aof&quot;&#xFF09;appendfilename &quot;appendonly.aof&quot; &#x628A;&#x914D;&#x7F6E;&#x6539;&#x4E86;appendonly&#x7684; yes &#x6539;&#x4E3A; no&#xFF0C;&#x91CD;&#x542F; redis &#x670D;&#x52A1;&#x5373;&#x53EF;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[优秀博客集锦]]></title>
    <url>%2F2018%2F12%2F22%2F002%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x611F;&#x8C22;&#x4ED6;&#x4EEC;&#x521D;&#x8BC6;&#x535A;&#x5BA2; 2017 &#x5E74; 10 &#x6708;&#x4E4B;&#x540E;&#xFF0C;&#x6B63;&#x5F0F;&#x63A5;&#x89E6;&#x7F16;&#x7A0B;&#xFF0C;&#x627E;&#x8D44;&#x6599;&#x7684;&#x552F;&#x4E00;&#x5165;&#x53E3;&#x5C31;&#x662F;&#x67D0;&#x5EA6;&#xFF0C;&#x671F;&#x95F4;&#x5C31;&#x53D1;&#x73B0;&#x4E0D;&#x5C11;&#x9AD8;&#x8D28;&#x91CF;&#x7684;&#x4F18;&#x79C0;&#x535A;&#x6587;&#xFF0C;&#x4E8E;&#x662F;&#x8111;&#x5B50;&#x91CC;&#x6709;&#x4E86;&#x535A;&#x5BA2;&#x7684;&#x6837;&#x5B50;&#x3002;&#x4ECE;&#x6700;&#x5F00;&#x59CB;&#x7684; CSDN&#x3001;&#x535A;&#x5BA2;&#x56ED;&#x7B49;&#x5E73;&#x53F0;&#x5230;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#xFF0C;&#x671F;&#x95F4;&#x770B;&#x5230;&#x6280;&#x672F;&#x6587;&#x7AE0;&#x7684;&#x884D;&#x751F;&#x54C1;&#xFF1A;gitBook&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#x77E5;&#x9053;&#x4E86;&#x5168;&#x7403;&#x6700;&#x5927;&#x7684;&#x540C;&#x6027;&#x4EA4;&#x53CB;&#x5E73;&#x53F0;&#x3002; &#x6BCF;&#x770B;&#x5230;&#x4F18;&#x79C0;&#x7CBE;&#x81F4;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x9891;&#x9891;&#x7FA1;&#x6155;&#x4F69;&#x670D;&#xFF0C;&#x81EA;&#x5DF1;&#x4E5F;&#x60F3;&#x6A21;&#x4EFF;&#x7740;&#x505A;&#x4E00;&#x4E2A;&#x3002; &#x8FD8;&#x6CA1;&#x5165;&#x95E8;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x60F3;&#x5EFA;&#x535A;&#x5BA2;&#x5374;&#x5B8C;&#x5168;&#x4E0D;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x4E0B;&#x624B;&#xFF0C;&#x53EA;&#x4E86;&#x89E3;&#x4E2A;&#x5927;&#x6982;&#xFF1A; &#x9996;&#x5148;&#x9700;&#x8981;&#x82B1;&#x94B1;&#x4E70;&#x4E2A;&#x6216;&#x8005;&#x79DF;&#x4E2A;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x7136;&#x540E;&#x8981;&#x641E;&#x4E2A;&#x535A;&#x5BA2;&#x7684;&#x524D;&#x7AEF;&#x548C;&#x7BA1;&#x7406;&#x540E;&#x53F0;&#xFF0C;&#x518D;&#x7136;&#x540E;&#x662F;&#x90E8;&#x7F72;&#xFF0C;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#x642D;&#x5EFA;&#x4E86;&#x8981;&#x6709;&#x8F93;&#x51FA;&#xFF0C;&#x4E0D;&#x7136;&#x5EFA;&#x7740;&#x73A9;&#x4E48;&#x3002;&#x5BF9;&#x5F53;&#x65F6;&#x7684;&#x5EFA;&#x535A;&#x5BA2;&#x6D41;&#x7A0B;&#x7684;&#x8BA4;&#x77E5;&#x8BA9;&#x81EA;&#x5DF1;&#x6709;&#x4E86;&#x653E;&#x5F03;&#x7684;&#x60F3;&#x6CD5;&#x3002; &#x642D;&#x5EFA;&#x8D77;&#x6765; &#x6700;&#x8FD1;&#x8D8A;&#x6765;&#x8D8A;&#x61D2;&#x764C;&#x72AF;&#x4E86;&#x1F609;&#xFF0C;&#x7EC6;&#x8BF4;&#x8D77;&#x6765;&#x662F;&#x8FD9;&#x4E24;&#x4EF6;&#x4E8B;&#x60C5;&#xFF1A; &#x6700;&#x8FD1;&#x5728;&#x627E;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x8D44;&#x6599;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53D1;&#x73B0;&#x8BB8;&#x591A;&#x535A;&#x6587;&#x7F51;&#x5740;&#x7684;&#x540E;&#x7F00;&#x90FD;&#x662F;github.io&#xFF0C;&#x7FA1;&#x6155; + &#x656C;&#x4F69; = &#x8DC3;&#x8DC3;&#x6B32;&#x8BD5;&#xFF0C;&#x5C24;&#x5176;&#x662F;Jacksgong/Blog&#x535A;&#x5BA2;&#x5BF9;&#x6211;&#x7684;&#x89E6;&#x52A8;&#xFF0C;&#x5F88;&#x60CA;&#x8BB6;&#x4E8E;&#x4E3A;&#x4F55;&#x5982;&#x6B64;&#x5E72;&#x51C0;&#x4F18;&#x96C5;&#x3002; &#x4F7F;&#x7528;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x9ED8;&#x8BA4;&#x7684;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x6392;&#x7248;&#x6587;&#x7AE0;&#xFF0C;&#x60F3;&#x8981;&#x597D;&#x770B;&#x5F97;&#x5C0F;&#x5FC3;&#x7FFC;&#x7FFC;&#x6BD4;&#x8F83;&#x82B1;&#x7CBE;&#x529B;&#xFF0C;&#x4E8E;&#x662F;&#x627E;&#x4E86;&#x4E9B;&#x8D44;&#x6599;&#x641E;&#x4E86;&#x4E2A;&#x6D41;&#x7A0B;&#x5316;&#x7684;&#x56FE;&#x6587;&#x6392;&#x7248;&#xFF1A;&#x9AD8;&#x6548;&#x5730;&#x4E00;&#x952E;&#x56FE;&#x6587;&#x6392;&#x7248;&#xFF0C;&#x867D;&#x7136;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5DF2;&#x7ECF;&#x5F88;&#x5B9E;&#x7528;&#x65B9;&#x4FBF;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E2A;&#x5C0F; bug&#xFF1A;&#x516C;&#x4F17;&#x53F7;&#x5BF9;&#x5217;&#x8868;&#x6837;&#x5F0F;&#x4E0D;&#x6E32;&#x67D3;&#xFF0C;&#x6240;&#x4EE5;&#x6BCF;&#x6B21;&#x8FD8;&#x5F97;&#x624B;&#x52A8;&#x8C03;&#x8BD5;&#xFF0C;&#x6709;&#x79CD;&#x8D39;&#x529B;&#x4E0D;&#x8BA8;&#x597D;&#x7684;&#x611F;&#x89C9;&#x3002; &#x60F3;&#x60F3;&#x73B0;&#x5728;&#x81EA;&#x5DF1;&#x90FD;&#x662F;&#x733F;&#x4E86;&#xFF0C;&#x600E;&#x4E48;&#x4E5F;&#x5F97;&#x641E;&#x4E2A;&#x535A;&#x5BA2;&#x5427;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x6709;&#x4E86;&#x73B0;&#x5728;&#x8FD9;&#x4E2A;woodwhale&#x2019;s blog&#x3002; &#x611F;&#x8C22;&#x4F17;&#x5927;&#x4F6C;&#x7684;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x6559;&#x7A0B;&#x3002; &#x5982;&#x679C;&#x6709;&#x4EFB;&#x4F55;&#x95EE;&#x9898;&#xFF0C;&#x8BF7;&#x90AE;&#x4EF6;&#x8054;&#x7CFB;&#x6216;&#x8005;&#x5173;&#x6CE8; &#x6728;&#x9CB8;&#x9C7C;&#x7559;&#x8A00;&#x5373;&#x53EF;&#xFF0C;&#x6B22;&#x8FCE;&#x4EA4;&#x6D41;&#x3002; &#x4E8C;&#x3001;&#x8F83;&#x4E2A;&#x6027;&#x5316;&#x7684;&#x535A;&#x5BA2; &#x5185;&#x542B;&#x4E00;&#x4E9B;&#x642D;&#x5EFA;&#x535A;&#x5BA2;&#x6559;&#x7A0B;&#xFF0C;&#x503C;&#x5F97;&#x5B66;&#x4E60;&#x3002; reuixiy Oyohyee&#x2019;s Blog Felix BanbanRamble &#x5170;&#x5DDE;&#x5C0F;&#x7EA2;&#x9E21; &#x5218;&#x5FD7;&#x8FDB;&#x5B9E;&#x9A8C;&#x5BA4; ChungZH&#x2019;s Blog asdfv1929 &#x2018;s Home loremwalker &#x5076;&#x53D1;&#x73B0; asdfv1929 &#x2018;s Home Hexo &#x4E3B;&#x9898;&#x53CA;&#x63D2;&#x4EF6; melody&#x4E3B;&#x9898; Hexo &#x6807;&#x7B7E;&#x4E91;&#x63D2;&#x4EF6; &#x4E09;&#x3001;Java &#x535A;&#x5BA2; &#x9AD8;&#x8D28;&#x91CF;&#x535A;&#x6587;&#x3002; &#x7EAF;&#x6D01;&#x7684;&#x5FAE;&#x7B11; Jacksgong/Blog &#x7334;&#x5B50;007 &#x5C0F;&#x80E1;&#x5B50;&#x54E5; CodeSheep &#xB7; &#x7A0B;&#x5E8F;&#x7F8A; &#x561F;&#x561F;&#x72EC;&#x7ACB;&#x535A;&#x5BA2; HollisChuang&#x2019;s Blog &#x56DB;&#x3001;&#x5176;&#x4ED6;&#x9AD8;&#x8D28;&#x91CF;&#x535A;&#x5BA2; &#x9AD8;&#x8D28;&#x91CF;&#x535A;&#x6587;&#x3002; &#x524D;&#x7AEF; Ryan Yang &#x5ED6;&#x96EA;&#x5CF0;&#x7684;&#x5B98;&#x65B9;&#x7F51;&#x7AD9; &#x5F20;&#x946B;&#x65ED;-&#x946B;&#x7A7A;&#x95F4;-&#x946B;&#x751F;&#x6D3B; CSS&#x9B54;&#x6CD5; &#x4E91;&#x5E93;&#x7F51; Legend of WolfX lien&#x7684;&#x77E5;&#x8BC6;&#x5E93; &#x55B5;&#x5BB9; &#x6280;&#x672F; &#x9177;&#x58F3; &#x962E;&#x4E00;&#x5CF0;&#x7684;&#x7F51;&#x7EDC;&#x65E5;&#x5FD7; &#x5218;&#x672A;&#x9E4F; | Mind Hacks &#x738B;&#x767B;&#x79D1;-DK&#x535A;&#x5BA2; &#x5C0F;&#x80E1;&#x5B50;&#x54E5; &#x8766;&#x7C73;&#x902E;&#x5BC4; &#x516B;&#x6212;&#x7684;blog Fooleap&#x2019;s Blog &#x4E91;&#x98CE;&#x7684; BLOG &#x90D1;&#x6C38;&#x5DDD; &#x5927;&#x5E2D;&#x7684;&#x535A;&#x5BA2; LEONA+ bootdo itcodai &#x5FA1;&#x98CE;&#x5927;&#x4E16;&#x754C; He Tao&#x535A;&#x5BA2; &#x5B66;&#x800C;&#x65F6;&#x563B;&#x4E4B; | &#x7528;&#x7406;&#x5DE5;&#x79D1;&#x601D;&#x7EF4;&#x7406;&#x89E3;&#x4E16;&#x754C; &#x5C0F;&#x521B;&#x4F5C; cuzz&#x2019;s blog Tim&#x2019;s blog youmeek &#x90B1;&#x627F;&#x4F73;&#x7684;&#x6280;&#x672F;&#x535A;&#x5BA2; &#x66AE;&#x5149;&#x535A;&#x5BA2; bbsmax &#x6B6A;&#x9EA6;&#x535A;&#x5BA2; &#x718A;&#x732B;&#x5927;&#x4ED9;&#x6280;&#x672F;&#x535A;&#x5BA2; &#x674E;&#x5FB7;&#x6D9B;&#x535A;&#x5BA2; &#x5927;&#x9E4F;&#x5FD7; qinyu-&#x7B80;&#x4E66; ThoughtWorks&#x4E2D;&#x56FD;-&#x77E5;&#x4E4E; &#x8001;&#x7F57;&#x7684;Android&#x4E4B;&#x65C5; &#x5F53;&#x7136;&#x6211;&#x5728;&#x626F;&#x6DE1; beyond the void &#x7CFB;&#x7EDF;&#x6280;&#x672F;&#x975E;&#x4E1A;&#x4F59;&#x7814;&#x7A76; &#x8BB8;&#x5F0F;&#x4F1F;&#x7684;&#x4E2A;&#x4EBA;&#x7A7A;&#x95F4; &#x7EA2;&#x85AF; hzwer &#x65F6;&#x9E4F;&#x4EAE;&#x7684;blog &#x897F;&#x67AB;&#x91CC;&#x535A;&#x5BA2; &#x5F20;&#x6208;&#x535A;&#x5BA2; &#x6280;&#x672F;&#x5B85; &#x77E5;&#x5E93;&#x5427; &#x6A58;&#x5B50;&#x4E66; &#x795E;&#x4EE3;&#x7DBA;&#x51DC; ThoughtWorks&#x6D1E;&#x89C1; &#x4E0D;&#x53D1;&#x5149;&#x7684;&#x535A;&#x5BA2; &#x8FDC;&#x5B50; &#x865E;&#x53CC;&#x9F50;&#x7684;&#x535A;&#x5BA2; &#x8FD9;&#x4E2A;&#x7537;&#x4EBA;&#x6765;&#x81EA;&#x4E09;&#x4F53; &#x521D;&#x5FC3; &#x661F;&#x5C18;&#x72EC;&#x594F;&#x66F2; Xuanwo&#x2019;s Blog Fang &#x5927;&#x7231; &#x674E;&#x9633;&#x826F;&#x535A;&#x5BA2; forestli webzhao &#x5341;&#x5E74;&#x8E2A;&#x8FF9;&#x7684;&#x535A;&#x5BA2; farbox &#x4EBA;&#x6708;&#x795E;&#x8BDD;&#x7684;&#x535A;&#x5BA2; M0rk&#x2019;s Bolg &#x7231;&#x9177; &#x795E;&#x519C;&#x6C11;&#x535A;&#x5BA2; Developer Center &#x9773;&#x95EF;&#x535A;&#x5BA2; &#x542F;&#x5149;&#x535A;&#x5BA2; &#x9EC4;&#x5175;&#x7684;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2; &#x4F24;&#x901D;&#x7684;&#x5B89;&#x8BE6; &#x4E50;&#x9B42;a&#x7684;&#x535A;&#x5BA2; &#x5173;&#x6CE8;&#x7535;&#x8111;&#x77E5;&#x8BC6;&#x4E0E;&#x6280;&#x672F;&#x5E94;&#x7528;_&#x7A46;&#x7AE5;&#x535A;&#x5BA2; &#x679C;&#x4EC1;&#x535A;&#x5BA2; aneasystone&#x2019;s blog &#x4E0D;&#x6B7B;&#x9E1F; &#x67D0;&#x5B66;&#x59D0; Diggzhang &#x6398;&#x5BA2;&#x5F20; &#x5B66;&#x4E60;&#xFF0C;&#x5DE5;&#x4F5C;&#x5907;&#x5FD8;&#x5F55;-DonCui &#x5C48;&#x5B9A;&#x2019;s Blog &#x6590;&#x6590;&#x306E;Blog &#x67F3;&#x5A7C; &#x306E; blog &#x6CCA;&#x6D6E;&#x8BF4; DragonYuan - &#x8881;&#x5B9D;&#x9F99; tomxin codingXiaxw&#x2019;s blog &#x94C1;&#x857E;&#x7684;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2; &#x201C;&#x5730;&#x74DC;&#x54E5;&#x201D;&#x535A;&#x5BA2;&#x7F51; &#x7801;&#x733F;&#x540C;&#x5B66; &#x6DF1;&#x5EA6;&#x5F00;&#x6E90; code123 &#x5B9D;&#x5B9D;&#x5DF4;&#x58EB; SD.Team &#x859B;&#x5F6C;&#x7684;&#x535A;&#x5BA2; Ted&#x2019;s Blog david Johnson Zhou &#x79CB;&#x8FC7;&#x51AC;&#x6F2B;&#x957F; &#x5E05;&#x866B;&#x54E5;&#x7684;&#x535A;&#x5BA2; Captain Cool&#x7684;BLOG zejian&#x7684;&#x535A;&#x5BA2; &#x674E;&#x5C0F;&#x6B66; flyne SilverLining&#x2019;s Blog dongcoder freebuf m_buddy&#x7684;&#x535A;&#x5BA2; &#x8FBE;&#x9F99; &#x88AB;&#x9057;&#x5FD8;&#x7684;&#x535A;&#x5BA2; &#x9648;&#x658C;&#x5F6C;&#x7684;&#x6280;&#x672F;&#x535A;&#x5BA2; &#x680B;&#x54E5;&#x7684;&#x535A;&#x5BA2; Java &#x6280;&#x672F;&#x9A7F;&#x7AD9; &#x65B9;&#x817E;&#x98DE; VZ&#x2019;s Blog &#x67F3;&#x4F1F;&#x536B;/&#x8001;&#x536B;/Way Lau&#x2019;s Personal Site &#x5B89;&#x9759;&#x7684;boy &#x8001;&#x9AD8;&#x7684;&#x6280;&#x672F;&#x535A;&#x5BA2; &#x5218;&#x535A;&#x5E73;&#x7684;&#x90E8;&#x843D;&#x683C; &#x5434;&#x660A;&#x535A;&#x5BA2; &#x6E05;&#x98CE;&#x4E0D;&#x8BC6;&#x5B57; &#x5C0F;&#x7C73;&#x7B14;&#x8BB0; &#x9AD8;&#x660E;&#x98DE; &#x8001;D&#x535A;&#x5BA2; Finally M&amp;M KayleZhuang &#x5E73;&#x51E1;&#x4E4B;&#x8DEF; Jark&#x2019;s Blog &#x9759;&#x6C34;&#x6F5C;&#x6D41; IT&#x4E0D;&#x5012;&#x7FC1; JerryQu &#x7684;&#x5C0F;&#x7AD9; Rocko&#x2019;s blog &#x4E00;&#x5317;&#x2019;s blog @jianhua.cheng CoLaBug GAVIN LEE-&#x674E;&#x5927;&#x5934;&#x7684;&#x751F;&#x6D3B;&#x5C0F;&#x7AD9; &#x80E1;&#x4E1C;&#x4E1C;&#x535A;&#x5BA2; FOX-JIMMY &#x2018;S BLOG. IT&#x8303;&#x513F; DongSheng&#x2019;s Blog jin-yang &#x55DC;&#x8840;&#x661F;&#x7A7A;earth ETRD&#x535A;&#x5BA2; Never_yu&#x2019;s blog &#x98DE;&#x6C61;&#x718A; Format&#x2019;s Notes &#x5C0F;&#x571F;&#x5200; &#x98CE;&#x96EA;&#x4E4B;&#x9685; &#x3BB;-calculus zhuweisky idea&#x2019;s web AFAIK &#x5D14;&#x6DFB;&#x7FFC; &#xA7; &#x7FFC;&#x82E5;&#x5782;&#x5929;&#x4E4B;&#x4E91; &#x67D0;&#x5C9B; matrix67 A Geek&#x2019;s Page &#x6865;&#x5FC3;&#x535A;&#x5BA2; / Blog Chengwei&#x2019;s Words &#x67F4;&#x5C11;&#x9E4F;&#x7684;&#x5B98;&#x65B9;&#x7F51;&#x7AD9; &#x67DA;&#x5466;&#x67DA; &#x5927;&#x53D1;&#x8D3C;&#x5FD7; &#x601D;&#x7EEA;&#x7684;&#x7A7A;&#x4E2D;&#x751F;&#x6D3B; c0smx &#x9759;&#x89C5;-&#x5D14;&#x5E86;&#x624D;&#x7684;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2; java&#x5C0F;&#x5F3A; blog.xdite.net Seven&#x3001;love | &#x67D2;&#x7231;-&#x9648;&#x5C0F;&#x519B;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2; hexiangyu minghe boyux &#x4E50;&#x610F;&#x5206;&#x4EAB; &#x95EA;&#x7535;&#x7AD9;&#x535A;&#x5BA2; &#x9B54;&#x5E06;&#x535A;&#x5BA2; &#x5B57;&#x6BCD;&#x54E5;&#x535A;&#x5BA2; ios VinnyXiong&#x2019;s Notes bang&#x2019;s blog &#x5176;&#x4ED6; &#x7F16;&#x7A0B;&#x968F;&#x60F3; &#x7B28;&#x65B9;&#x6CD5;&#x5B66;&#x5199;&#x4F5C; &#x9B54;&#x6CD5;&#x6708;&#x997C; &#x5F20;&#x5BB4;&#x7684;&#x535A;&#x5BA2; easycolor &#x4E1A;&#x4F59;Linux&#x7BA1;&#x7406;&#x5458; &#x4F18;&#x79C0;&#x535A;&#x5BA2; &#x5C0F;&#x8D56;&#x5B50;&#x7684;&#x82F1;&#x56FD;&#x751F;&#x6D3B;&#x548C;&#x8D44;&#x8BAF; &#x8BBE;&#x8BA1;&#x8FBE;&#x4EBA; &#x4E50;&#x8F6F;&#x535A;&#x5BA2; Nchyn&#x2019;sBlog &#x5B5F;&#x5764;&#x535A;&#x5BA2; &#x83DC;&#x9E1F;&#x535A;&#x5BA2; &#x6A31;&#x82B1;&#x5E84;&#x7684;&#x767D;&#x732B; jwcyber FIFI DESIGN &#x5929;&#x7F18;&#x535A;&#x5BA2; &#x9648;&#x6653;&#x732B; &#x5C3C;&#x53E4;&#x62C9;&#x65AF;.&#x8D75;&#x56DB; &#x4E1C;&#x4E1C;&#x2019;s Blog &#x9A6C;&#x6D2A;&#x98DE;&#x535A;&#x5BA2; &#x4E09;&#x53D4;&#x5E26;&#x4F60;&#x770B;&#x4E16;&#x754C; &#x5C0F;&#x4F1F;&#x535A;&#x5BA2; &#x98DE;&#x7FBD;&#x535A;&#x5BA2; Accesser &#x975E;&#x6280;&#x672F; &#x7A0B;&#x5FC3;&#x8BDA;&#x610F; &#x8001;&#x8BB0;&#x5F55; &#x8BB0;&#x5F55;&#x7247;&#x5929;&#x5730; &#x76D7;&#x706B;&#x7EAA;&#x5F55;&#x7247; &#x6167;&#x773C; Wisdom Eyes &#x534A;&#x7701;&#x5802; Junjun&#x2019;s Home &#x4E0D;&#x8BB8;&#x8054;&#x60F3; &#x8BFB;&#x4E66;&#x3001;&#x601D;&#x8003;&#x3001;&#x751F;&#x6D3B; Chun Tian (binghe) - &#x51B0;&#x6CB3; &#x51E4; &#x671D;&#x5915;&#x718A; &#x4E0E;&#x4F73;&#x671F;&#x7684;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2; &#x9AD8;&#x660E;&#x677E;&#x535A;&#x5BA2; Linux&#x8FD0;&#x7EF4;&#x7B14;&#x8BB0; &#x7EA6;&#x7FF0;&#x63D0;&#x6258;&#x535A;&#x5BA2; &#x4E94;&#x3001;&#x4FE1;&#x606F;&#x8D44;&#x6E90; Fadeer&#x7684;&#x65E5;&#x5FD7; hellogithub &#x516D;&#x3001;&#x5BFC;&#x822A;&#x5927;&#x5168; &#x300A;&#x540E;&#x7AEF;&#x67B6;&#x6784;&#x5E08;&#x6280;&#x672F;&#x56FE;&#x8C31;&#x300B; &#x524D;&#x7AEF;&#x9762;&#x8BD5;&#x4E4B;&#x9053; how2j.cn &#x7F16;&#x7A0B;&#x5C0F;&#x6280;&#x5DE7; Developer Roadmap - &#x7F51;&#x7EDC;&#x5F00;&#x53D1;&#x8005;&#x7684;&#x8DEF;&#x7EBF;&#x56FE; &#x4F18;&#x79C0;IT&#x6280;&#x672F;&#x6587;&#x7AE0;&#x96C6;(&#x6700;&#x65B0;)(&#x9AD8;&#x8D28;&#x91CF;) &#x5F00;&#x6E90;&#x6700;&#x524D;&#x7EBF;(github &#x6BCF;&#x6708;&#x6700; star &#x9879;&#x76EE;&#x6392;&#x884C;&#x699C;) Github&#x6700;&#x706B;&#x5F00;&#x6E90;&#x9879;&#x76EE; &#x5370;&#x8BB0;&#x4E2D;&#x6587; &#x5929;&#x5929;&#x7F51;&#x7AD9;-&#x6280;&#x672F;&#x6559;&#x7A0B; &#x6709;&#x54EA;&#x4E9B;&#x503C;&#x5F97;&#x5173;&#x6CE8;&#x7684;&#x6280;&#x672F;&#x535A;&#x5BA2;&#xFF08;Java&#x7BC7;&#xFF09; sojson&#x5728;&#x7EBF;&#x5DE5;&#x5177; MDN Web &#x6587;&#x6863; &#x524D;&#x7AEF;&#x7F8E; &#x4F18;&#x79C0;&#x4E2A;&#x4EBA;&#x72EC;&#x7ACB;&#x535A;&#x5BA2;&#x5BFC;&#x822A; Android &#x5F00;&#x6E90;&#x9879;&#x76EE;&#x96C6;&#x5408; &#x6280;&#x672F;&#x5B85;&#x5FC5;&#x5907;&#x5BFC;&#x822A; AWS ucdchina&#x7F51;&#x5740;&#x5BFC;&#x822A; &#x524D;&#x7AEF;&#x5F00;&#x53D1;&#x535A;&#x5BA2; Mybatis-Plus drp&#x7CFB;&#x7EDF; jsonapi &#x5728;&#x7EBF;&#x5DE5;&#x5177; - &#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x5DE5;&#x5177;&#x7BB1; &#x6781;&#x5BA2;&#x5BFC;&#x822A; &#x8C37;&#x6B4C;&#x5B66;&#x672F;&#x955C;&#x50CF;_Google&#x5B66;&#x672F;&#x641C;&#x7D22;&#x5BFC;&#x822A; &#x4E09;&#x65FA; - &#x7A0B;&#x5E8F;&#x5458;&#x5782;&#x76F4;&#x5BFC;&#x822A; Spring Security Programming Tutorials and Source Code Examples &#x524D;&#x7AEF;&#x91CC; waylau &#x4F60;&#x79BB;BAT&#x4E4B;&#x95F4;&#xFF0C;&#x53EA;&#x5DEE;&#x8FD9;&#x4E00;&#x5957;Java&#x9762;&#x8BD5;&#x9898;&#x3002; 46&#x8BBE;&#x8BA1;&#x5BFC;&#x822A; &#x8BBE;&#x8BA1;&#x5BFC;&#x822A; icondrawer David Lanham louiemantia &#x4E03;&#x3001;Github &#x9879;&#x76EE; CS-Notes To Be Top Javaer - Java&#x5DE5;&#x7A0B;&#x5E08;&#x6210;&#x795E;&#x4E4B;&#x8DEF; JCSprout &#x6280;&#x672F;&#x535A;&#x5BA2;&#x7F51;&#x7AD9;&#x63A8;&#x8350; &#x4F18;&#x79C0;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x7F16;&#x7A0B;&#x7C7B;&#x535A;&#x5BA2;&#x548C;&#x6587;&#x7AE0; Design patterns implemented in Java - Java &#x8BBE;&#x8BA1;&#x6A21;&#x5F0F; Awesome Java &#x7A0B;&#x5E8F;&#x5458;&#x627E;&#x5DE5;&#x4F5C;&#x9ED1;&#x540D;&#x5355; be-a-professional-programmer&#xFF08;Thonatos.Yang&#x6574;&#x7406;&#x7684;GitBook&#x7248;&#x672C;&#xFF0C;&#x9605;&#x8BFB;&#x4F53;&#x9A8C;&#x66F4;&#x4F73;&#xFF1A;be-a-professional-programmer&#xFF09; Java&#x5B66;&#x4E60;+&#x9762;&#x8BD5;&#x6307;&#x5357; Java&#x8D44;&#x6E90;&#x5927;&#x5168;&#x4E2D;&#x6587;&#x7248; spring-boot-student maven-framework-project GitBook &#x7B80;&#x660E;&#x6559;&#x7A0B; &#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x81EA;&#x6211;&#x4FEE;&#x517B; MyBatis&#x5B66;&#x4E60; PinkyLam-blog stackoverflow-Java-top-qa &#x6653;&#x98CE;&#x8F7B;&#x7684;Spring&#x5F00;&#x53D1;&#x4EE3;&#x7801;&#x6A21;&#x677F; &#x6653;&#x98CE;&#x8F7B;SpringBoot+Vue&#x4EE3;&#x7801;&#x6A21;&#x677F; JavaWeb&#x9879;&#x76EE;&#x4E4B;&#x5BA2;&#x6237;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF; Servlet &#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x89E3;&#x6790; JSR 340: Java Servlet 3.1 Specification&#x300A;Java Servlet 3.1 &#x89C4;&#x8303;&#x300B; Servlet &#x6559;&#x7A0B; IBM Developer &#x6280;&#x672F;&#x4E3B;&#x9898; JavaWeb&#x5F00;&#x53D1;&#x7B14;&#x8BB0; SpringCloudLearning\ free-programming-books Java&#x540E;&#x7AEF;2018&#x4E66;&#x5355;&#x63A8;&#x8350; &#x8BBE;&#x8BA1;&#x6A21;&#x5F0F; Top 500 Java Classes &#x79D1;&#x5B66;&#x4E0A;&#x7F51;&#x6F2B;&#x6E38;&#x6307;&#x5357; Public keys &#x4E92;&#x8054;&#x7F51;Java&#x79D2;&#x6740;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x4E0E;&#x67B6;&#x6784; &#x4E00;&#x4E2A;&#x57FA;&#x4E8E;Spring Boot &amp; MyBatis&#x7684;&#x79CD;&#x5B50;&#x9879;&#x76EE;&#xFF0C;&#x7528;&#x4E8E;&#x5FEB;&#x901F;&#x6784;&#x5EFA;&#x4E2D;&#x5C0F;&#x578B;API&#x3001;RESTful API&#x9879;&#x76EE; RESTful API &#x8BBE;&#x8BA1;&#x53C2;&#x8003;&#x6587;&#x732E;&#x5217;&#x8868; scaffrey/hosts &#x516B;&#x3001;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x989C;&#x8272;&#x642D;&#x914D; materialpalette &#x6E10;&#x53D8;&#x914D;&#x8272; shapefactory webgradients coolhue &#x535A;&#x5BA2;&#x642D;&#x5EFA; &#x6253;&#x9020;&#x4E2A;&#x6027;&#x8D85;&#x8D5E;&#x535A;&#x5BA2;Hexo+NexT+GitHubPages&#x7684;&#x8D85;&#x6DF1;&#x5EA6;&#x4F18;&#x5316; Hexo + Next&#x4E3B;&#x9898;&#x535A;&#x5BA2;&#x4F18;&#x5316; &#x76F8;&#x5173; / &#x70ED;&#x95E8; / &#x63A8;&#x8350;&#x6587;&#x7AE0; Hexo-Github&#x642D;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2; &#x2014; &#x5FC3;&#x5F97;&#x6C47;&#x603B;2018&#x7248;&#xFF08;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x7BC7;&#xFF09; &#x5185;&#x5BB9;&#x6298;&#x53E0; hexo next &#x9996;&#x9875;&#x663E;&#x793A;&#x81EA;&#x5B9A;&#x4E49;&#x76EE;&#x5F55;&#x53CA;&#x5176;&#x5728;&#x6587;&#x7AE0;&#x4E2D;&#x7684;&#x5C55;&#x5F00;&#x6298;&#x53E0; Hexo next&#x535A;&#x5BA2;&#x6DFB;&#x52A0;&#x6298;&#x53E0;&#x5757;&#x529F;&#x80FD;&#x6DFB;&#x52A0;&#x6298;&#x53E0;&#x4EE3;&#x7801;&#x5757; Next&#x4E3B;&#x9898;&#x6DFB;&#x52A0;&#x5185;&#x5BB9;&#x6298;&#x53E0; emoji &#x8868;&#x60C5; Hexo&#x6587;&#x7AE0;&#x6DFB;&#x52A0;emoji&#x8868;&#x60C5;&#x548C;&#x81EA;&#x5B9A;&#x4E49;&#x8868;&#x60C5;&#x5305; &#x5206;&#x4EAB;&#x51E0;&#x4E2A;&#x5B9E;&#x7528;&#x7684;HEXO&#x535A;&#x5BA2;&#x529F;&#x80FD;&#x63D2;&#x4EF6; Hexo&#x4E2D;&#x6DFB;&#x52A0;emoji&#x8868;&#x60C5; &#x8BA9; Hexo NexT &#x652F;&#x6301; emoji &#x8868;&#x60C5; &#x4F18;&#x5316;&#x535A;&#x5BA2; &#x3010;&#x641C;&#x7D22;&#x4F18;&#x5316;&#x3011;Hexo-next&#x767E;&#x5EA6;&#x548C;&#x8C37;&#x6B4C;&#x641C;&#x7D22;&#x4F18;&#x5316; &#x52A0;&#x901F; Hexo &#x535A;&#x5BA2; &#x52A8;&#x6001;&#x80CC;&#x666F; Hexo NexT&#x4E3B;&#x9898;&#x5185;&#x52A0;&#x5165;&#x52A8;&#x6001;&#x80CC;&#x666F; hexo&#x7684;next&#x4E3B;&#x9898;&#x4E2A;&#x6027;&#x5316;&#x914D;&#x7F6E;&#x6559;&#x7A0B; SVG &#x5B66;&#x4E60; &#x5728;&#x7EBF;&#x751F;&#x6210;svg SVG &#x56FE;&#x50CF;&#x5165;&#x95E8;&#x6559;&#x7A0B; SVG&#x6559;&#x7A0B; SVG &#x53C2;&#x8003;&#x624B;&#x518C; &#x7F16;&#x5199; SVG &#x7684;&#x6307;&#x5357; Markdown Markdown Preview Enhanced &#x5728;&#x7EBF;&#x8868;&#x683C;&#x751F;&#x6210;&#x5668; &#x5F00;&#x6E90;&#x5728;&#x7EBF; Markdown &#x7F16;&#x8F91;&#x5668; git &#x6559;&#x7A0B; gotgithub Git&#x6559;&#x7A0B; &#x9AD8;&#x624B;&#x5728;&#x6C11;&#x95F4;&#xFF0C;&#x6B22;&#x8FCE;&#x8865;&#x5145;&#x3002; &#x672C;&#x535A;&#x5BA2;&#x7981;&#x7528;&#x4E86;next&#x4E3B;&#x9898;&#x81EA;&#x5E26;&#x7684;&#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF;&#xFF0C;&#x56E0;&#x4E3A;&#x4E2A;&#x4EBA;&#x89C9;&#x5F97;&#x592A;&#x4E11;&#x4E86;&#xFF0C;&#x8C03;&#x8BD5;&#x6837;&#x5F0F;&#x5F88;&#x8D39;&#x65F6;&#x95F4;&#xFF0C;&#x5E76;&#x4E14;&#x9884;&#x4F30;&#x8BC4;&#x8BBA;&#x7684;&#x4EBA;&#x4E0D;&#x591A;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x6211;&#x559C;&#x6B22;&#x81EA;&#x5DF1;&#x7F16;&#x5199;&#x6807;&#x9898;&#x7684;&#x5E8F;&#x53F7;&#xFF0C;&#x56E0;&#x6B64;&#x7981;&#x7528;&#x4E86;&#x81EA;&#x52A8;&#x6807;&#x9898;&#x5E8F;&#x53F7;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>干货推荐</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[并发编程的艺术 | 学习笔记（二）]]></title>
    <url>%2F2018%2F12%2F20%2F004%2F</url>
    <content type="text"><![CDATA[&#x7B2C;2&#x7AE0;&#x3000;Java &#x5E76;&#x53D1;&#x673A;&#x5236;&#x7684;&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x539F;&#x7406;Java &#x4EE3;&#x7801;&#x5728;&#x7F16;&#x8BD1;&#x540E;&#x4F1A;&#x53D8;&#x6210; Java &#x5B57;&#x8282;&#x7801;&#xFF0C;&#x5B57;&#x8282;&#x7801;&#x88AB;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x52A0;&#x8F7D;&#x5230; JVM &#x91CC;&#xFF0C;JVM &#x6267;&#x884C;&#x5B57;&#x8282;&#x7801;&#xFF0C;JVM &#x518D;&#x5C06;&#x5B57;&#x8282;&#x7801;&#x7FFB;&#x8BD1;&#x8F6C;&#x5316;&#x4E3A;&#x6C47;&#x7F16;&#x6307;&#x4EE4;&#xFF0C;&#x4F7F;&#x5176;&#x5728; CPU &#x4E0A;&#x6267;&#x884C;&#x3002; Java &#x4E2D;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x5E76;&#x53D1;&#x673A;&#x5236;&#x4F9D;&#x8D56;&#x4E8E; JVM &#x7684;&#x5B9E;&#x73B0;&#x548C; CPU &#x7684;&#x6307;&#x4EE4;&#x3002;&#x672C;&#x7AE0;&#x5C06;&#x6DF1;&#x5165;&#x5E95;&#x5C42;&#x4E00;&#x8D77;&#x63A2;&#x7D22;&#x4E0B; Java &#x5E76;&#x53D1;&#x673A;&#x5236;&#x7684;&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#x3002; Java &#x865A;&#x62DF;&#x673A;&#x89C4;&#x8303;&#x5B98;&#x65B9;&#x6587;&#x6863; &#x4E00;&#x3001;volatile &#x7684;&#x5E94;&#x7528;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x4E2D; synchronized &#x548C; volatile &#x90FD;&#x626E;&#x6F14;&#x7740;&#x91CD;&#x8981;&#x7684;&#x89D2;&#x8272;&#xFF0C;volatile &#x662F;&#x8F7B;&#x91CF;&#x7EA7;&#x7684; synchronized&#xFF0C;&#x5B83;&#x5728;&#x591A;&#x5904;&#x7406;&#x5668;&#x5F00;&#x53D1;&#x4E2D;&#x4FDD;&#x8BC1;&#x4E86;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x7684;&#x201D;&#x53EF;&#x89C1;&#x6027;&#x201D;&#x3002; &#x53EF;&#x89C1;&#x6027;&#x5C31;&#x662F;&#x5F53;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x4FEE;&#x6539;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x80FD;&#x8BFB;&#x5230;&#x8FD9;&#x4E2A;&#x4FEE;&#x6539;&#x7684;&#x503C;&#x3002; &#x5982;&#x679C; volatile &#x53D8;&#x91CF;&#x4FEE;&#x9970;&#x7B26;&#x4F7F;&#x7528;&#x6070;&#x5F53;&#x7684;&#x8BDD;&#xFF0C;&#x5B83;&#x6BD4; synchronized &#x7684;&#x4F7F;&#x7528;&#x548C;&#x6267;&#x884C;&#x6210;&#x672C;&#x66F4;&#x4F4E;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77;&#x7EBF;&#x7A0B;&#x4E0A;&#x4E0B;&#x6587;&#x7684;&#x5207;&#x6362;&#x548C;&#x8C03;&#x5EA6;&#x3002;&#x672C;&#x6587;&#x5C06;&#x6DF1;&#x5165;&#x5206;&#x6790;&#x5728;&#x786C;&#x4EF6;&#x5C42;&#x9762;&#x4E0A; Intel &#x5904;&#x7406;&#x5668;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0; volatile &#x7684;&#xFF0C;&#x901A;&#x8FC7;&#x6DF1;&#x5165;&#x5206;&#x6790;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x6B63;&#x786E;&#x5730;&#x4F7F;&#x7528; volatile &#x53D8;&#x91CF;&#x3002; &#x79FB;&#x6B65;&#x9605;&#x8BFB;&#x7B14;&#x8005;&#x4E4B;&#x524D;&#x5199;&#x8FC7;&#x7684;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF1A; &#x7EC6;&#x8BF4;Java&#x591A;&#x7EBF;&#x7A0B;&#x4E4B;&#x5185;&#x5B58;&#x53EF;&#x89C1;&#x6027;&#xFF1A;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09; &#x7EC6;&#x8BF4;Java&#x591A;&#x7EBF;&#x7A0B;&#x4E4B;&#x5185;&#x5B58;&#x53EF;&#x89C1;&#x6027;&#xFF1A;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09; 1.1 volatile &#x7684;&#x5B9A;&#x4E49;&#x4E0E;&#x5B9E;&#x73B0;&#x539F;&#x7406;1.1.1 volatile &#x5B9A;&#x4E49;Java &#x8BED;&#x8A00;&#x89C4;&#x8303;&#x7B2C; 3 &#x7248;&#x4E2D;&#x5BF9; volatile &#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;Java &#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x5141;&#x8BB8;&#x7EBF;&#x7A0B;&#x8BBF;&#x95EE;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#xFF0C;&#x4E3A;&#x4E86;&#x786E;&#x4FDD;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x80FD;&#x88AB;&#x51C6;&#x786E;&#x548C;&#x4E00;&#x81F4;&#x5730;&#x66F4;&#x65B0;&#xFF0C;&#x7EBF;&#x7A0B;&#x5E94;&#x8BE5;&#x786E;&#x4FDD;&#x901A;&#x8FC7;&#x6392;&#x4ED6;&#x9501;&#x5355;&#x72EC;&#x83B7;&#x5F97;&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x3002;&#x56E0;&#x6B64; Java &#x8BED;&#x8A00;&#x63D0;&#x4F9B;&#x4E86; volatile&#xFF0C;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x6BD4; synchronized &#x9501;&#x8981;&#x66F4;&#x52A0;&#x65B9;&#x4FBF;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x88AB;&#x58F0;&#x660E;&#x6210; volatile&#xFF0C;Java &#x7EBF;&#x7A0B;&#x5185;&#x5B58;&#x6A21;&#x578B;&#x786E;&#x4FDD;&#x6240;&#x6709;&#x7EBF;&#x7A0B;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002; &#x4ECE;&#x4E0A;&#x8FF0;&#x63CF;&#x8FF0;&#x4E2D;&#x53EF;&#x77E5;&#xFF1A;volatile &#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x7684;&#x53EF;&#x89C1;&#x6027;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x4FDD;&#x8BC1;&#x539F;&#x5B50;&#x6027;&#x3002; CPU &#x672F;&#x8BED;&#x8BF4;&#x660E;&#xFF1A; volatile &#x4FDD;&#x8BC1;&#x7EBF;&#x7A0B;&#x7684;&#x53EF;&#x89C1;&#x6027;&#xFF0C;&#x5728; JVM &#x7684;&#x5E95;&#x5C42;&#x4E2D;&#x4E00;&#x5B9A;&#x4F7F;&#x7528;&#x5230;&#x4E86; CPU &#x64CD;&#x4F5C;&#x6307;&#x4EE4;&#xFF0C;&#x56E0;&#x6B64;&#x6709;&#x5FC5;&#x8981;&#x5148;&#x4E86;&#x89E3;&#x4E00;&#x4E0B; CPU &#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x7840;&#x672F;&#x8BED;&#xFF1A; &#x5185;&#x5B58;&#x5C4F;&#x969C;&#xFF08;memory barriers&#xFF09;&#x662F;&#x4E00;&#x7EC4;&#x5904;&#x7406;&#x5668;&#x6307;&#x4EE4;&#xFF0C;&#x7528;&#x4E8E;&#x5B9E;&#x73B0;&#x5BF9;&#x5185;&#x5B58;&#x64CD;&#x4F5C;&#x7684;&#x987A;&#x5E8F;&#x9650;&#x5236;&#x3002; &#x7F13;&#x51B2;&#x884C;&#xFF08;cache line&#xFF09;&#x7F13;&#x5B58;&#x4E2D;&#x53EF;&#x4EE5;&#x5206;&#x914D;&#x7684;&#x6700;&#x5C0F;&#x5B58;&#x50A8;&#x5355;&#x4F4D;&#x3002;&#x5904;&#x7406;&#x5668;&#x586B;&#x5199;&#x7F13;&#x5B58;&#x7EBF;&#x65F6;&#x4F1A;&#x52A0;&#x8F7D;&#x6574;&#x4E2A;&#x7F13;&#x5B58;&#x7EBF;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x4E3B;&#x5185;&#x5B58;&#x7684;&#x8BFB;&#x5468;&#x671F;&#x3002; &#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF08;atomic operations&#xFF09;&#x4E0D;&#x53EF;&#x4E2D;&#x65AD;&#x7684;&#x4E00;&#x4E2A;&#x6216;&#x4E00;&#x7CFB;&#x5217;&#x64CD;&#x4F5C;&#x3002; &#x7F13;&#x51B2;&#x884C;&#x586B;&#x5145;&#xFF08;cache line fill&#xFF09;&#x5F53;&#x5904;&#x7406;&#x5668;&#x8BC6;&#x522B;&#x5230;&#x4ECE;&#x5185;&#x5B58;&#x4E2D;&#x8BFB;&#x53D6;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x53EF;&#x7F13;&#x5B58;&#x7684;&#xFF0C;&#x5904;&#x7406;&#x5668;&#x8BFB;&#x53D6;&#x6574;&#x4E2A;&#x7F13;&#x5B58;&#x884C;&#x5230;&#x9002;&#x5F53;&#x7684;&#x7F13;&#x5B58;&#xFF08;L1&#xFF0C;L2&#xFF0C;L3 &#x7684;&#x6216;&#x6240;&#x6709;&#xFF09;&#x3002; &#x7F13;&#x51B2;&#x547D;&#x4E2D;&#xFF08;cache hit&#xFF09;&#x5982;&#x679C;&#x8FDB;&#x884C;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x884C;&#x586B;&#x5145;&#x64CD;&#x4F5C;&#x7684;&#x5185;&#x5B58;&#x4F4D;&#x7F6E;&#x4ECD;&#x7136;&#x662F;&#x4E0B;&#x6B21;&#x5904;&#x7406;&#x5668;&#x8BBF;&#x95EE;&#x7684;&#x5730;&#x5740;&#x65F6;&#xFF0C;&#x5904;&#x7406;&#x5668;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x8BFB;&#x53D6;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4ECE;&#x5185;&#x5B58;&#x8BFB;&#x53D6;&#x3002; &#x5199;&#x547D;&#x4E2D;&#xFF08;write hit&#xFF09;&#x5F53;&#x5904;&#x7406;&#x5668;&#x5C06;&#x64CD;&#x4F5C;&#x6570;&#x5199;&#x56DE;&#x5230;&#x4E00;&#x4E2A;&#x5185;&#x5B58;&#x7F13;&#x5B58;&#x7684;&#x533A;&#x57DF;&#x65F6;&#xFF0C;&#x5B83;&#x9996;&#x5148;&#x4F1A;&#x68C0;&#x67E5;&#x8FD9;&#x4E2A;&#x7F13;&#x5B58;&#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#x662F;&#x5426;&#x5728;&#x7F13;&#x5B58;&#x884C;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x7684;&#x7F13;&#x5B58;&#x884C;&#xFF0C;&#x5219;&#x5904;&#x7406;&#x5668;&#x5C06;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x5199;&#x56DE;&#x5230;&#x7F13;&#x5B58;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5199;&#x56DE;&#x5230;&#x5185;&#x5B58;&#xFF0C;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x88AB;&#x6210;&#x4E3A;&#x5199;&#x547D;&#x4E2D;&#x3002; &#x5199;&#x7F3A;&#x5931;&#xFF08;write misses the cache&#xFF09;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x7684;&#x7F13;&#x5B58;&#x884C;&#x88AB;&#x5199;&#x5165;&#x5230;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x3002; 1.1.2 volatile &#x7684;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#x5982;&#x679C;&#x5BF9;&#x58F0;&#x660E;&#x4E86; volatile &#x7684;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x5199;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;JVM &#x5C31;&#x4F1A;&#x5411;&#x5904;&#x7406;&#x5668;&#x53D1;&#x9001;&#x4E00;&#x6761; Lock &#x524D;&#x7F00;&#x7684;&#x6307;&#x4EE4;&#xFF08;JVM &#x7FFB;&#x8BD1;&#x8F6C;&#x5316;&#x6210;&#x7684;&#x6C47;&#x7F16;&#x6307;&#x4EE4;&#xFF09;&#xFF0C;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x5C06;&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x6240;&#x5728;&#x7F13;&#x5B58;&#x884C;&#x7684;&#x6570;&#x636E;&#x5199;&#x56DE;&#x5230;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x3002; &#x5F53;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x5199;&#x5B8C;&#x81EA;&#x5DF1;&#x5DE5;&#x4F5C;&#x5185;&#x5B58;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x5E76;&#x901A;&#x8FC7; JVM &#x643A;&#x5E26;&#x7684; Lock &#x524D;&#x7F00;&#x6307;&#x4EE4;&#x544A;&#x77E5;&#x5F53;&#x524D;&#x5199;&#x5B8C;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x8981;&#x53CA;&#x65F6;&#x66F4;&#x65B0;&#x5230;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x3002; &#x4EC5;&#x4EC5;&#x8FD9;&#x4E00;&#x6B65;&#x8FD8;&#x4E0D;&#x591F;&#xFF0C;&#x56E0;&#x4E3A;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x7684;&#x5DE5;&#x4F5C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x8FD8;&#x662F;&#x539F;&#x6765;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x4E2D;&#x6700;&#x65B0;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x3002;&#x540C;&#x65F6;&#x5904;&#x7406;&#x5668;&#x672C;&#x8EAB;&#x7684;&#x673A;&#x5236;&#x51B3;&#x5B9A;&#x4E86;&#x7EBF;&#x7A0B;&#x4E4B;&#x524D;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x901A;&#x4FE1;&#xFF1A;&#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x5904;&#x7406;&#x901F;&#x5EA6;&#xFF0C;&#x5904;&#x7406;&#x5668;&#x4E0D;&#x76F4;&#x63A5;&#x548C;&#x5185;&#x5B58;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#xFF0C;&#x800C;&#x662F;&#x5148;&#x5C06;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x7684;&#x6570;&#x636E;&#x8BFB;&#x5230;&#x5185;&#x90E8;&#x7F13;&#x5B58;&#xFF08;L1&#xFF0C;L2&#x6216;&#x5176;&#x4ED6;&#xFF09;&#x540E;&#x518D;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x4F46;&#x64CD;&#x4F5C;&#x5B8C;&#x4E0D;&#x77E5;&#x9053;&#x4F55;&#x65F6;&#x4F1A;&#x5199;&#x5230;&#x5185;&#x5B58;&#x3002; &#x90A3;&#x5982;&#x4F55;&#x4FDD;&#x8BC1;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x64CD;&#x4F5C;&#x6570;&#x4E4B;&#x524D;&#x80FD;&#x62FF;&#x5230;&#x6700;&#x65B0;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#x5462;&#xFF1F; &#x5728;&#x591A;&#x5904;&#x7406;&#x5668;&#x4E0B;&#xFF0C;&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x5404;&#x4E2A;&#x5904;&#x7406;&#x5668;&#x7684;&#x7F13;&#x5B58;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x5C31;&#x4F1A;&#x5B9E;&#x73B0;&#x7F13;&#x5B58;&#x4E00;&#x81F4;&#x6027;&#x534F;&#x8BAE;&#xFF0C;&#x6BCF;&#x4E2A;&#x5904;&#x7406;&#x5668;&#x901A;&#x8FC7;&#x55C5;&#x63A2;&#x5728;&#x603B;&#x7EBF;&#x4E0A;&#x4F20;&#x64AD;&#x7684;&#x6570;&#x636E;&#x6765;&#x68C0;&#x67E5;&#x81EA;&#x5DF1;&#x7F13;&#x5B58;&#x7684;&#x503C;&#x662F;&#x4E0D;&#x662F;&#x8FC7;&#x671F;&#x4E86;&#xFF0C;&#x5F53;&#x5904;&#x7406;&#x5668;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x7F13;&#x5B58;&#x884C;&#x5BF9;&#x5E94;&#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#x5728;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x4E2D;&#x88AB;&#x4FEE;&#x6539;&#x4E86;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x5F53;&#x524D;&#x5904;&#x7406;&#x5668;&#x7684;&#x7F13;&#x5B58;&#x884C;&#x8BBE;&#x7F6E;&#x6210;&#x65E0;&#x6548;&#x72B6;&#x6001;&#xFF0C;&#x5F53;&#x5904;&#x7406;&#x5668;&#x5BF9;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x91CD;&#x65B0;&#x4ECE;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x4E2D;&#x628A;&#x6570;&#x636E;&#x8BFB;&#x5230;&#x5904;&#x7406;&#x5668;&#x7F13;&#x5B58;&#x91CC;&#x3002; 1.1.3 volatile &#x7684;&#x4E24;&#x6761;&#x5B9E;&#x73B0;&#x539F;&#x5219; Lock &#x524D;&#x7F00;&#x6307;&#x4EE4;&#x4F1A;&#x5F15;&#x8D77;&#x5904;&#x7406;&#x5668;&#x7F13;&#x5B58;&#x56DE;&#x5199;&#x5230;&#x5185;&#x5B58; &#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x7684;&#x5904;&#x7406;&#x5668;&#x7248;&#x672C;&#xFF0C;Lock &#x524D;&#x7F00;&#x6307;&#x4EE4;&#x5BFC;&#x81F4;&#x5728;&#x6267;&#x884C;&#x6307;&#x4EE4;&#x671F;&#x95F4;&#xFF0C;&#x5BF9;&#x58F0;&#x8A00;&#x5904;&#x7406;&#x5668;&#x7684;LOCK#&#x4FE1;&#x53F7;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5904;&#x7406;&#x673A;&#x5236;&#xFF1A; &#x5BF9;&#x4E8E; Intel 486 &#x548C; Pentium &#x5904;&#x7406;&#x5668;&#xFF0C;LOCK# &#x4FE1;&#x53F7;&#x786E;&#x4FDD;&#x5728;&#x58F0;&#x8A00;&#x8BE5;&#x4FE1;&#x53F7;&#x671F;&#x95F4;&#xFF0C;&#x5904;&#x7406;&#x5668;&#x53EF;&#x4EE5;&#x72EC;&#x5360;&#x4EFB;&#x4F55;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4F1A;&#x9501;&#x4F4F;&#x603B;&#x7EBF;&#xFF0C;&#x5BFC;&#x81F4;&#x5176;&#x4ED6; CPU &#x4E0D;&#x80FD;&#x8BBF;&#x95EE;&#x603B;&#x7EBF;&#xFF0C;&#x4E0D;&#x80FD;&#x8BBF;&#x95EE;&#x603B;&#x7EBF;&#x5C31;&#x610F;&#x5473;&#x7740;&#x4E0D;&#x80FD;&#x8BBF;&#x95EE;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x3002; &#x5728; P 6 &#x548C;&#x76EE;&#x524D;&#x7684;&#x5904;&#x7406;&#x5668;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x8BBF;&#x95EE;&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x5DF2;&#x7ECF;&#x7F13;&#x5B58;&#x5728;&#x5904;&#x7406;&#x5668;&#x5185;&#x90E8;&#xFF0C;&#x5219;&#x4E0D;&#x4F1A;&#x58F0;&#x8A00; LOCK# &#x4FE1;&#x53F7;&#x3002;&#x5B83;&#x4F1A;&#x9501;&#x5B9A;&#x8FD9;&#x5757;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x7684;&#x7F13;&#x5B58;&#x5E76;&#x56DE;&#x5199;&#x5230;&#x5185;&#x5B58;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#x4E00;&#x81F4;&#x6027;&#x673A;&#x5236;&#x6765;&#x786E;&#x4FDD;&#x4FEE;&#x6539;&#x7684;&#x539F;&#x5B50;&#x6027;&#xFF0C;&#x6B64;&#x64CD;&#x4F5C;&#x88AB;&#x79F0;&#x4E3A;&#x201C;&#x7F13;&#x5B58;&#x9501;&#x5B9A;&#x201D;&#xFF0C;&#x7F13;&#x5B58;&#x4E00;&#x81F4;&#x6027;&#x673A;&#x5236;&#x4F1A;&#x963B;&#x6B62;&#x540C;&#x65F6;&#x4FEE;&#x6539;&#x7531;&#x4E24;&#x4E2A;&#x4EE5;&#x4E0A;&#x5904;&#x7406;&#x5668;&#x7F13;&#x5B58;&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x6570;&#x636E;&#x3002; &#x4E00;&#x4E2A;&#x5904;&#x7406;&#x5668;&#x7684;&#x7F13;&#x5B58;&#x56DE;&#x5199;&#x5230;&#x5185;&#x5B58;&#x4F1A;&#x5BFC;&#x81F4;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x5668;&#x7684;&#x7F13;&#x5B58;&#x65E0;&#x6548; IA-32 &#x5904;&#x7406;&#x5668;&#x548C; Intel 64 &#x5904;&#x7406;&#x5668;&#x4F7F;&#x7528;MESI&#xFF08;&#x4FEE;&#x6539;&#x3001;&#x72EC;&#x5360;&#x3001;&#x5171;&#x4EAB;&#x3001;&#x65E0;&#x6548;&#xFF09;&#x63A7;&#x5236;&#x534F;&#x8BAE;&#x53BB;&#x7EF4;&#x62A4;&#x5185;&#x90E8;&#x7F13;&#x5B58;&#x548C;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x5668;&#x7F13;&#x5B58;&#x7684;&#x4E00;&#x81F4;&#x6027;&#x3002; &#x5904;&#x7406;&#x5668;&#x7684;&#x55C5;&#x63A2;&#x6280;&#x672F;&#xFF1A; &#x5728;&#x591A;&#x6838;&#x5904;&#x7406;&#x5668;&#x7CFB;&#x7EDF;&#x4E2D;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5904;&#x7406;&#x5668;&#x80FD;&#x55C5;&#x63A2;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x5668;&#x8BBF;&#x95EE;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x548C;&#x5B83;&#x4EEC;&#x7684;&#x5185;&#x90E8;&#x7F13;&#x5B58;&#xFF0C;&#x4EE5;&#x4FDD;&#x8BC1;&#x5B83;&#x7684;&#x5185;&#x90E8;&#x7F13;&#x5B58;&#x3001;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x548C;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x5668;&#x7684;&#x7F13;&#x5B58;&#x7684;&#x6570;&#x636E;&#x5728;&#x603B;&#x7EBF;&#x4E0A;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5728; Pentium &#x548C; P 6 family &#x5904;&#x7406;&#x5668;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x901A;&#x8FC7;&#x55C5;&#x63A2;&#x4E00;&#x4E2A;&#x5904;&#x7406;&#x5668;&#x6765;&#x68C0;&#x6D4B;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x5668;&#x6253;&#x7B97;&#x5199;&#x5185;&#x5B58;&#x5730;&#x5740;&#xFF08;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x5730;&#x5740;&#x5F53;&#x524D;&#x5904;&#x4E8E;&#x5171;&#x4EAB;&#x72B6;&#x6001;&#xFF09;&#xFF0C;&#x90A3;&#x4E48;&#x6B63;&#x5728;&#x55C5;&#x63A2;&#x7684;&#x5904;&#x7406;&#x5668;&#x5C06;&#x4F7F;&#x5B83;&#x7684;&#x7F13;&#x5B58;&#x884C;&#x65E0;&#x6548;&#xFF0C;&#x5728;&#x4E0B;&#x6B21;&#x8BBF;&#x95EE;&#x76F8;&#x540C;&#x5185;&#x5B58;&#x5730;&#x5740;&#x65F6;&#xFF0C;&#x5F3A;&#x5236;&#x6267;&#x884C;&#x7F13;&#x5B58;&#x884C;&#x586B;&#x5145;&#x3002; 1.1.4 volatile&#x7684;&#x4F7F;&#x7528;&#x4F18;&#x5316;&#x5728; JDK 7 &#x7684;&#x5E76;&#x53D1;&#x5305;&#x91CC;&#x65B0;&#x589E;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x96C6;&#x5408;&#x7C7B;Linked-TransferQueue&#xFF0C;&#x5B83;&#x5728;&#x4F7F;&#x7528; volatile &#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x7528;&#x4E00;&#x79CD;&#x8FFD;&#x52A0;&#x5B57;&#x8282;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x4F18;&#x5316;&#x961F;&#x5217;&#x51FA;&#x961F;&#x548C;&#x5165;&#x961F;&#x7684;&#x6027;&#x80FD;&#x3002; &#x8FD9;&#x4E2A;&#x5185;&#x90E8;&#x7C7B;PaddedAtomicReference&#x76F8;&#x5BF9;&#x4E8E;&#x7236;&#x7C7B;AtomicReference&#x53EA;&#x505A;&#x4E86;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x8FFD;&#x52A0;&#x5230; 64 &#x5B57;&#x8282;&#x3002;&#x56E0;&#x4E3A;&#x76EE;&#x524D;&#x4E3B;&#x6D41;&#x5904;&#x7406;&#x5668;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x884C;&#x662F; 64 &#x4E2A;&#x5B57;&#x8282;&#x5BBD;&#xFF0C;&#x4E0D;&#x652F;&#x6301;&#x90E8;&#x5206;&#x586B;&#x5145;&#x7F13;&#x5B58;&#x884C;&#xFF0C;&#x901A;&#x8FC7;&#x8FFD;&#x52A0;&#x5230; 64 &#x5B57;&#x8282;&#x7684;&#x65B9;&#x5F0F;&#x586B;&#x6EE1;&#x9AD8;&#x901F;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x7F13;&#x5B58;&#x884C;&#xFF0C;&#x907F;&#x514D;&#x5404;&#x5143;&#x7D20;&#x52A0;&#x8F7D;&#x5230;&#x540C;&#x4E00;&#x7F13;&#x5B58;&#x884C;&#x800C;&#x4E92;&#x76F8;&#x9501;&#x5B9A;&#x3002; &#x5E76;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x4F7F;&#x7528; volatile &#x53D8;&#x91CF;&#x65F6;&#x90FD;&#x5E94;&#x8BE5;&#x8FFD;&#x52A0;&#x5230; 64 &#x5B57;&#x8282;&#xFF1A; 1&#xFF09;&#x5BF9;&#x4E8E;&#x7F13;&#x5B58;&#x884C;&#x975E; 64 &#x5B57;&#x8282;&#x5BBD;&#x7684;&#x5904;&#x7406;&#x5668;&#x3002;&#x5982; P 6 &#x7CFB;&#x5217;&#x548C;&#x5954;&#x817E;&#x5904;&#x7406;&#x5668;&#xFF0C;&#x5B83;&#x4EEC;&#x7684; L1 &#x548C;L2 &#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x884C;&#x662F;32&#x4E2A;&#x5B57;&#x8282;&#x5BBD;&#x3002; 2&#xFF09;&#x5982;&#x679C;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x4E0D;&#x88AB;&#x9891;&#x7E41;&#x5199;&#x7684;&#x8BDD;&#xFF0C;&#x9501;&#x7684;&#x673A;&#x7387;&#x5F88;&#x5C0F;&#xFF0C;&#x5C31;&#x6CA1;&#x5FC5;&#x8981;&#x901A;&#x8FC7;&#x8FFD;&#x52A0;&#x5B57;&#x8282;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x907F;&#x514D;&#x76F8;&#x4E92;&#x9501;&#x5B9A;&#x3002;&#x56E0;&#x4E3A;&#x8FFD;&#x52A0;&#x5B57;&#x8282;&#x7684;&#x65B9;&#x5F0F;&#x9700;&#x8981;&#x5904;&#x7406;&#x5668;&#x8BFB;&#x53D6;&#x66F4;&#x591A;&#x7684;&#x5B57;&#x8282;&#x5230;&#x9AD8;&#x901F;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x9700;&#x8981;&#x66F4;&#x9AD8;&#x7684;&#x6027;&#x80FD;&#x6D88;&#x8017;&#x3002; &#x4E0D;&#x8FC7;&#x8FD9;&#x79CD;&#x8FFD;&#x52A0;&#x5B57;&#x8282;&#x7684;&#x65B9;&#x5F0F;&#x5728;Java 7&#x4E0B;&#x53EF;&#x80FD;&#x4E0D;&#x751F;&#x6548;&#xFF0C;&#x56E0;&#x4E3A;Java 7&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x667A;&#x6167;&#xFF0C;&#x5B83;&#x4F1A;&#x6DD8;&#x6C70;&#x6216;&#x91CD;&#x65B0;&#x6392;&#x5217;&#x65E0;&#x7528;&#x5B57;&#x6BB5;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x8FFD;&#x52A0;&#x5B57;&#x8282;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x4E8C;&#x3001;synchronized &#x7684;&#x5E94;&#x7528;synchronized &#x5E38;&#x88AB;&#x79F0;&#x4E3A;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#xFF0C;&#x4F46;&#x662F;&#x968F;&#x7740; Java SE 1.6 &#x5BF9; synchronized &#x8FDB;&#x884C;&#x4E86;&#x5404;&#x79CD;&#x4F18;&#x5316;&#x4E4B;&#x540E;&#xFF0C;&#x6709;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x5B83;&#x5C31;&#x5E76;&#x4E0D;&#x90A3;&#x4E48;&#x91CD;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6709;&#x4E86;&#x504F;&#x5411;&#x9501;&#x548C;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#xFF0C;&#x4EE5;&#x53CA;&#x9501;&#x7684;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x548C;&#x5347;&#x7EA7;&#x8FC7;&#x7A0B;&#x3002; Java &#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x90FD;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x9501;&#x3002;&#x5177;&#x4F53;&#x8868;&#x73B0;&#x4E3A;&#x4EE5;&#x4E0B; 3 &#x79CD;&#x5F62;&#x5F0F;&#xFF1A; &#x5BF9;&#x4E8E;&#x666E;&#x901A;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#xFF0C;&#x9501;&#x662F;&#x5F53;&#x524D;&#x5B9E;&#x4F8B;&#x5BF9;&#x8C61;&#xFF08;this&#xFF09;&#x3002; &#x5BF9;&#x4E8E;&#x9759;&#x6001;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#xFF0C;&#x9501;&#x662F;&#x5F53;&#x524D;&#x7C7B;&#x7684; Class &#x5BF9;&#x8C61;&#x3002; &#x5BF9;&#x4E8E;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x5757;&#xFF0C;&#x9501;&#x662F; synchonized &#x62EC;&#x53F7;&#x91CC;&#x914D;&#x7F6E;&#x7684;&#x5BF9;&#x8C61;&#x3002; synchonized &#x5728; JVM &#x91CC;&#x7684;&#x5B9E;&#x73B0;&#x539F;&#x7406; &#x4ECE; JVM &#x89C4;&#x8303;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230; Synchonized &#x5728; JVM &#x91CC;&#x7684;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#xFF1A;JVM &#x57FA;&#x4E8E;&#x8FDB;&#x5165;&#x548C;&#x9000;&#x51FA;Monitor&#x5BF9;&#x8C61;&#x6765;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#x540C;&#x6B65;&#x548C;&#x4EE3;&#x7801;&#x5757;&#x540C;&#x6B65;&#xFF0C;&#x4F46;&#x4E24;&#x8005;&#x7684;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x4E0D;&#x4E00;&#x6837;&#x3002; &#x4EE3;&#x7801;&#x5757;&#x540C;&#x6B65;&#x662F;&#x4F7F;&#x7528;monitorenter&#x548C;monitorexit&#x6307;&#x4EE4;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x800C;&#x65B9;&#x6CD5;&#x540C;&#x6B65;&#x662F;&#x4F7F;&#x7528;&#x53E6;&#x5916;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#xFF08;JVM &#x89C4;&#x8303;&#x91CC;&#x5E76;&#x6CA1;&#x6709;&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#xFF09;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FD9;&#x4E24;&#x4E2A;&#x6307;&#x4EE4;&#x6765;&#x5B9E;&#x73B0;&#x3002; JVM &#x91CC;&#x7684; Monitor monitorenter&#x6307;&#x4EE4;&#x662F;&#x5728;&#x7F16;&#x8BD1;&#x540E;&#x63D2;&#x5165;&#x5230;&#x540C;&#x6B65;&#x4EE3;&#x7801;&#x5757;&#x7684;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;&#xFF0C;monitorexit&#x6307;&#x4EE4;&#x662F;&#x63D2;&#x5165;&#x5230;&#x65B9;&#x6CD5;&#x7ED3;&#x675F;&#x5904;&#x548C;&#x5F02;&#x5E38;&#x5904;&#x3002; JVM &#x8981;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A; monitorenter &#x5FC5;&#x987B;&#x6709;&#x5BF9;&#x5E94;&#x7684; monitorexit &#x4E0E;&#x4E4B;&#x914D;&#x5BF9;&#x3002;&#x4EFB;&#x4F55;&#x5BF9;&#x8C61;&#x90FD;&#x6709;&#x4E00;&#x4E2A; monitor &#x4E0E;&#x4E4B;&#x5173;&#x8054;&#xFF0C;&#x5F53;&#x4E14;&#x4E00;&#x4E2A; monitor &#x88AB;&#x6301;&#x6709;&#x540E;&#xFF0C;&#x5B83;&#x5C06;&#x5904;&#x4E8E;&#x9501;&#x5B9A;&#x72B6;&#x6001;&#x3002;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5230; monitorenter &#x6307;&#x4EE4;&#x65F6;&#xFF0C;&#x5C06;&#x4F1A;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x5BF9;&#x8C61;&#x6240;&#x5BF9;&#x5E94;&#x7684; monitor &#x7684;&#x6240;&#x6709;&#x6743;&#xFF0C;&#x5373;&#x5C1D;&#x8BD5;&#x83B7;&#x5F97;&#x5BF9;&#x8C61;&#x7684;&#x9501;&#x3002; 2.2.1 Java &#x5BF9;&#x8C61;&#x5934;synchronized &#x7528;&#x7684;&#x9501;&#x662F;&#x5B58;&#x5728; Java &#x5BF9;&#x8C61;&#x5934;&#x91CC;&#x7684;&#x3002;Java &#x5BF9;&#x8C61;&#x5934;&#x9488;&#x5BF9;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x5BF9;&#x8C61;&#x548C;&#x975E;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x7684;&#x4FE1;&#x606F;&#x4E0D;&#x540C;&#xFF0C;&#x524D;&#x8005;&#x5B58; 3 &#x4E2A;&#x5B57;&#x5BBD;&#xFF08;Word&#xFF09;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x540E;&#x8005;&#x5B58; 2 &#x4E2A;&#x5B57;&#x5BBD;&#x7684;&#x4FE1;&#x606F;&#x3002; &#x5728;&#x4E0D;&#x540C;&#x7684;&#x4F4D;&#x6570;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x5B57;&#x5BBD;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x8282;&#x5927;&#x5C0F;&#x4E0D;&#x540C;&#xFF1A; &#x5728; 32 &#x4F4D;&#x865A;&#x62DF;&#x673A;&#x4E2D;&#xFF0C;1 &#x5B57;&#x5BBD;&#x7B49;&#x4E8E; 4 &#x5B57;&#x8282;&#xFF0C;&#x5373; 32 bit &#x5728; 64 &#x4F4D;&#x865A;&#x62DF;&#x673A;&#x4E2D;&#xFF0C;1 &#x5B57;&#x5BBD;&#x7B49;&#x4E8E; 8 &#x5B57;&#x8282;&#xFF0C;&#x5373; 64 bit &#x6BCF;&#x4E2A;&#x5B57;&#x5BBD;&#x4E2D;&#x5B58;&#x50A8;&#x7740;&#x4E0D;&#x540C;&#x7684;&#x4FE1;&#x606F;&#x6807;&#x8BC6;&#xFF1A; &#x5728; Java &#x5BF9;&#x8C61;&#x5934;&#x91CC;&#x7684;Mark Word&#x91CC;&#x9ED8;&#x8BA4;&#x5B58;&#x50A8;&#x5BF9;&#x8C61;&#x7684; HashCode&#x3001;&#x5206;&#x4EE3;&#x5E74;&#x9F84;&#x548C;&#x9501;&#x6807;&#x8BB0;&#x4F4D;&#x3002;32 &#x4F4D; JVM &#x7684;Mark Word&#x7684;&#x9ED8;&#x8BA4;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; &#x5728;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#xFF0C;Mark Word &#x91CC;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x4F1A;&#x968F;&#x7740;&#x9501;&#x6807;&#x5FD7;&#x4F4D;&#x7684;&#x53D8;&#x5316;&#x800C;&#x53D8;&#x5316;&#xFF0C;&#x4EE5;&#x4E0B; 4 &#x79CD;&#x6570;&#x636E;&#x53D8;&#x5316;&#xFF1A; &#x7528;&#x4E00;&#x5F20;&#x56FE;&#x6765;&#x63CF;&#x8FF0;&#x4E0A;&#x8FF0;&#x7684;&#x5404;&#x79CD;&#x8868;&#x7ED3;&#x6784;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF1A; &#x5728; 64 &#x4F4D;&#x865A;&#x62DF;&#x673A;&#x4E0B;&#xFF0C;Mark Word &#x662F; 64 bit &#x5927;&#x5C0F;&#x7684;&#xFF0C;&#x5176;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#x8868;&#xFF1A; &#x6CE8;&#x610F;&#xFF1A;&#x4E0A;&#x8868;&#x4E2D;&#x504F;&#x5411;&#x9501;&#x7684;&#x72B6;&#x6001;&#x7684;&#x5934;&#x4FE1;&#x606F;&#x4E2D;&#x51FA;&#x73B0;&#x4E86;&#x7EBF;&#x7A0B; ID&#xFF0C;&#x5E76;&#x4E14;&#x504F;&#x5411;&#x9501;&#x7684;&#x503C;&#x4E3A; 1&#x3002; &#x4E09;&#x3001;&#x9501;&#x7684;&#x5347;&#x7EA7;&#x4E0E;&#x5BF9;&#x6BD4;Java SE 1.6 &#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x83B7;&#x5F97;&#x9501;&#x548C;&#x91CA;&#x653E;&#x9501;&#x5E26;&#x6765;&#x7684;&#x6027;&#x80FD;&#x6D88;&#x8017;&#xFF0C;&#x5F15;&#x5165;&#x4E86;&#x201D;&#x504F;&#x5411;&#x9501;&#x201D;&#x548C;&#x201D;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x201D;&#xFF0C;&#x9501;&#x4E00;&#x5171;&#x6709; 4 &#x79CD;&#x72B6;&#x6001;&#xFF0C;&#x7EA7;&#x522B;&#x4ECE;&#x4F4E;&#x5230;&#x9AD8;&#x4F9D;&#x6B21;&#x662F;&#xFF1A;&#x65E0;&#x9501;&#x72B6;&#x6001;&#x3001;&#x504F;&#x5411;&#x9501;&#x72B6;&#x6001;&#x3001;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x72B6;&#x6001;&#x548C;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#x72B6;&#x6001;&#x3002; &#x8FD9;&#x51E0;&#x4E2A;&#x72B6;&#x6001;&#x4F1A;&#x968F;&#x7740;&#x7ADE;&#x4E89;&#x60C5;&#x51B5;&#x9010;&#x6E10;&#x5347;&#x7EA7;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x79CD;&#x5347;&#x7EA7;&#x4E4B;&#x540E;&#x4E0D;&#x53EF;&#x964D;&#x7EA7;&#xFF0C;&#x56E0;&#x6B64;&#x504F;&#x5411;&#x9501;&#x5347;&#x7EA7;&#x6210;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x540E;&#x4E0D;&#x80FD;&#x964D;&#x7EA7;&#x6210;&#x504F;&#x5411;&#x9501;&#x3002;&#x8FD9;&#x79CD;&#x9501;&#x5347;&#x7EA7;&#x5374;&#x4E0D;&#x80FD;&#x964D;&#x7EA7;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x83B7;&#x5F97;&#x9501;&#x548C;&#x91CA;&#x653E;&#x9501;&#x7684;&#x6548;&#x7387;&#x3002; 3.1 &#x504F;&#x5411;&#x9501;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9501;&#x4E0D;&#x4EC5;&#x4E0D;&#x5B58;&#x5728;&#x591A;&#x7EBF;&#x7A0B;&#x7ADE;&#x4E89;&#xFF0C;&#x800C;&#x4E14;&#x603B;&#x662F;&#x7531;&#x540C;&#x4E00;&#x7EBF;&#x7A0B;&#x591A;&#x6B21;&#x83B7;&#x5F97;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;&#x7EBF;&#x7A0B;&#x83B7;&#x5F97;&#x9501;&#x7684;&#x4EE3;&#x4EF7;&#x66F4;&#x4F4E;&#x800C;&#x5F15;&#x5165;&#x4E86;&#x504F;&#x5411;&#x9501;&#x3002;&#x504F;&#x5411;&#x9501;&#x5728; Java 6 &#x548C; Java 7 &#x91CC;&#x662F;&#x9ED8;&#x8BA4;&#x542F;&#x7528;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x542F;&#x52A8;&#x51E0;&#x79D2;&#x949F;&#x4E4B;&#x540E;&#x624D;&#x6FC0;&#x6D3B;&#x3002; 3.1.1 &#x504F;&#x5411;&#x9501;&#x7684;&#x521D;&#x59CB;&#x5316; &#x5F53;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x8BBF;&#x95EE;&#x540C;&#x6B65;&#x5757;&#x5E76;&#x83B7;&#x53D6;&#x9501;&#x65F6;&#xFF0C;&#x4F1A;&#x5728;&#x5BF9;&#x8C61;&#x5934;&#x548C;&#x6808;&#x5E27;&#x4E2D;&#x7684;&#x9501;&#x8BB0;&#x5F55;&#x91CC;&#x5B58;&#x50A8;&#x9501;&#x504F;&#x5411;&#x7684;&#x7EBF;&#x7A0B; ID&#xFF0C;&#x5B58;&#x50A8;&#x4E4B;&#x524D;&#x4F1A;&#x6D4B;&#x8BD5;&#x4E00;&#x4E0B;&#x5BF9;&#x8C61;&#x5934;&#x7684; Mark Word &#x91CC;&#x662F;&#x5426;&#x5B58;&#x50A8;&#x7740;&#x6307;&#x5411;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7684;&#x504F;&#x5411;&#x9501;&#x3002; &#x5982;&#x679C;&#x6D4B;&#x8BD5;&#x6210;&#x529F;&#xFF0C;&#x8868;&#x793A;&#x7EBF;&#x7A0B;&#x5DF2;&#x7ECF;&#x83B7;&#x5F97;&#x4E86;&#x9501;&#x3002;&#x5982;&#x679C;&#x6D4B;&#x8BD5;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x518D;&#x6D4B;&#x8BD5;&#x4E00;&#x4E0B; Mark Word &#x4E2D;&#x504F;&#x5411;&#x9501;&#x7684;&#x6807;&#x8BC6;&#x662F;&#x5426;&#x8BBE;&#x7F6E;&#x6210; 1&#xFF08;&#x8868;&#x793A;&#x5F53;&#x524D;&#x662F;&#x504F;&#x5411;&#x9501;&#xFF09;&#xFF1A;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;&#xFF0C;&#x5219;&#x4F7F;&#x7528;CAS&#x7ADE;&#x4E89;&#x9501;&#xFF1B;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;&#xFF0C;&#x5219;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528; CAS &#x5C06;&#x5BF9;&#x8C61;&#x5934;&#x7684;&#x504F;&#x5411;&#x9501;&#x6307;&#x5411;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x3002; 3.1.2 &#x504F;&#x5411;&#x9501;&#x7684;&#x64A4;&#x9500; &#x504F;&#x5411;&#x9501;&#x4F7F;&#x7528;&#x4E86;&#x4E00;&#x79CD;&#x7B49;&#x5230;&#x7ADE;&#x4E89;&#x51FA;&#x73B0;&#x624D;&#x91CA;&#x653E;&#x9501;&#x7684;&#x673A;&#x5236;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x5C1D;&#x8BD5;&#x7ADE;&#x4E89;&#x504F;&#x5411;&#x9501;&#x65F6;&#xFF0C;&#x6301;&#x6709;&#x504F;&#x5411;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x624D;&#x4F1A;&#x91CA;&#x653E;&#x9501;&#x3002; &#x504F;&#x5411;&#x9501;&#x64A4;&#x9500;&#x7684;&#x524D;&#x63D0;&#x662F;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x5168;&#x5C40;&#x5B89;&#x5168;&#x70B9;&#xFF0C;&#x5373;&#x5728;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#x4E0A;&#x6CA1;&#x6709;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x5B57;&#x8282;&#x7801;&#x3002;&#x64A4;&#x9500;&#x4E4B;&#x540E;&#x7684;&#x504F;&#x5411;&#x9501;&#x4F1A;&#x53D8;&#x6210;&#x65E0;&#x9501;&#x72B6;&#x6001;&#xFF0C;&#x5373;&#x5177;&#x4F53; Mark Word &#x4FE1;&#x606F;&#x4F53;&#x4E2D;&#x4E0D;&#x542B;&#x672C;&#x7EBF;&#x7A0B; ID&#x3002; &#x4EE5;&#x4E0B;&#x4E3A;&#x64A4;&#x9500;&#x6D41;&#x7A0B;&#x6587;&#x5B57;&#x63CF;&#x8FF0;&#xFF1A; &#x504F;&#x5411;&#x9501;&#x64A4;&#x9500;&#x65F6;&#x9996;&#x5148;&#x6682;&#x505C;&#x62E5;&#x6709;&#x504F;&#x5411;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x7136;&#x540E;&#x68C0;&#x67E5;&#x6301;&#x6709;&#x504F;&#x5411;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x6D3B;&#x7740;&#xFF0C;&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x4E0D;&#x5904;&#x4E8E;&#x6D3B;&#x52A8;&#x72B6;&#x6001;&#xFF0C;&#x5219;&#x5C06;&#x5BF9;&#x8C61;&#x5934;&#x8BBE;&#x7F6E;&#x6210;&#x65E0;&#x9501;&#x72B6;&#x6001;&#xFF1B;&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x4ECD;&#x7136;&#x6D3B;&#x7740;&#xFF0C;&#x62E5;&#x6709;&#x504F;&#x5411;&#x9501;&#x7684;&#x6808;&#x4F1A;&#x88AB;&#x6267;&#x884C;&#xFF0C;&#x904D;&#x5386;&#x504F;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x9501;&#x8BB0;&#x5F55;&#xFF0C;&#x6808;&#x4E2D;&#x7684;&#x9501;&#x8BB0;&#x5F55;&#x548C;&#x5BF9;&#x8C61;&#x5934;&#x7684; Mark Word &#x8981;&#x4E48;&#x91CD;&#x65B0;&#x504F;&#x5411;&#x4E8E;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#xFF0C;&#x8981;&#x4E48;&#x6062;&#x590D;&#x5230;&#x65E0;&#x9501;&#x6216;&#x8005;&#x6807;&#x8BB0;&#x5BF9;&#x8C61;&#x4E0D;&#x9002;&#x5408;&#x4F5C;&#x4E3A;&#x504F;&#x5411;&#x9501;&#xFF0C;&#x6700;&#x540E;&#x5524;&#x9192;&#x6682;&#x505C;&#x7684;&#x7EBF;&#x7A0B;&#x3002; &#x4E0B;&#x56FE;&#x4E2D;&#x7684;&#x7EBF;&#x7A0B; 1 &#x6F14;&#x793A;&#x4E86;&#x504F;&#x5411;&#x9501;&#x521D;&#x59CB;&#x5316;&#x7684;&#x6D41;&#x7A0B;&#xFF0C;&#x7EBF;&#x7A0B; 2 &#x6F14;&#x793A;&#x4E86;&#x504F;&#x5411;&#x9501;&#x64A4;&#x9500;&#x7684;&#x6D41;&#x7A0B;&#x3002; 3.1.3 &#x504F;&#x5411;&#x9501;&#x7684;&#x5173;&#x95ED; &#x504F;&#x5411;&#x9501;&#x5728; Java 6 &#x548C; Java 7 &#x91CC;&#x4F1A;&#x9ED8;&#x8BA4;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x542F;&#x52A8;&#x51E0;&#x79D2;&#x949F;&#x4E4B;&#x540E;&#x6FC0;&#x6D3B;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; JVM &#x53C2;&#x6570;&#x6765;&#x5173;&#x95ED;&#x5EF6;&#x8FDF;&#xFF1A;-XX:BiasedLockingStartupDelay=0&#x3002; &#x5982;&#x679C;&#x786E;&#x5B9A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x91CC;&#x6240;&#x6709;&#x7684;&#x9501;&#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x5904;&#x4E8E;&#x7ADE;&#x4E89;&#x72B6;&#x6001;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; JVM &#x53C2;&#x6570;&#x5173;&#x95ED;&#x504F;&#x5411;&#x9501;&#xFF1A;-XX:-UseBiasedLocking=false&#xFF0C;&#x90A3;&#x4E48;&#x7A0B;&#x5E8F;&#x9ED8;&#x8BA4;&#x4F1A;&#x8FDB;&#x5165;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x72B6;&#x6001;&#x3002; 3.2 &#x81EA;&#x65CB;&#x9501;&#x9996;&#x5148;&#xFF0C;&#x5185;&#x6838;&#x6001;&#x4E0E;&#x7528;&#x6237;&#x6001;&#x7684;&#x5207;&#x6362;&#x4E0A;&#x4E0D;&#x5BB9;&#x6613;&#x4F18;&#x5316;&#x3002;&#x4F46;&#x901A;&#x8FC7;&#x81EA;&#x65CB;&#x9501;&#xFF0C;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x9020;&#x6210;&#x7684;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#xFF08;&#x5305;&#x62EC;&#x6302;&#x8D77;&#x7EBF;&#x7A0B;&#x548C;&#x6062;&#x590D;&#x7EBF;&#x7A0B;&#xFF09;&#x3002; &#x7EBF;&#x7A0B;&#x7684;&#x963B;&#x585E;&#x548C;&#x5524;&#x9192;&#x9700;&#x8981; CPU &#x4ECE;&#x7528;&#x6237;&#x6001;&#x8F6C;&#x4E3A;&#x6838;&#x5FC3;&#x6001;&#xFF0C;&#x9891;&#x7E41;&#x7684;&#x963B;&#x585E;&#x548C;&#x5524;&#x9192;&#x5BF9; CPU &#x6765;&#x8BF4;&#x662F;&#x4E00;&#x4EF6;&#x8D1F;&#x62C5;&#x5F88;&#x91CD;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x540C;&#x65F6;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;&#x5F88;&#x591A;&#x5BF9;&#x8C61;&#x9501;&#x7684;&#x9501;&#x5B9A;&#x72B6;&#x6001;&#x53EA;&#x4F1A;&#x6301;&#x7EED;&#x5F88;&#x77ED;&#x7684;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x4F8B;&#x5982;&#x6574;&#x6570;&#x7684;&#x81EA;&#x52A0;&#x64CD;&#x4F5C;&#xFF0C;&#x5728;&#x5F88;&#x77ED;&#x7684;&#x65F6;&#x95F4;&#x5185;&#x963B;&#x585E;&#x5E76;&#x5524;&#x9192;&#x7EBF;&#x7A0B;&#x663E;&#x7136;&#x4E0D;&#x503C;&#x5F97;&#xFF0C;&#x4E3A;&#x6B64;&#x5F15;&#x5165;&#x4E86;&#x81EA;&#x65CB;&#x9501;&#x3002; &#x6240;&#x8C13;&#x201D;&#x81EA;&#x65CB;&#x201D;&#xFF0C;&#x5C31;&#x662F;&#x8BA9;&#x7EBF;&#x7A0B;&#x53BB;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x65E0;&#x610F;&#x4E49;&#x7684;&#x5FAA;&#x73AF;&#xFF0C;&#x5FAA;&#x73AF;&#x7ED3;&#x675F;&#x540E;&#x518D;&#x53BB;&#x91CD;&#x65B0;&#x7ADE;&#x4E89;&#x9501;&#xFF0C;&#x5982;&#x679C;&#x7ADE;&#x4E89;&#x4E0D;&#x5230;&#x7EE7;&#x7EED;&#x5FAA;&#x73AF;&#xFF0C;&#x5FAA;&#x73AF;&#x8FC7;&#x7A0B;&#x4E2D;&#x7EBF;&#x7A0B;&#x4F1A;&#x4E00;&#x76F4;&#x5904;&#x4E8E; running &#x72B6;&#x6001;&#xFF0C;&#x4F46;&#x662F;&#x57FA;&#x4E8E; JVM &#x7684;&#x7EBF;&#x7A0B;&#x8C03;&#x5EA6;&#xFF0C;&#x4F1A;&#x51FA;&#x8BA9;&#x65F6;&#x95F4;&#x7247;&#xFF0C;&#x6240;&#x4EE5;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x4F9D;&#x65E7;&#x6709;&#x7533;&#x8BF7;&#x9501;&#x548C;&#x91CA;&#x653E;&#x9501;&#x7684;&#x673A;&#x4F1A;&#x3002; &#x81EA;&#x65CB;&#x9501;&#x7701;&#x53BB;&#x4E86;&#x963B;&#x585E;&#x9501;&#x7684;&#x65F6;&#x95F4;&#x7A7A;&#x95F4;&#xFF08;&#x961F;&#x5217;&#x7684;&#x7EF4;&#x62A4;&#x7B49;&#xFF09;&#x5F00;&#x9500;&#xFF0C;&#x4F46;&#x662F;&#x957F;&#x65F6;&#x95F4;&#x81EA;&#x65CB;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x201D;&#x5FD9;&#x5F0F;&#x7B49;&#x5F85;&#x201D;&#xFF0C;&#x5FD9;&#x5F0F;&#x7B49;&#x5F85;&#x663E;&#x7136;&#x8FD8;&#x4E0D;&#x5982;&#x963B;&#x585E;&#x9501;&#x3002;&#x5982;&#x679C;&#x6301;&#x6709;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x8D85;&#x8FC7;&#x81EA;&#x65CB;&#x7B49;&#x5F85;&#x7684;&#x6700;&#x5927;&#x65F6;&#x95F4;&#x6254;&#x6CA1;&#x6709;&#x91CA;&#x653E;&#x9501;&#xFF0C;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x5176;&#x5B83;&#x4E89;&#x7528;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x5728;&#x6700;&#x5927;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x5185;&#x8FD8;&#x662F;&#x83B7;&#x53D6;&#x4E0D;&#x5230;&#x9501;&#xFF0C;&#x8FD9;&#x65F6;&#x4E89;&#x7528;&#x7EBF;&#x7A0B;&#x4F1A;&#x505C;&#x6B62;&#x81EA;&#x65CB;&#x8FDB;&#x5165;&#x963B;&#x585E;&#x72B6;&#x6001;&#x3002; &#x81EA;&#x65CB;&#x9501;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x5360;&#x7740; CPU &#x7684;&#x8D44;&#x6E90;&#x4E0D;&#x91CA;&#x653E;&#xFF0C;&#x7B49;&#x5230;&#x83B7;&#x53D6;&#x5230;&#x9501;&#x7ACB;&#x5373;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x81EA;&#x65CB;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x592A;&#x957F;&#xFF0C;&#x4F1A;&#x6709;&#x5927;&#x91CF;&#x7684;&#x7EBF;&#x7A0B;&#x5904;&#x4E8E;&#x81EA;&#x65CB;&#x72B6;&#x6001;&#x5360;&#x7528; CPU &#x8D44;&#x6E90;&#xFF0C;&#x8FDB;&#x800C;&#x4F1A;&#x5F71;&#x54CD;&#x6574;&#x4F53;&#x7CFB;&#x7EDF;&#x7684;&#x6027;&#x80FD;&#x3002;&#x56E0;&#x6B64;&#x81EA;&#x65CB;&#x7684;&#x5468;&#x671F;&#x9009;&#x7684;&#x989D;&#x5916;&#x91CD;&#x8981;&#x3002; JVM &#x5BF9;&#x4E8E;&#x81EA;&#x65CB;&#x5468;&#x671F;&#x7684;&#x9009;&#x62E9;&#xFF0C;JDK 1.5 &#x4E2D;&#x8FD9;&#x9650;&#x5EA6;&#x662F;&#x4E00;&#x5B9A;&#x8981;&#x5199;&#x6B7B;&#xFF0C;&#x5728; JDK 1.6 &#x5F15;&#x5165;&#x4E86;&#x9002;&#x5E94;&#x6027;&#x81EA;&#x65CB;&#x9501;&#xFF0C;&#x9002;&#x5E94;&#x6027;&#x81EA;&#x65CB;&#x9501;&#x610F;&#x5473;&#x7740;&#x81EA;&#x65CB;&#x7684;&#x65F6;&#x95F4;&#x4E0D;&#x5728;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#x4E86;&#xFF0C;&#x800C;&#x662F;&#x7531;&#x524D;&#x4E00;&#x6B21;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x9501;&#x4E0A;&#x7684;&#x81EA;&#x65CB;&#x65F6;&#x95F4;&#x4EE5;&#x53CA;&#x9501;&#x7684;&#x62E5;&#x6709;&#x8005;&#x7684;&#x72B6;&#x6001;&#x6765;&#x51B3;&#x5B9A;&#xFF0C;&#x57FA;&#x672C;&#x8BA4;&#x4E3A;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x7684;&#x65F6;&#x95F4;&#x662F;&#x6700;&#x4F73;&#x7684;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#xFF0C;&#x540C;&#x65F6; JVM &#x8FD8;&#x9488;&#x5BF9;&#x5F53;&#x524D; CPU &#x7684;&#x8D1F;&#x8377;&#x60C5;&#x51B5;&#x505A;&#x4E86;&#x8F83;&#x591A;&#x7684;&#x4F18;&#x5316;&#x3002; 3.3 &#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x81EA;&#x65CB;&#x9501;&#x7684;&#x76EE;&#x6807;&#x662F;&#x964D;&#x4F4E;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x6210;&#x672C;&#x3002;&#x5982;&#x679C;&#x9501;&#x7ADE;&#x4E89;&#x6FC0;&#x70C8;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x5F97;&#x4E0D;&#x4F9D;&#x8D56;&#x4E8E;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#xFF0C;&#x8BA9;&#x7ADE;&#x4E89;&#x5931;&#x8D25;&#x7684;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#xFF1B;&#x5982;&#x679C;&#x5B8C;&#x5168;&#x6CA1;&#x6709;&#x5B9E;&#x9645;&#x7684;&#x9501;&#x7ADE;&#x4E89;&#xFF0C;&#x90A3;&#x4E48;&#x7533;&#x8BF7;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#x90FD;&#x662F;&#x6D6A;&#x8D39;&#x7684;&#x3002;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x7684;&#x76EE;&#x6807;&#x662F;&#xFF0C;&#x51CF;&#x5C11;&#x65E0;&#x5B9E;&#x9645;&#x7ADE;&#x4E89;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F7F;&#x7528;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#x4EA7;&#x751F;&#x7684;&#x6027;&#x80FD;&#x6D88;&#x8017;&#xFF0C;&#x5305;&#x62EC;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x5F15;&#x8D77;&#x7684;&#x5185;&#x6838;&#x6001;&#x4E0E;&#x7528;&#x6237;&#x6001;&#x5207;&#x6362;&#x3001;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x9020;&#x6210;&#x7684;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7B49;&#x3002;&#x56E0;&#x6B64;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x662F;&#x76F8;&#x5BF9;&#x4E8E;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#x800C;&#x8A00;&#x7684;&#x3002; &#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x662F;&#x7531;&#x504F;&#x5411;&#x9501;&#x5347;&#x7EA7;&#x6765;&#x7684;&#xFF0C;&#x504F;&#x5411;&#x9501;&#x8FD0;&#x884C;&#x5728;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x8FDB;&#x5165;&#x540C;&#x6B65;&#x5757;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5F53;&#x7B2C;&#x4E8C;&#x4E2A;&#x7EBF;&#x7A0B;&#x52A0;&#x5165;&#x9501;&#x4E89;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x504F;&#x5411;&#x9501;&#x5C31;&#x4F1A;&#x5347;&#x7EA7;&#x4E3A;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x3002; &#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x7684;&#x52A0;&#x9501; &#x7EBF;&#x7A0B;&#x5728;&#x6267;&#x884C;&#x540C;&#x6B65;&#x5757;&#x4E4B;&#x524D;&#xFF0C;JVM &#x4F1A;&#x5148;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7684;&#x6808;&#x6862;&#x4E2D;&#x521B;&#x5EFA;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x9501;&#x8BB0;&#x5F55;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x5E76;&#x5C06;&#x5BF9;&#x8C61;&#x5934;&#x4E2D;&#x7684; Mark Word &#x590D;&#x5236;&#x5230;&#x9501;&#x8BB0;&#x5F55;&#x4E2D;&#xFF0C;&#x5B98;&#x65B9;&#x79F0;&#x4E3A; Displaced Mark Word&#x3002;&#x7136;&#x540E;&#x7EBF;&#x7A0B;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528; CAS &#x5C06;&#x5BF9;&#x8C61;&#x5934;&#x4E2D;&#x7684; Mark Word &#x66FF;&#x6362;&#x4E3A;&#x6307;&#x5411;&#x9501;&#x8BB0;&#x5F55;&#x7684;&#x6307;&#x9488;&#x3002; &#x5982;&#x679C;&#x6210;&#x529F;&#xFF0C;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x83B7;&#x5F97;&#x9501;&#x3002; &#x5982;&#x679C;&#x5931;&#x8D25;&#xFF0C;&#x8868;&#x793A;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x7ADE;&#x4E89;&#x9501;&#xFF0C;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x4FBF;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528;&#x81EA;&#x65CB;&#x6765;&#x83B7;&#x53D6;&#x9501;&#x3002; &#x5F53;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x4F7F;&#x7528;&#x81EA;&#x65CB;&#x7684;&#x65B9;&#x5F0F;&#x83B7;&#x53D6;&#x9501;&#x4ECD;&#x7136;&#x5931;&#x8D25;&#x65F6;&#xFF0C;&#x8868;&#x793A;&#x5B58;&#x5728;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x7ADE;&#x4E89;&#x9501;&#xFF08;&#x4E24;&#x6761;&#x6216;&#x4E24;&#x6761;&#x4EE5;&#x4E0A;&#x7684;&#x7EBF;&#x7A0B;&#x7ADE;&#x4E89;&#x540C;&#x4E00;&#x4E2A;&#x9501;&#xFF09;&#xFF0C;&#x5219;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x4F1A;&#x81A8;&#x80C0;&#x6210;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#x3002; &#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x7684;&#x89E3;&#x9501; &#x8F7B;&#x91CF;&#x7EA7;&#x89E3;&#x9501;&#x65F6;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;&#x539F;&#x5B50;&#x7684; CAS &#x64CD;&#x4F5C;&#x6765;&#x5C06; Displaced Mark Word &#x66FF;&#x6362;&#x56DE;&#x5230;&#x5BF9;&#x8C61;&#x5934;&#xFF1A; &#x5982;&#x679C;&#x6210;&#x529F;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x540C;&#x6B65;&#x8FC7;&#x7A0B;&#x5DF2;&#x5B8C;&#x6210;&#x3002; &#x5982;&#x679C;&#x5931;&#x8D25;&#xFF0C;&#x8868;&#x793A;&#x5F53;&#x524D;&#x9501;&#x5B58;&#x5728;&#x7ADE;&#x4E89;&#xFF0C;&#x9501;&#x5C31;&#x4F1A;&#x81A8;&#x80C0;&#x6210;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#x3002;&#x5728;&#x91CA;&#x653E;&#x9501;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x5524;&#x9192;&#x88AB;&#x6302;&#x8D77;&#x7684;&#x7EBF;&#x7A0B;&#x3002; &#x8F7B;&#x91CF;&#x9501;&#x4E0E;&#x504F;&#x5411;&#x9501;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF1A; &#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x6BCF;&#x6B21;&#x9000;&#x51FA;&#x540C;&#x6B65;&#x5757;&#x90FD;&#x9700;&#x8981;&#x91CA;&#x653E;&#x9501;&#xFF0C;&#x800C;&#x504F;&#x5411;&#x9501;&#x662F;&#x5728;&#x7ADE;&#x4E89;&#x53D1;&#x751F;&#x65F6;&#x624D;&#x91CA;&#x653E;&#x9501; &#x6BCF;&#x6B21;&#x8FDB;&#x5165;&#x9000;&#x51FA;&#x540C;&#x6B65;&#x5757;&#x90FD;&#x9700;&#x8981; CAS &#x66F4;&#x65B0;&#x5BF9;&#x8C61;&#x5934; &#x4E89;&#x593A;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x5931;&#x8D25;&#x65F6;&#xFF0C;&#x81EA;&#x65CB;&#x5C1D;&#x8BD5;&#x62A2;&#x5360;&#x9501; &#x56E0;&#x4E3A;&#x81EA;&#x65CB;&#x4F1A;&#x6D88;&#x8017; CPU&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x65E0;&#x7528;&#x7684;&#x81EA;&#x65CB;&#xFF08;&#x6BD4;&#x5982;&#x83B7;&#x5F97;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x88AB;&#x963B;&#x585E;&#x4F4F;&#x4E86;&#xFF09;&#xFF0C;&#x4E00;&#x65E6;&#x9501;&#x5347;&#x7EA7;&#x6210;&#x91CD;&#x91CF;&#x7EA7;&#x9501;&#xFF0C;&#x5C31;&#x4E0D;&#x4F1A;&#x518D;&#x6062;&#x590D;&#x5230;&#x8F7B;&#x91CF;&#x7EA7;&#x9501;&#x72B6;&#x6001;&#x3002;&#x5F53;&#x9501;&#x5904;&#x4E8E;&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x4E0B;&#xFF0C;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x8BD5;&#x56FE;&#x83B7;&#x53D6;&#x9501;&#x65F6;&#xFF0C;&#x90FD;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#x4F4F;&#xFF0C;&#x5F53;&#x6301;&#x6709;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x91CA;&#x653E;&#x9501;&#x4E4B;&#x540E;&#x4F1A;&#x5524;&#x9192;&#x8FD9;&#x4E9B;&#x7EBF;&#x7A0B;&#xFF0C;&#x88AB;&#x5524;&#x9192;&#x7684;&#x7EBF;&#x7A0B;&#x5C31;&#x4F1A;&#x8FDB;&#x884C;&#x65B0;&#x4E00;&#x8F6E;&#x7684;&#x593A;&#x9501;&#x4E4B;&#x4E89;&#x3002; 3.4 &#x91CD;&#x91CF;&#x7EA7;&#x9501;&#x91CD;&#x91CF;&#x9501;&#x5728; JVM &#x4E2D;&#x53C8;&#x53EB;&#x5BF9;&#x8C61;&#x76D1;&#x89C6;&#x5668;&#xFF08;Monitor&#xFF09;&#xFF0C;&#x5B83;&#x5F88;&#x50CF; C &#x4E2D;&#x7684;Mutex&#xFF0C;&#x9664;&#x4E86;&#x5177;&#x5907; Mutex(0|1) &#x4E92;&#x65A5;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5B83;&#x8FD8;&#x8D1F;&#x8D23;&#x5B9E;&#x73B0;&#x4E86; Semaphore &#xFF08;&#x4FE1;&#x53F7;&#x91CF;&#xFF09;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5B83;&#x81F3;&#x5C11;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x7ADE;&#x4E89;&#x9501;&#x7684;&#x961F;&#x5217;&#xFF0C;&#x548C;&#x4E00;&#x4E2A;&#x4FE1;&#x53F7;&#x963B;&#x585E;&#x961F;&#x5217;&#xFF08;wait &#x961F;&#x5217;&#xFF09;&#xFF0C;&#x524D;&#x8005;&#x8D1F;&#x8D23;&#x505A;&#x4E92;&#x65A5;&#xFF0C;&#x540E;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x505A;&#x7EBF;&#x7A0B;&#x540C;&#x6B65;&#x3002; 3.5 &#x9501;&#x7684;&#x4F18;&#x7F3A;&#x70B9;&#x7684;&#x5BF9;&#x6BD4;&#x504F;&#x5411;&#x9501; &#x4F18;&#x70B9;&#x52A0;&#x9501;&#x548C;&#x89E3;&#x9501;&#x4E0D;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x6D88;&#x8017;&#xFF0C;&#x548C;&#x6267;&#x884C;&#x975E;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x6BD4;&#x4EC5;&#x5B58;&#x5728;&#x7EB3;&#x79D2;&#x7EA7;&#x7684;&#x5DEE;&#x8DDD;&#x3002; &#x7F3A;&#x70B9;&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x95F4;&#x5B58;&#x5728;&#x9501;&#x7ADE;&#x4E89;&#xFF0C;&#x4F1A;&#x5E26;&#x6765;&#x989D;&#x5916;&#x7684;&#x9501;&#x64A4;&#x9500;&#x7684;&#x6D88;&#x8017;&#x3002; &#x9002;&#x7528;&#x573A;&#x666F;&#x9002;&#x7528;&#x4E8E;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x8BBF;&#x95EE;&#x540C;&#x6B65;&#x5757;&#x573A;&#x666F;&#x3002; &#x8F7B;&#x91CF;&#x7EA7;&#x9501; &#x4F18;&#x70B9;&#x7ADE;&#x4E89;&#x7684;&#x7EBF;&#x7A0B;&#x4E0D;&#x4F1A;&#x963B;&#x585E;&#xFF0C;&#x63D0;&#x9AD8;&#x4E86;&#x7A0B;&#x5E8F;&#x7684;&#x54CD;&#x5E94;&#x901F;&#x5EA6;&#x3002; &#x7F3A;&#x70B9;&#x5982;&#x679C;&#x59CB;&#x7EC8;&#x5F97;&#x4E0D;&#x5230;&#x9501;&#x7ADE;&#x4E89;&#x7684;&#x7EBF;&#x7A0B;&#x4F7F;&#x7528;&#x81EA;&#x65CB;&#x4F1A;&#x6D88;&#x8017; CPU&#x3002; &#x9002;&#x7528;&#x573A;&#x666F;&#x8FFD;&#x6C42;&#x54CD;&#x5E94;&#x65F6;&#x95F4;&#xFF0C;&#x9501;&#x5360;&#x7528;&#x65F6;&#x95F4;&#x5F88;&#x77ED;&#xFF08;&#x540C;&#x6B65;&#x5757;&#x6267;&#x884C;&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x5FEB;&#xFF09;&#x3002; &#x91CD;&#x91CF;&#x7EA7;&#x9501; &#x4F18;&#x70B9;&#x7EBF;&#x7A0B;&#x7ADE;&#x4E89;&#x4E0D;&#x4F7F;&#x7528;&#x81EA;&#x65CB;&#xFF0C;&#x4E0D;&#x4F1A;&#x6D88;&#x8017; CPU &#x3002; &#x7F3A;&#x70B9;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#xFF0C;&#x54CD;&#x5E94;&#x65F6;&#x95F4;&#x7F13;&#x6162;&#x3002; &#x9002;&#x7528;&#x573A;&#x666F;&#x8FFD;&#x6C42;&#x541E;&#x5410;&#x91CF;&#xFF0C;&#x540C;&#x6B65;&#x5757;&#x6267;&#x884C;&#x901F;&#x5EA6;&#x8F83;&#x957F;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>并发编程</category>
      </categories>
      <tags>
        <tag>并发编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[并发编程的艺术 | 学习笔记（一）]]></title>
    <url>%2F2018%2F12%2F18%2F003%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E00;&#x7AE0; &#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x7684;&#x6311;&#x6218;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x5F97;&#x66F4;&#x5FEB;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x8BA9;&#x7A0B;&#x5E8F;&#x6700;&#x5927;&#x9650;&#x5EA6;&#x7684;&#x5E76;&#x53D1;&#x8FD0;&#x884C;&#x3002; &#x4ECE;&#x4E0A;&#x8FF0;&#x63CF;&#x8FF0;&#x4E2D;&#x53EF;&#x4EE5;&#x5F97;&#x77E5;&#xFF1A;&#x5FEB;&#x662F;&#x7EC8;&#x6781;&#x76EE;&#x6807;&#xFF0C;&#x800C;&#x5E76;&#x53D1;&#x53EA;&#x662F;&#x4E00;&#x79CD;&#x8FBE;&#x6210;&#x76EE;&#x7684;&#x7684;&#x624B;&#x6BB5;&#xFF0C;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x4E00;&#x5473;&#x7684;&#x8FFD;&#x6C42;&#x6781;&#x9650;&#x5E76;&#x53D1;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x9047;&#x5230;&#x5F88;&#x591A;&#x6311;&#x6218;&#xFF1A;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x7684;&#x95EE;&#x9898;&#x3001;&#x6B7B;&#x9501;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4EE5;&#x53CA;&#x53D7;&#x9650;&#x4E8E;&#x786C;&#x4EF6;&#x548C;&#x8F6F;&#x4EF6;&#x7684;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x95EE;&#x9898;&#x3002; &#x4E00;&#x3001;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x65F6;&#x95F4;&#x7247; &#x5373;&#x4F7F;&#x662F;&#x5355;&#x6838;&#x5904;&#x7406;&#x5668;&#x4E5F;&#x652F;&#x6301;&#x591A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x4EE3;&#x7801;&#xFF0C;CPU &#x901A;&#x8FC7;&#x7ED9;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x5206;&#x914D; CPU &#x65F6;&#x95F4;&#x7247;&#x6765;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x673A;&#x5236;&#x3002;&#x65F6;&#x95F4;&#x7247;&#x662F; CPU&#x5206;&#x914D;&#x7ED9;&#x5404;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x65F6;&#x95F4;&#x7247;&#x975E;&#x5E38;&#x77ED;&#xFF0C;&#x6240;&#x4EE5;CPU&#x901A;&#x8FC7;&#x4E0D;&#x505C;&#x5730;&#x5207;&#x6362;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x611F;&#x89C9;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x662F;&#x540C;&#x65F6;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x65F6;&#x95F4;&#x7247;&#x4E00;&#x822C;&#x662F;&#x51E0;&#x5341;&#x6BEB;&#x79D2;&#xFF08;ms&#xFF09;&#x3002; &#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362; CPU&#x901A;&#x8FC7;&#x65F6;&#x95F4;&#x7247;&#x5206;&#x914D;&#x7B97;&#x6CD5;&#x6765;&#x5FAA;&#x73AF;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#xFF0C;&#x5F53;&#x524D;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x540E;&#x4F1A;&#x5207;&#x6362;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5728;&#x5207;&#x6362;&#x524D;&#x4F1A;&#x4FDD;&#x5B58;&#x4E0A;&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E0B;&#x6B21;&#x5207;&#x6362;&#x56DE;&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x518D;&#x52A0;&#x8F7D;&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x7684;&#x72B6;&#x6001;&#x3002;&#x6240;&#x4EE5;&#x4EFB;&#x52A1;&#x4ECE;&#x4FDD;&#x5B58;&#x5230;&#x518D;&#x52A0;&#x8F7D;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x4E00;&#x6B21;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x3002; &#x65F6;&#x95F4;&#x7247;&#x5206;&#x914D;&#x7B97;&#x6CD5;&#x4E2D;&#x7684;&#x65F6;&#x95F4;&#x7247;&#x8F6E;&#x8F6C;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#x662F;&#x4E00;&#x79CD;&#x6700;&#x53E4;&#x8001;&#xFF0C;&#x6700;&#x7B80;&#x5355;&#xFF0C;&#x6700;&#x516C;&#x5E73;&#x4E14;&#x4F7F;&#x7528;&#x6700;&#x5E7F;&#x7684;&#x7B97;&#x6CD5;&#x3002; &#x57FA;&#x672C;&#x539F;&#x7406;&#xFF1A; &#x5728;&#x65E9;&#x671F;&#x7684;&#x65F6;&#x95F4;&#x7247;&#x8F6E;&#x8F6C;&#x6CD5;&#x4E2D;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C06;&#x6240;&#x6709;&#x7684;&#x5C31;&#x7EEA;&#x8FDB;&#x7A0B;&#x6309;&#x5148;&#x6765;&#x5148;&#x670D;&#x52A1;&#x7684;&#x539F;&#x5219;&#xFF0C;&#x6392;&#x6210;&#x4E00;&#x4E2A;&#x961F;&#x5217;,&#x6BCF;&#x6B21;&#x8C03;&#x5EA6;&#x65F6;&#xFF0C;&#x628A; CPU &#x5206;&#x914D;&#x7ED9;&#x961F;&#x9996;&#x8FDB;&#x7A0B;&#xFF0C;&#x5E76;&#x4EE4;&#x5176;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x3002;&#x65F6;&#x95F4;&#x7247;&#x7684;&#x5927;&#x5C0F;&#x4ECE;&#x51E0; ms &#x5230;&#x51E0;&#x767E; ms&#x3002;&#x5F53;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x7247;&#x7528;&#x5B8C;&#x65F6;&#xFF0C;&#x7531;&#x4E00;&#x4E2A;&#x8BA1;&#x65F6;&#x5668;&#x53D1;&#x51FA;&#x65F6;&#x949F;&#x4E2D;&#x65AD;&#x8BF7;&#x6C42;&#xFF0C;&#x8C03;&#x5EA6;&#x7A0B;&#x5E8F;&#x4FBF;&#x636E;&#x6B64;&#x4FE1;&#x53F7;&#x6765;&#x505C;&#x6B62;&#x8BE5;&#x8FDB;&#x7A0B;&#x7684;&#x6267;&#x884C;&#xFF0C;&#x5E76;&#x5C06;&#x5B83;&#x9001;&#x5F80;&#x5C31;&#x7EEA;&#x961F;&#x5217;&#x7684;&#x672B;&#x5C3E;&#x3002;&#x7136;&#x540E;&#x518D;&#x628A;&#x5904;&#x7406;&#x673A;&#x5206;&#x914D;&#x7ED9;&#x5C31;&#x7EEA;&#x961F;&#x5217;&#x4E2D;&#x65B0;&#x7684;&#x961F;&#x9996;&#x8FDB;&#x7A0B;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x8BA9;&#x5B83;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x7247;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x5C31;&#x7EEA;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x8FDB;&#x7A0B;&#xFF0C;&#x5728;&#x4E00;&#x7ED9;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5185;&#xFF0C;&#x5747;&#x80FD;&#x83B7;&#x5F97;&#x4E00;&#x65F6;&#x95F4;&#x7247;&#x7684;&#x5904;&#x7406;&#x673A;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002; &#x4ECE;&#x4E0A;&#x8FF0;&#x63CF;&#x8FF0;&#x4E2D;&#x53EF;&#x4EE5;&#x5F97; CPU &#x7ED9;&#x7EBF;&#x7A0B;&#x9891;&#x7E41;&#x5206;&#x914D;&#x65F6;&#x95F4;&#x7247;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F1A;&#x9891;&#x7E41;&#x7684;&#x8BB0;&#x5F55;&#x4EFB;&#x52A1;&#x72B6;&#x6001;&#x518D;&#x52A0;&#x8F7D;&#x4EFB;&#x52A1;&#x72B6;&#x6001;&#xFF0C;&#x7B80;&#x79F0;&#x4E3A;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#xFF0C;&#x4F1A;&#x5B58;&#x5728;&#x9690;&#x5F62;&#x7684;&#x6027;&#x80FD;&#x5F00;&#x9500;&#x95EE;&#x9898;&#x3002; 1.1 &#x6D4B;&#x8BD5;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x6B21;&#x6570;&#x548C;&#x65F6;&#x957F;&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;&#xFF1A; &#x4F7F;&#x7528;Lmbench3&#x53EF;&#x4EE5;&#x6D4B;&#x91CF;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x7684;&#x65F6;&#x957F;&#x3002;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;http://www.bitmover.com/lmbench/get_lmbench.html &#x4F7F;&#x7528;vmstat&#x53EF;&#x4EE5;&#x6D4B;&#x91CF;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x7684;&#x6B21;&#x6570;&#x3002;vmstat&#xFF08;Virtual Meomory Statistics&#xFF0C;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x7EDF;&#x8BA1;&#xFF09;&#x662F; Linux &#x7CFB;&#x7EDF;&#x4E2D;&#x76D1;&#x63A7;&#x5185;&#x5B58;&#x7684;&#x5E38;&#x7528;&#x5DE5;&#x5177;&#xFF0C;&#x53EF;&#x5BF9;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x3001;&#x8FDB;&#x7A0B;&#x3001;CPU&#x7B49;&#x7684;&#x6574;&#x4F53;&#x60C5;&#x51B5;&#x8FDB;&#x884C;&#x76D1;&#x89C6;&#x3002; 1.2 &#x5982;&#x4F55;&#x51CF;&#x5C11;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x51CF;&#x5C11;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#xFF1A;&#x65E0;&#x9501;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x3001;CAS &#x7B97;&#x6CD5;&#x3001;&#x4F7F;&#x7528;&#x6700;&#x5C11;&#x7EBF;&#x7A0B;&#x548C;&#x4F7F;&#x7528;&#x534F;&#x7A0B;&#x3002; &#x65E0;&#x9501;&#x5E76;&#x53D1;&#x7F16;&#x7A0B; &#x591A;&#x7EBF;&#x7A0B;&#x7ADE;&#x4E89;&#x9501;&#x65F6;&#xFF0C;&#x4F1A;&#x5F15;&#x8D77;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#xFF0C;&#x6240;&#x4EE5;&#x591A;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x4E9B;&#x529E;&#x6CD5;&#x6765;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x9501;&#xFF0C;&#x5982;&#x5C06;&#x6570;&#x636E;&#x7684;ID&#x6309;&#x7167;Hash&#x7B97;&#x6CD5;&#x53D6;&#x6A21;&#x5206;&#x6BB5;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x6BB5;&#x7684;&#x6570;&#x636E;&#x3002; CAS &#x7B97;&#x6CD5; Java &#x7684; Atomic &#x5305;&#x4F7F;&#x7528; CAS &#x7B97;&#x6CD5;&#x6765;&#x66F4;&#x65B0;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x52A0;&#x9501;&#x3002; &#x4F7F;&#x7528;&#x6700;&#x5C11;&#x7EBF;&#x7A0B; &#x907F;&#x514D;&#x521B;&#x5EFA;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x6BD4;&#x5982;&#x4EFB;&#x52A1;&#x5F88;&#x5C11;&#xFF0C;&#x4F46;&#x662F;&#x521B;&#x5EFA;&#x4E86;&#x5F88;&#x591A;&#x7EBF;&#x7A0B;&#x6765;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x6837;&#x4F1A;&#x9020;&#x6210;&#x5927;&#x91CF;&#x7EBF;&#x7A0B;&#x90FD;&#x5904;&#x4E8E;&#x7B49;&#x5F85;&#x72B6;&#x6001;&#x3002; &#x534F;&#x7A0B; &#x5728;&#x5355;&#x7EBF;&#x7A0B;&#x91CC;&#x5B9E;&#x73B0;&#x591A;&#x4EFB;&#x52A1;&#x7684;&#x8C03;&#x5EA6;&#xFF0C;&#x5E76;&#x5728;&#x5355;&#x7EBF;&#x7A0B;&#x91CC;&#x7EF4;&#x6301;&#x591A;&#x4E2A;&#x4EFB;&#x52A1;&#x95F4;&#x7684;&#x5207;&#x6362;&#x3002; 1.3 &#x51CF;&#x5C11;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x5B9E;&#x6218;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x6709;&#x5927;&#x91CF;&#x7EBF;&#x7A0B;&#x5904;&#x4E8E; WAITING &#x72B6;&#x6001;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Java &#x81EA;&#x5E26;&#x7684;jstack&#x547D;&#x4EE4;dump &#x51FA;&#x6240;&#x6709;&#x7EBF;&#x7A0B;&#x72B6;&#x6001;&#x7684;&#x7EDF;&#x8BA1;&#x4FE1;&#x606F;&#xFF0C;&#x901A;&#x8FC7;&#x7EDF;&#x8BA1;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x627E;&#x51FA;&#x76F8;&#x5E94;&#x7684; WAITING &#x7EBF;&#x7A0B;&#xFF0C;&#x5E76;&#x5C06;&#x8FD9;&#x4E2A; WAITING &#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x7EBF;&#x7A0B;&#x6570;&#x51CF;&#x5C11;&#x4E00;&#x4E9B;&#xFF0C;&#x56E0;&#x4E3A; WAITING &#x7684;&#x539F;&#x56E0;&#x6B63;&#x662F;&#x7531;&#x4E8E;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x5360;&#x7528;&#x4E86; CPU &#x7684;&#x5927;&#x91CF;&#x8D44;&#x6E90;&#x3002; &#x4E8C;&#x3001;&#x6B7B;&#x9501;&#x6B7B;&#x9501;&#x6A21;&#x62DF;&#xFF1A; &#x6B7B;&#x9501;&#x6A21;&#x62DF;1234567891011121314151617181920212223242526272829303132333435public class DeadLockDemo { privat static String A = &quot;A&quot;; private static String B = &quot;B&quot;; public static void main(String[] args) { new DeadLockDemo().deadLock(); } private void deadLock() { Thread t1 = new Thread(new Runnable() { @Override publicvoid run() { synchronized (A) { try { Thread.currentThread().sleep(2000); } catch (InterruptedException e) { e.printStackTrace(); } synchronized (B) { System.out.println(&quot;1&quot;); } } } }); Thread t2 = new Thread(new Runnable() { @Override publicvoid run() { synchronized (B) { synchronized (A) { System.out.println(&quot;2&quot;); } } } }); t1.start(); t2.start(); }} &#x7EBF;&#x7A0B; t1 &#x5728;&#x6293; A &#x9501;&#x7684;&#x540C;&#x65F6;&#x8FD8;&#x8981; B &#x9501;&#xFF0C;&#x7EBF;&#x7A0B; tA &#x5728;&#x6293; B &#x9501;&#x7684;&#x540C;&#x65F6;&#x8FD8;&#x8981; A &#x9501;&#xFF0C;&#x5F53;&#x51FA;&#x73B0;&#x4E24;&#x8005;&#x90FD;&#x6293;&#x7740;&#x5176;&#x4E2D;&#x4E00;&#x628A;&#xFF0C;&#x7B49;&#x7740;&#x5BF9;&#x65B9;&#x628A;&#x53E6;&#x4E00;&#x628A;&#x9501;&#x91CA;&#x653E;&#x65F6;&#xFF0C;&#x6B7B;&#x9501;&#x5C31;&#x51FA;&#x73B0;&#x4E86;&#x3002; &#x5728;&#x4E00;&#x4E9B;&#x590D;&#x6742;&#x7684;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x9047;&#x5230;&#x4E0A;&#x8FF0;&#x8FD9;&#x6837;&#x7C7B;&#x4F3C;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982; t1 &#x62FF;&#x5230;&#x9501;&#x4E4B;&#x540E;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x4E9B;&#x5F02;&#x5E38;&#x60C5;&#x51B5;&#x6CA1;&#x6709;&#x91CA;&#x653E;&#x9501;&#xFF08;&#x6B7B;&#x5FAA;&#x73AF;&#xFF09;&#x3002;&#x53C8;&#x6216;&#x8005;&#x662F; t1 &#x62FF;&#x5230;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x9501;&#xFF0C;&#x91CA;&#x653E;&#x9501;&#x7684;&#x65F6;&#x5019;&#x629B;&#x51FA;&#x4E86;&#x5F02;&#x5E38;&#xFF0C;&#x6CA1;&#x91CA;&#x653E;&#x6389;&#x3002; &#x4E00;&#x65E6;&#x51FA;&#x73B0;&#x6B7B;&#x9501;&#xFF0C;&#x4E1A;&#x52A1;&#x662F;&#x53EF;&#x611F;&#x77E5;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x80FD;&#x7EE7;&#x7EED;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x53EA;&#x80FD;&#x901A;&#x8FC7; dump &#x7EBF;&#x7A0B;&#x67E5;&#x770B;&#x5230;&#x5E95;&#x662F;&#x54EA;&#x4E2A;&#x7EBF;&#x7A0B;&#x51FA;&#x73B0;&#x4E86;&#x95EE;&#x9898;&#x3002; &#x907F;&#x514D;&#x6B7B;&#x9501;&#x7684;&#x51E0;&#x4E2A;&#x5E38;&#x89C1;&#x65B9;&#x6CD5; &#x907F;&#x514D;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x83B7;&#x53D6;&#x591A;&#x4E2A;&#x9501;&#x3002; &#x907F;&#x514D;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5728;&#x9501;&#x5185;&#x540C;&#x65F6;&#x5360;&#x7528;&#x591A;&#x4E2A;&#x8D44;&#x6E90;&#xFF0C;&#x5C3D;&#x91CF;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x9501;&#x53EA;&#x5360;&#x7528;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#x3002; &#x5C1D;&#x8BD5;&#x4F7F;&#x7528;&#x5B9A;&#x65F6;&#x9501;&#xFF0C;&#x4F7F;&#x7528;lock.tryLock(timeout)&#x6765;&#x66FF;&#x4EE3;&#x4F7F;&#x7528;&#x5185;&#x90E8;&#x9501;&#x673A;&#x5236;&#x3002; &#x5BF9;&#x4E8E;&#x6570;&#x636E;&#x5E93;&#x9501;&#xFF0C;&#x52A0;&#x9501;&#x548C;&#x89E3;&#x9501;&#x5FC5;&#x987B;&#x5728;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x91CC;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x89E3;&#x9501;&#x5931;&#x8D25;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x4E09;&#x3001;&#x8D44;&#x6E90;&#x9650;&#x5236;1.1 &#x4EC0;&#x4E48;&#x662F;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x662F;&#x6307;&#x5728;&#x8FDB;&#x884C;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x65F6;&#xFF0C;&#x7A0B;&#x5E8F;&#x7684;&#x6267;&#x884C;&#x901F;&#x5EA6;&#x53D7;&#x9650;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x786C;&#x4EF6;&#x8D44;&#x6E90;&#x6216;&#x8F6F;&#x4EF6;&#x8D44;&#x6E90;&#x3002; &#x786C;&#x4EF6;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x6709;&#x5E26;&#x5BBD;&#x7684;&#x4E0A;&#x4F20;/&#x4E0B;&#x8F7D;&#x901F;&#x5EA6;&#x3001;&#x786C;&#x76D8;&#x8BFB;&#x5199;&#x901F;&#x5EA6;&#x548C;CPU&#x7684;&#x5904;&#x7406;&#x901F;&#x5EA6;&#x3002; &#x8F6F;&#x4EF6;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x6709;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8FDE;&#x63A5;&#x6570;&#x548C; socket &#x8FDE;&#x63A5;&#x6570;&#x7B49;&#x3002; &#x4F7F;&#x7528;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x5E76;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x8FD9;&#x4E9B;&#x786C;&#x4EF6;&#x8D44;&#x6E90;&#x7269;&#x7406;&#x9650;&#x5236;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x6570;&#x9650;&#x5236;&#x867D;&#x7136;&#x5C5E;&#x4E8E;&#x8F6F;&#x4EF6;&#x8D44;&#x6E90;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x8C03;&#x7528;&#x8005;&#x6765;&#x8BF4;&#xFF0C;&#x4E5F;&#x662F;&#x4E0D;&#x53EF;&#x903E;&#x8D8A;&#x7684;&#x5C4F;&#x969C;&#x3002; 1.2 &#x8D44;&#x6E90;&#x9650;&#x5236;&#x5E26;&#x6765;&#x7684;&#x95EE;&#x9898;&#x56E0;&#x4E3A;&#x53D7;&#x5230;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x95EE;&#x9898;&#xFF0C;&#x5BFC;&#x81F4;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x7684;&#x7A0B;&#x5E8F;&#x5F97;&#x4E0D;&#x5230;&#x5145;&#x5206;&#x7684;&#x65BD;&#x5C55;&#xFF0C;&#x56E0;&#x4E3A;&#x5F53;&#x67D0;&#x6BB5;&#x4EE3;&#x7801;&#x672C;&#x6765;&#x53EF;&#x4EE5;&#x4E32;&#x884C;&#x6267;&#x884C;&#xFF0C;&#x7ED3;&#x679C;&#x6539;&#x6210;&#x4E86;&#x5E76;&#x53D1;&#x6267;&#x884C;&#xFF0C;&#x7531;&#x4E8E;&#x8D44;&#x6E90;&#x9650;&#x5236;&#xFF0C;&#x5B83;&#x4EEC;&#x4ECD;&#x7136;&#x5728;&#x4E32;&#x884C;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x7A0B;&#x5E8F;&#x4E0D;&#x4EC5;&#x4E0D;&#x4F1A;&#x52A0;&#x5FEB;&#x6267;&#x884C;&#xFF0C;&#x53CD;&#x800C;&#x4F1A;&#x66F4;&#x6162;&#xFF0C;&#x56E0;&#x4E3A;&#x589E;&#x52A0;&#x4E86;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x548C;&#x8D44;&#x6E90;&#x8C03;&#x5EA6;&#x7684;&#x65F6;&#x95F4;&#x3002; 1.3 &#x5982;&#x4F55;&#x89E3;&#x51B3;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x7684;&#x95EE;&#x9898;&#x5BF9;&#x4E8E;&#x786C;&#x4EF6;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x4F7F;&#x7528;&#x96C6;&#x7FA4;&#x5E76;&#x884C;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x3002; &#x65E2;&#x7136;&#x5355;&#x673A;&#x7684;&#x8D44;&#x6E90;&#x6709;&#x9650;&#x5236;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8BA9;&#x7A0B;&#x5E8F;&#x5728;&#x591A;&#x673A;&#x4E0A;&#x8FD0;&#x884C;&#x3002;&#x6BD4;&#x5982;&#x4F7F;&#x7528; ODPS&#x3001;Hadoop &#x6216;&#x8005;&#x81EA;&#x5DF1;&#x642D;&#x5EFA;&#x670D;&#x52A1;&#x5668;&#x96C6;&#x7FA4;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x673A;&#x5668;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x3002; &#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x201D;&#x6570;&#x636E; ID% &#x673A;&#x5668;&#x6570;&#x201D;&#xFF0C;&#x8BA1;&#x7B97;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x673A;&#x5668;&#x7F16;&#x53F7;&#xFF0C;&#x7136;&#x540E;&#x7531;&#x5BF9;&#x5E94;&#x7F16;&#x53F7;&#x7684;&#x673A;&#x5668;&#x5904;&#x7406;&#x8FD9;&#x7B14;&#x6570;&#x636E;&#x3002; &#x5BF9;&#x4E8E;&#x8F6F;&#x4EF6;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x4F7F;&#x7528;&#x8D44;&#x6E90;&#x6C60;&#x5C06;&#x8D44;&#x6E90;&#x590D;&#x7528;&#x3002; &#x6BD4;&#x5982;&#x4F7F;&#x7528;&#x8FDE;&#x63A5;&#x6C60;&#x5C06;&#x6570;&#x636E;&#x5E93;&#x548C; Socket &#x8FDE;&#x63A5;&#x590D;&#x7528;&#xFF0C;&#x6216;&#x8005;&#x5728;&#x8C03;&#x7528;&#x5BF9;&#x65B9; webservice &#x63A5;&#x53E3;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x53EA;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#x3002; 1.4 &#x5728;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x60C5;&#x51B5;&#x4E0B;&#x8FDB;&#x884C;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x5982;&#x4F55;&#x5728;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8BA9;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x5F97;&#x66F4;&#x5FEB;&#x5462;&#xFF1F;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#xFF0C;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x8D44;&#x6E90;&#x9650;&#x5236;&#x8C03;&#x6574;&#x7A0B;&#x5E8F;&#x7684;&#x5E76;&#x53D1;&#x5EA6;&#x3002; &#x6BD4;&#x5982;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x7A0B;&#x5E8F;&#x4F9D;&#x8D56;&#x4E8E;&#x4E24;&#x4E2A;&#x8D44;&#x6E90;&#xFF1A;&#x5E26;&#x5BBD;&#x548C;&#x786C;&#x76D8;&#x8BFB;&#x5199;&#x901F;&#x5EA6;&#x3002;&#x6709;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x6D89;&#x53CA;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x6570;&#xFF0C;&#x5982;&#x679C; SQL &#x8BED;&#x53E5;&#x6267;&#x884C;&#x975E;&#x5E38;&#x5FEB;&#xFF0C;&#x800C;&#x7EBF;&#x7A0B;&#x7684;&#x6570;&#x91CF;&#x6BD4;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x6570;&#x5927;&#x5F88;&#x591A;&#xFF0C;&#x5219;&#x67D0;&#x4E9B;&#x7EBF;&#x7A0B;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x7B49;&#x5F85;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>并发编程</category>
      </categories>
      <tags>
        <tag>并发编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[定时任务全解]]></title>
    <url>%2F2018%2F12%2F17%2F005%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x9879;&#x76EE;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7ECF;&#x5E38;&#x9700;&#x8981;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x6765;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x6765;&#x505A;&#x4E00;&#x4E9B;&#x5185;&#x5BB9;&#xFF0C;springboot &#x9ED8;&#x8BA4;&#x5DF2;&#x7ECF;&#x5E2E;&#x6211;&#x4EEC;&#x5B9E;&#x884C;&#x4E86;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x53EA;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x76F8;&#x5E94;&#x7684;&#x6CE8;&#x89E3;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x3002; &#x4E00;&#x3001;Spring Task &#x5B9A;&#x65F6;&#x4EFB;&#x52A1;1.1 &#x9759;&#x6001;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#xFF08;&#x57FA;&#x4E8E; @Scheduled &#x6CE8;&#x89E3;&#xFF09;1.1.1 pom &#x914D;&#x7F6E;pom &#x5305;&#x91CC;&#x9762;&#x53EA;&#x9700;&#x8981;&#x5F15;&#x5165;springboot starter&#x5305;&#x5373;&#x53EF;&#xFF1A; 12345678910&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt; 1.1.2 &#x542F;&#x52A8;&#x7C7B;&#x542F;&#x7528;&#x5B9A;&#x65F6;&#x5728;&#x542F;&#x52A8;&#x7C7B;&#x4E0A;&#x9762;&#x52A0;&#x4E0A;@EnableScheduling&#x5373;&#x53EF;&#x5F00;&#x542F;&#x5B9A;&#x65F6;&#xFF1A; 1234567@EnableScheduling@SpringBootApplicationpublic class KingApplication { public static void main(String[] args) { SpringApplication.run(KingApplication.class, args); }} &#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x91CC;&#x7684;@EnableScheduling&#x6CE8;&#x89E3;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x53D1;&#x73B0;&#x6CE8;&#x89E3;@Scheduled&#x7684;&#x4EFB;&#x52A1;&#x5E76;&#x7531;&#x540E;&#x53F0;&#x6267;&#x884C;&#x3002;&#x6CA1;&#x6709;&#x5B83;&#x7684;&#x8BDD;&#x5C06;&#x65E0;&#x6CD5;&#x6267;&#x884C;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x3002; &#x5F15;&#x7528;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x539F;&#x6587;&#xFF1A;@EnableScheduling ensures that a background task executor is created. Without it, nothing gets scheduled. &#x5B98;&#x65B9;&#x6587;&#x6863;&#x5730;&#x5740;&#xFF1A;http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#scheduling-enable-annotation-support 1.1.3 &#x521B;&#x5EFA;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x5B9E;&#x73B0;&#x7C7B;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;1&#xFF1A;&#x6BCF;&#x8FC7; 6 &#x79D2;&#x6267;&#x884C; 12345678910@Componentpublic class Scheduler1Task { private int count=0; @Scheduled(cron=&quot;*/6 * * * * ?&quot;) private void process(){ System.out.println(&quot;this is scheduler task runing &quot;+(count++)); }} &#x5B9A;&#x65F6;&#x4EFB;&#x52A1;2&#xFF1A;&#x6BCF;&#x8FC7; 6 &#x79D2;&#x6267;&#x884C; &#x6CE8;&#x610F;&#xFF1A;&#x4E0A;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x65F6;&#x95F4;&#x70B9;&#x4E4B;&#x540E; 6 &#x79D2;&#x518D;&#x6267;&#x884C;&#xFF0C;&#x4E0D;&#x4F1A;&#x7B49;&#x5F85;&#x4E0A;&#x4E00;&#x4E2A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x518D;&#x542F;&#x52A8;&#x4E0B;&#x4E00;&#x4E2A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#xFF0C;&#x4E0D;&#x8BBA;&#x4E0A;&#x6B21;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x662F;&#x591A;&#x5C11;&#x3002; 1234567891011@Componentpublic class Scheduler2Task { private static final SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;HH:mm:ss&quot;); @Scheduled(fixedRate = 6000) public void reportCurrentTime() { System.out.println(&quot;&#x73B0;&#x5728;&#x65F6;&#x95F4;&#xFF1A;&quot; + dateFormat.format(new Date())); }} &#x5B9A;&#x65F6;&#x4EFB;&#x52A1;3&#xFF1A;&#x6BCF;&#x8FC7;&#x4E0A;&#x4E00;&#x4E2A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#x7684; 6 &#x79D2;&#x6267;&#x884C; &#x6CE8;&#x610F;&#xFF1A;&#x4E0A;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x65F6;&#x95F4;&#x70B9;&#x4E4B;&#x540E; 6 &#x79D2;&#x518D;&#x6267;&#x884C;&#xFF0C;&#x7B49;&#x5F85;&#x4E0A;&#x4E00;&#x6B21;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#x518D;&#x95F4;&#x9694; 6 &#x79D2;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x4E2A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x3002; 1234567891011@Componentpublic class Scheduler3Task { private static final SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;); @Scheduled(fixedDelay = 6000) public void reportCurrentTime() { System.out.println(&quot;&#x73B0;&#x5728;&#x65F6;&#x95F4;&#xFF1A;&quot; + dateFormat.format(new Date())); }} 1.1.4 &#x53C2;&#x6570;&#x8BF4;&#x660E;@Scheduled &#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x4E24;&#x79CD;&#x5B9A;&#x65F6;&#x7684;&#x8BBE;&#x7F6E;&#x6BCF;&#x9694; 6 &#x79D2;&#x6267;&#x884C;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#xFF1A; &#x4E00;&#x79CD;&#x662F;&#x6211;&#x4EEC;&#x5E38;&#x7528;&#x7684;cron=&quot;*/6 * * * * ?&quot;&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x662F; fixedRate = 6000 fixedRate &#x8BF4;&#x660E; fixedRate &#xFF1A;&#x4E0A;&#x4E00;&#x6B21;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x70B9;&#x4E4B;&#x540E;&#x518D;&#x6267;&#x884C;&#xFF0C;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E3A; long&#xFF0C;&#x5355;&#x4F4D; ms&#xFF1B; fixedRateString&#xFF1A;&#x4E0E;fixedRate&#x7684;&#x542B;&#x4E49;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x662F;&#x5C06;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x53D8;&#x4E3A; String&#xFF1B; fixedDelay &#xFF1A;&#x4E0A;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x65F6;&#x95F4;&#x70B9;&#x4E4B;&#x540E;&#x518D;&#x6267;&#x884C;&#xFF0C;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E3A; long&#xFF0C;&#x5355;&#x4F4D; ms&#xFF1B; fixedDelayString&#xFF1A;&#x4E0E;fixedDelay&#x542B;&#x4E49;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x662F;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x53D8;&#x4E3A; String&#xFF1B; initialDelay &#xFF1A;&#x8868;&#x793A;&#x5EF6;&#x8FDF;&#x591A;&#x4E45;&#x518D;&#x7B2C;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#xFF0C;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E3A; long&#xFF0C;&#x5355;&#x4F4D; ms&#xFF1B; initialDelayString&#xFF1A;&#x4E0E;initialDelay&#x7684;&#x542B;&#x4E49;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x662F;&#x5C06;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x53D8;&#x4E3A; String&#xFF1B; zone&#xFF1A;&#x65F6;&#x533A;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;&#x5F53;&#x524D;&#x65F6;&#x533A;&#xFF0C;&#x4E00;&#x822C;&#x6CA1;&#x6709;&#x7528;&#x5230;&#x3002; 1.1.5 Cron &#x8868;&#x8FBE;&#x5F0F;Cron &#x8868;&#x8FBE;&#x5F0F;&#x6709;&#x4E13;&#x95E8;&#x7684;&#x8BED;&#x6CD5;&#xFF0C;&#x800C;&#x4E14;&#x611F;&#x89C9;&#x6709;&#x70B9;&#x7ED5;&#x4EBA;&#xFF0C;&#x4E0D;&#x8FC7;&#x7B80;&#x5355;&#x6765;&#x8BF4;&#xFF0C;&#x5927;&#x5BB6;&#x8BB0;&#x4F4F;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x7684;&#x7528;&#x6CD5;&#x5373;&#x53EF;&#xFF0C;&#x7279;&#x6B8A;&#x7684;&#x8BED;&#x6CD5;&#x53EF;&#x4EE5;&#x5355;&#x72EC;&#x53BB;&#x67E5;&#x3002; Cron &#x8868;&#x8FBE;&#x5F0F;&#x662F;&#x7531;&#x4E00;&#x4E32;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#xFF0C;&#x4F7F;&#x7528;&#x6570;&#x5B57;+&#x7A7A;&#x683C;+&#x7279;&#x6B8A;&#x5B57;&#x7B26;&#x7684;&#x5F62;&#x5F0F;&#x7EC4;&#x5408;&#x6210;&#x5B8C;&#x6574;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;Cron &#x8868;&#x8FBE;&#x5F0F;&#x7531;&#x7A7A;&#x683C;&#x5C06;&#x5176;&#x5212;&#x5206;&#x4E3A; 6 &#x6216; 7 &#x4E2A;&#x57DF;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x57DF;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x542B;&#x4E49;&#x89E3;&#x91CA;&#xFF1A; 1.1.5.1 &#x57DF;&#x89E3;&#x91CA; 1234567* &#x7B2C;&#x4E00;&#x4F4D;&#xFF0C;&#x8868;&#x793A;&#x79D2;&#xFF0C;&#x53D6;&#x503C;&#xFF1A;0-59* &#x7B2C;&#x4E8C;&#x4F4D;&#xFF0C;&#x8868;&#x793A;&#x5206;&#xFF0C;&#x53D6;&#x503C;&#xFF1A;0-59* &#x7B2C;&#x4E09;&#x4F4D;&#xFF0C;&#x8868;&#x793A;&#x5C0F;&#x65F6;&#xFF0C;&#x53D6;&#x503C;&#xFF1A;0-23* &#x7B2C;&#x56DB;&#x4F4D;&#xFF0C;&#x65E5;&#x671F;&#x5929;/&#x65E5;&#xFF0C;&#x53D6;&#x503C;&#xFF1A;1-31* &#x7B2C;&#x4E94;&#x4F4D;&#xFF0C;&#x65E5;&#x671F;&#x6708;&#x4EFD;&#xFF0C;&#x53D6;&#x503C;&#xFF1A;1-12* &#x7B2C;&#x516D;&#x4F4D;&#xFF0C;&#x661F;&#x671F;&#xFF0C;&#x53D6;&#x503C;&#xFF1A;1-7* &#x7B2C;&#x4E03;&#x4F4D;&#xFF0C;&#x5E74;&#x4EFD;&#xFF0C;&#x53EF;&#x4EE5;&#x7559;&#x7A7A;&#xFF0C;&#x53D6;&#x503C;&#xFF1A;1970-2099 &#x6CE8;&#x610F;&#xFF1A;&#x7B2C;&#x516D;&#x4F4D;&#x7684;&#x53D6;&#x503C;&#xFF1A;1-7 &#x8868;&#x793A;&#x7684;&#x662F;&#x661F;&#x671F;&#x4E00;&#x81F3;&#x661F;&#x671F;&#x65E5; 1.1.5.2 &#x7279;&#x6B8A;&#x7B26;&#x53F7;&#x89E3;&#x91CA; (*)&#x661F;&#x53F7; &#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x6BCF;&#x7684;&#x610F;&#x601D;&#xFF0C;&#x6BCF;&#x79D2;&#xFF0C;&#x6BCF;&#x5206;&#xFF0C;&#x6BCF;&#x5929;&#xFF0C;&#x6BCF;&#x6708;&#xFF0C;&#x6BCF;&#x5E74;&#xFF1B; (?)&#x95EE;&#x53F7; &#x53EA;&#x80FD;&#x7528;&#x5728;&#x6BCF;&#x6708;&#x7B2C;&#x51E0;&#x5929;&#x548C;&#x661F;&#x671F;&#x4E24;&#x4E2A;&#x57DF;&#x3002;&#x8868;&#x793A;&#x4E0D;&#x6307;&#x5B9A;&#x503C;&#xFF0C;&#x5F53; 2 &#x4E2A;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#x88AB;&#x6307;&#x5B9A;&#x4E86;&#x503C;&#x4EE5;&#x540E;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x51B2;&#x7A81;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x53E6;&#x4E00;&#x4E2A;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x503C;&#x8BBE;&#x4E3A;?&#xFF1B; (-)&#x51CF;&#x53F7; &#x8868;&#x8FBE;&#x4E00;&#x4E2A;&#x8303;&#x56F4;&#xFF0C;&#x5982;&#x5728;&#x5C0F;&#x65F6;&#x5B57;&#x6BB5;&#x4E2D;&#x4F7F;&#x7528; &#x201C;10-12&#x201D;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x4ECE;10&#x5230;12&#x70B9;&#xFF0C;&#x5373; 10, 11, 12&#xFF1B; (,)&#x9017;&#x53F7; &#x8868;&#x8FBE;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#x503C;&#xFF0C;&#x5982;&#x5728;&#x661F;&#x671F;&#x5B57;&#x6BB5;&#x4E2D;&#x4F7F;&#x7528; &#x201C;1, 2, 4&#x201D;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x661F;&#x671F;&#x4E00;&#xFF0C;&#x661F;&#x671F;&#x4E8C;&#xFF0C;&#x661F;&#x671F;&#x56DB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5355;&#x8BCD;&#x7F29;&#x5199;&#x6765;&#x6307;&#x5B9A;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x201D;MON,WED,FRI&#x201D; &#x5728;&#x661F;&#x671F;&#x57DF;&#x91CC;&#x8868;&#x793A; &#x201C;&#x661F;&#x671F;&#x4E00;&#x3001;&#x661F;&#x671F;&#x4E09;&#x3001;&#x661F;&#x671F;&#x4E94;&#xFF1B; (/)&#x659C;&#x6760; &#x8868;&#x793A;&#x8D77;&#x59CB;&#x65F6;&#x95F4;&#x5F00;&#x59CB;&#x89E6;&#x53D1;&#xFF0C;&#x7136;&#x540E;&#x6BCF;&#x9694;&#x56FA;&#x5B9A;&#x65F6;&#x95F4;&#x89E6;&#x53D1;&#x4E00;&#x6B21;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x5206;&#x57DF;&#x4F7F;&#x7528; 5/20 &#xFF0C;&#x5219;&#x610F;&#x5473;&#x7740;5&#x5206;&#xFF0C;25&#x5206;&#xFF0C;45&#x5206;&#xFF0C;&#x5206;&#x522B;&#x89E6;&#x53D1;&#x4E00;&#x6B21;&#xFF0C;&#x53E6;&#x5916;&#xFF1A;*/y&#xFF0C;&#x7B49;&#x540C;&#x4E8E;0/y&#xFF1B; (L)&#x5B57;&#x7B26; &#x8868;&#x793A;&#x6700;&#x540E;&#xFF0C;&#x53EA;&#x80FD;&#x51FA;&#x73B0;&#x5728;&#x661F;&#x671F;&#x548C;&#x6BCF;&#x6708;&#x7B2C;&#x51E0;&#x5929;&#x57DF;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x661F;&#x671F;&#x57DF;&#x4F7F;&#x7528; 1L&#xFF0C;&#x610F;&#x5473;&#x7740;&#x5728;&#x6700;&#x540E;&#x7684;&#x4E00;&#x4E2A;&#x661F;&#x671F;&#x65E5;&#x89E6;&#x53D1;&#xFF1B; (W)&#x5B57;&#x7B26; &#x8868;&#x793A;&#x6709;&#x6548;&#x5DE5;&#x4F5C;&#x65E5;&#xFF08;&#x5468;&#x4E00;&#x5230;&#x5468;&#x4E94;&#xFF09;&#xFF0C;&#x53EA;&#x80FD;&#x51FA;&#x73B0;&#x5728;&#x6BCF;&#x6708;&#x7B2C;&#x51E0;&#x65E5;&#x57DF;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C06;&#x5728;&#x79BB;&#x6307;&#x5B9A;&#x65E5;&#x671F;&#x7684;&#x6700;&#x8FD1;&#x7684;&#x6709;&#x6548;&#x5DE5;&#x4F5C;&#x65E5;&#x89E6;&#x53D1;&#x4E8B;&#x4EF6;&#x3002;&#x6CE8;&#x610F;&#x4E00;&#x70B9;&#xFF0C;W &#x7684;&#x6700;&#x8FD1;&#x5BFB;&#x627E;&#x4E0D;&#x4F1A;&#x8DE8;&#x8FC7;&#x6708;&#x4EFD;&#xFF1B; LW : &#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x53EF;&#x4EE5;&#x8FDE;&#x7528;&#xFF0C;&#x8868;&#x793A;&#x5728;&#x67D0;&#x4E2A;&#x6708;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5DE5;&#x4F5C;&#x65E5;&#xFF0C;&#x5373;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x661F;&#x671F;&#x4E94;&#x3002; (#)&#x5B57;&#x7B26; &#x7528;&#x4E8E;&#x786E;&#x5B9A;&#x6BCF;&#x4E2A;&#x6708;&#x7B2C;&#x51E0;&#x4E2A;&#x661F;&#x671F;&#x51E0;&#xFF0C;&#x53EA;&#x80FD;&#x51FA;&#x73B0;&#x5728;&#x6BCF;&#x6708;&#x7B2C;&#x51E0;&#x5929;&#x57DF;&#xFF0C;&#x4F8B;&#x5982;&#x5728;1#3&#xFF0C;&#x8868;&#x793A;&#x67D0;&#x6708;&#x7684;&#x7B2C;&#x4E09;&#x4E2A;&#x661F;&#x671F;&#x65E5;&#x3002; &#x5B98;&#x65B9;&#x4F8B;&#x5B50;&#xFF1A; 1234567891011&quot;0 0 * * * *&quot; &#x8868;&#x793A;&#x6BCF;&#x5C0F;&#x65F6;0&#x5206;0&#x79D2;&#x6267;&#x884C;&#x4E00;&#x6B21;&quot; */10 * * * * *&quot; &#x8868;&#x793A;&#x6BCF;10&#x79D2;&#x6267;&#x884C;&#x4E00;&#x6B21;&quot;0 0 8-10 * * *&quot; &#x8868;&#x793A;&#x6BCF;&#x5929;8&#xFF0C;9&#xFF0C;10&#x70B9;&#x6267;&#x884C;&quot;0 0/30 8-10 * * *&quot; &#x8868;&#x793A;&#x6BCF;&#x5929;8&#x70B9;&#x5230;10&#x70B9;&#xFF0C;&#x6BCF;&#x534A;&#x5C0F;&#x65F6;&#x6267;&#x884C;&quot;0 0 9-17 * * MON-FRI&quot; &#x8868;&#x793A;&#x6BCF;&#x5468;&#x4E00;&#x81F3;&#x5468;&#x4E94;&#xFF0C;9&#x70B9;&#x5230;17&#x70B9;&#x7684;0&#x5206;0&#x79D2;&#x6267;&#x884C;&quot;0 0 0 25 12 ?&quot; &#x8868;&#x793A;&#x6BCF;&#x5E74;&#x5723;&#x8BDE;&#x8282;&#xFF08;12&#x6708;25&#x65E5;&#xFF09;0&#x65F6;0&#x5206;0&#x79D2;&#x6267;&#x884C; 1.2 &#x52A8;&#x6001;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#xFF08;&#x57FA;&#x4E8E; SchedulingConfigurer &#x63A5;&#x53E3;&#xFF09;&#x4E3A;&#x4E86;&#x6F14;&#x793A;&#x6548;&#x679C;&#xFF0C;&#x8FD9;&#x91CC;&#x9009;&#x7528; Mysql &#x6570;&#x636E;&#x5E93;&#x4FDD;&#x5B58; Cron &#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4F7F;&#x7528; Mybatis &#x6846;&#x67B6;&#x6765;&#x67E5;&#x8BE2;&#x548C;&#x8C03;&#x6574;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x7684;&#x6267;&#x884C;&#x5468;&#x671F;&#xFF0C;&#x7136;&#x540E;&#x89C2;&#x5BDF;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x7684;&#x6267;&#x884C;&#x60C5;&#x51B5;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9759;&#x6001;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x5F62;&#x5F0F;&#x914D;&#x7F6E;&#x3002; 1.2.1 pom &#x914D;&#x7F6E;1234567891011121314151617181920212223&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;!--&#x6DFB;&#x52A0;Mybatis&#x4F9D;&#x8D56; --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;1.3.1&lt;/version&gt; &lt;/dependency&gt; &lt;!--&#x6DFB;&#x52A0;MySql&#x4F9D;&#x8D56; --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; 1.2.2 &#x6DFB;&#x52A0;&#x6570;&#x636E;&#x5E93;&#x8BB0;&#x5F55;&#x5728; mysql &#x6570;&#x636E;&#x5E93;&#x4E2D;&#x521B;&#x5EFA;socks&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5E76;&#x521B;&#x5EFA;cron&#x6570;&#x636E;&#x5E93;&#x8868;&#xFF1A; 123456789DROP DATABASE IF EXISTS `socks`;CREATE DATABASE `socks`;USE `SOCKS`;DROP TABLE IF EXISTS `cron`;CREATE TABLE `cron` ( `cron_id` varchar(30), `cron` varchar(30) );INSERT INTO `cron` VALUES (&apos;1&apos;, &apos;0/5 * * * * ?&apos;); &#x5728;&#x9879;&#x76EE;&#x4E2D;&#x7684;application.yml&#x6DFB;&#x52A0;&#x6570;&#x636E;&#x6E90;&#xFF1A; 12345spring: datasource: url: jdbc:mysql://localhost:3306/socks?useSSL=false username: root password: root 1.2.3 &#x521B;&#x5EFA;&#x5B9A;&#x65F6;&#x5668;&#x6570;&#x636E;&#x5E93;&#x51C6;&#x5907;&#x597D;&#x6570;&#x636E;&#x4E4B;&#x540E;&#xFF0C;&#x7F16;&#x5199;&#x8981;&#x5B9A;&#x65F6;&#x6267;&#x884C;&#x7684;&#x4EFB;&#x52A1;&#x7C7B;&#xFF0C;&#x5B9E;&#x73B0;SchedulingConfigurer&#x63A5;&#x53E3;&#xFF0C;&#x91CD;&#x5199;configureTasks&#x65B9;&#x6CD5;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061import java.text.SimpleDateFormat;import java.util.Date;import org.apache.ibatis.annotations.Mapper;import org.apache.ibatis.annotations.Select;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Configuration;import org.springframework.scheduling.annotation.EnableScheduling;import org.springframework.scheduling.annotation.SchedulingConfigurer;import org.springframework.scheduling.config.ScheduledTaskRegistrar;import org.springframework.scheduling.support.CronTrigger;import org.springframework.util.StringUtils;@Configuration@EnableSchedulingpublic class CompleteScheduleConfig implements SchedulingConfigurer{ protected final Logger logger = LoggerFactory.getLogger(this.getClass()); private static final SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;); @Mapper public interface CronMapper { @Select(&quot;select cron from cron limit 1&quot;) String getCron(); } @Autowired CronMapper cronMapper; /** * &#x6267;&#x884C;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1; */ @Override public void configureTasks(ScheduledTaskRegistrar taskRegistrar) { taskRegistrar.addTriggerTask( //1.&#x6DFB;&#x52A0;&#x4EFB;&#x52A1;&#x5185;&#x5BB9;(Runnable) () -&gt; { System.out.println(&quot;&#x6267;&#x884C;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;2: &quot; + getNow()); logger.debug(&quot;&#x6267;&#x884C;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;2: &quot; + getNow()); }, //2.&#x8BBE;&#x7F6E;&#x6267;&#x884C;&#x5468;&#x671F;(Trigger) triggerContext -&gt; { //2.1 &#x4ECE;&#x6570;&#x636E;&#x5E93;&#x83B7;&#x53D6;&#x6267;&#x884C;&#x5468;&#x671F; String cron = cronMapper.getCron(); //2.2 &#x5408;&#x6CD5;&#x6027;&#x6821;&#x9A8C;. if (StringUtils.isEmpty(cron)) { // Omitted Code .. } //2.3 &#x8FD4;&#x56DE;&#x6267;&#x884C;&#x5468;&#x671F;(Date) return new CronTrigger(cron).nextExecutionTime(triggerContext); } ); } private String getNow() { return dateFormat.format(new Date()); }} &#x4E09;&#x3001;Timer &#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x8FD9;&#x4E2A;API&#x76EE;&#x524D;&#x5728;&#x9879;&#x76EE;&#x4E2D;&#x5F88;&#x5C11;&#x7528;&#xFF0C;&#x76F4;&#x63A5;&#x7ED9;&#x51FA;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x3002;&#x5177;&#x4F53;&#x7684;&#x4ECB;&#x7ECD;&#x53EF;&#x4EE5;&#x67E5;&#x770B;API&#x3002;Timer&#x7684;&#x5185;&#x90E8;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x5982;&#x679C;&#x591A;&#x4E2A;&#x4EFB;&#x52A1;&#x7684;&#x8BDD;&#x5C31;&#x4F1A;&#x987A;&#x5E8F;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x4EFB;&#x52A1;&#x7684;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4;&#x548C;&#x5FAA;&#x73AF;&#x65F6;&#x95F4;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x3002; 123456789101112131415161718192021222324252627282930import java.util.Timer;import java.util.TimerTask;import java.util.concurrent.atomic.AtomicLong;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class TimerService { protected final Logger logger = LoggerFactory.getLogger(this.getClass()); private AtomicLong counter = new AtomicLong(); public void schedule() { TimerTask timerTask = new TimerTask() { @Override public void run() { long count = counter.incrementAndGet(); logger.info(&quot;Schedule timerTask {} times&quot;, count); } }; Timer timer = new Timer(); // &#x8BBE;&#x7F6E; &#x521D;&#x59CB;&#x5316;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4; &#x4E3A; 1s&#xFF0C;&#x5B9A;&#x65F6;&#x6267;&#x884C;&#x95F4;&#x9694; &#x4E3A; 2s timer.schedule(timerTask, 1000L, 2 * 1000L); } public static void main(String[] args) { TimerService timerService = new TimerService(); timerService.schedule(); }} &#x89C2;&#x5BDF;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#xFF0C;&#x80FD;&#x591F;&#x53D1;&#x73B0;TimerTask&#x914D;&#x7F6E;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x6BCF;&#x9694;10s&#x88AB;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x6B21;&#xFF0C;&#x6267;&#x884C;&#x7EBF;&#x7A0B;&#x9ED8;&#x8BA4;&#x90FD;&#x662F;Timer-0&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x5E76;&#x4E14;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x673A;&#x662F; new &#x51FA; Timer &#x5E76;&#x6267;&#x884C;schedule()&#x65B9;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#x3002; 12317:42:48.576 [Timer-0] INFO org.woodwhale.king.service.TimerService - Schedule timerTask 1 times17:42:50.569 [Timer-0] INFO org.woodwhale.king.service.TimerService - Schedule timerTask 2 times17:42:52.569 [Timer-0] INFO org.woodwhale.king.service.TimerService - Schedule timerTask 3 times &#x56DB;&#x3001;ScheduledExecutorService &#x5B9A;&#x65F6;&#x4EFB;&#x52A1;ScheduledExecutorService &#x662F; &#x5EF6;&#x65F6;&#x6267;&#x884C; &#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5BF9;&#x4E8E; &#x591A;&#x7EBF;&#x7A0B; &#x73AF;&#x5883;&#x4E0B;&#x7684; &#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#xFF0C;&#x63A8;&#x8350;&#x7528; ScheduledExecutorService &#x4EE3;&#x66FF; Timer &#x5B9A;&#x65F6;&#x5668;&#x3002; 4.1 &#x7B49;&#x5F85;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x518D;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&#x4E3A;4&#x7684;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x5E76;&#x5411;&#x5B83;&#x63D0;&#x4EA4;4&#x4E2A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#xFF0C;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x5EF6;&#x65F6;&#x4EFB;&#x52A1;&#x7684;&#x5E76;&#x53D1;&#x5904;&#x7406;&#x3002;&#x6267;&#x884C;ScheduledExecutorService&#x7684;scheduleWithFixedDelay()&#x65B9;&#x6CD5;&#xFF0C;&#x8BBE;&#x7F6E;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x521D;&#x59CB;&#x4EFB;&#x52A1;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4;&#x4E3A;2&#x79D2;&#xFF0C;&#x5E76;&#x5728;&#x4E0A;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x65F6;&#x95F4;&#x70B9;&#x4E4B;&#x540E;2&#x79D2;&#x518D;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x4EFB;&#x52A1;&#x3002; 1234567891011121314151617public void scheduleWithFixedDelay() { ScheduledExecutorService scheduledExecutor = Executors.newScheduledThreadPool(4); for (int i = 0; i &lt; 4; i++) { scheduledExecutor.scheduleWithFixedDelay(() -&gt; { // &#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x5EF6;&#x8FDF;&#x5B8C;&#x6210; 2 &#x79D2; try { TimeUnit.MILLISECONDS.sleep(2 * 1000L); } catch (InterruptedException e) { LOGGER.error(&quot;Interrupted exception&quot;, e); } long count = counter.incrementAndGet(); logger.info(&quot;Schedule executor {} times with fixed delay&quot;, count); }, 2000L, 2 * 1000L, TimeUnit.MILLISECONDS); // &#x521D;&#x59CB;&#x4EFB;&#x52A1;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4; &#x4E3A; 2 &#x79D2;&#xFF0C;&#x5E76;&#x5728;&#x4E0A;&#x4E00;&#x6B21; &#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x65F6;&#x95F4;&#x70B9; &#x4E4B;&#x540E; 2 &#x79D2;&#x518D;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x4EFB;&#x52A1; } logger.info(&quot;Start to schedule&quot;);} &#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6BCF;&#x9694;2&#x79D2;&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#xFF0C;&#x5C31;&#x4F1A;&#x6709;4&#x4E2A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x540C;&#x65F6;&#x6267;&#x884C;&#x3002;&#x56E0;&#x4E3A;&#x5728;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6C60;&#x521D;&#x59CB;&#x5316;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x540C;&#x65F6;&#x5411;&#x7EBF;&#x7A0B;&#x6C60;&#x63D0;&#x4EA4;&#x4E86;4&#x4E2A;&#x4EFB;&#x52A1;&#xFF0C;&#x8FD9;&#x56DB;&#x4E2A;&#x4EFB;&#x52A1;&#x4F1A;&#x5B8C;&#x5168;&#x5229;&#x7528;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;4&#x4E2A;&#x7EBF;&#x7A0B;&#x8FDB;&#x884C;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x3002; 4.2 &#x56FA;&#x5B9A;&#x65F6;&#x95F4;&#x8FDB;&#x884C;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&#x4E3A;4&#x7684;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x5E76;&#x5411;&#x5B83;&#x63D0;&#x4EA4;4&#x4E2A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#xFF0C;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x5EF6;&#x65F6;&#x4EFB;&#x52A1;&#x7684;&#x5E76;&#x53D1;&#x5904;&#x7406;&#x3002;&#x6BCF;&#x4E2A;&#x4EFB;&#x52A1;&#x5206;&#x522B;&#x6267;&#x884C;ScheduledExecutorService&#x7684;scheduleAtFixedRate()&#x65B9;&#x6CD5;&#xFF0C;&#x8BBE;&#x7F6E;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x521D;&#x59CB;&#x4EFB;&#x52A1;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4;&#x4E3A;2&#x79D2;&#xFF0C;&#x5E76;&#x5728;&#x4E0A;&#x4E00;&#x6B21;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x70B9;&#x4E4B;&#x540E;2&#x79D2;&#x518D;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x4EFB;&#x52A1;&#x3002; 1234567891011public void scheduleAtFixedRate() { ScheduledExecutorService scheduledExecutor = Executors.newScheduledThreadPool(4); for (int i = 0; i &lt; 4; i++) { scheduledExecutor.scheduleAtFixedRate(() -&gt; { long count = counter.incrementAndGet(); logger.info(&quot;Schedule executor {} times at fixed rate&quot;, count); }, 2000L, 2 * 1000L, TimeUnit.MILLISECONDS); // &#x521D;&#x59CB;&#x4EFB;&#x52A1;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4; &#x4E3A; 2 &#x79D2;&#xFF0C;&#x5E76;&#x5728;&#x4E0A;&#x4E00;&#x6B21; &#x6267;&#x884C;&#x65F6;&#x95F4;&#x5F00;&#x59CB; &#x4E4B;&#x540E; 2 &#x79D2;&#x518D;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x4EFB;&#x52A1; } logger.info(&quot;Start to schedule&quot;);} &#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6BCF;&#x9694; 2 &#x79D2;&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#xFF0C;&#x5C31;&#x4F1A;&#x6709; 4 &#x4E2A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x540C;&#x65F6;&#x6267;&#x884C;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6C60;&#x521D;&#x59CB;&#x5316;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x540C;&#x65F6;&#x5411;&#x7EBF;&#x7A0B;&#x6C60;&#x63D0;&#x4EA4;&#x4E86; 4 &#x4E2A;&#x4EFB;&#x52A1;&#xFF0C;&#x8FD9; &#x56DB;&#x4E2A;&#x4EFB;&#x52A1;&#x4F1A;&#x5B8C;&#x5168;&#x5229;&#x7528;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684; 4&#x4E2A;&#x7EBF;&#x7A0B;&#x8FDB;&#x884C;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x3002; &#x4E94;&#x3001;&#x914D;&#x7F6E;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6C60;&#xFF08;&#x5B9E;&#x73B0;&#x591A;&#x7EBF;&#x7A0B;&#x5E76;&#x53D1;&#x5904;&#x7406;&#xFF09;&#x4E0A;&#x8FF0;&#x914D;&#x7F6E;&#x90FD;&#x662F;&#x57FA;&#x4E8E;&#x5355;&#x7EBF;&#x7A0B;&#x7684;&#x4EFB;&#x52A1;&#x8C03;&#x5EA6;&#xFF0C;&#x5982;&#x4F55;&#x5F15;&#x5165;&#x591A;&#x7EBF;&#x7A0B;&#x63D0;&#x9AD8;&#x5EF6;&#x65F6;&#x4EFB;&#x52A1;&#x7684;&#x5E76;&#x53D1;&#x5904;&#x7406;&#x80FD;&#x529B;&#xFF1F; Spring Boot&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;SchedulingConfigurer&#x914D;&#x7F6E;&#x63A5;&#x53E3;&#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7; ScheduleConfig&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5B9E;&#x73B0;ScheduleConfiguration&#x63A5;&#x53E3;&#xFF0C;&#x5E76;&#x91CD;&#x5199; configureTasks()&#x65B9;&#x6CD5;&#xFF0C;&#x5411;ScheduledTaskRegistrar&#x6CE8;&#x518C;&#x4E00;&#x4E2A;ThreadPoolTaskScheduler&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x5BF9;&#x8C61;&#x5373;&#x53EF;&#x3002; 12345678910111213141516171819202122232425262728293031323334import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.scheduling.annotation.SchedulingConfigurer;import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;import org.springframework.scheduling.config.ScheduledTaskRegistrar;/** * &#x591A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1; * &#x6240;&#x6709;&#x7684;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x90FD;&#x653E;&#x5728;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#xFF0C;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x542F;&#x52A8;&#x65F6;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x90FD;&#x7EBF;&#x7A0B;&#x3002; */@Configurationpublic class ScheduleConfiguration implements SchedulingConfigurer { protected final Logger logger = LoggerFactory.getLogger(this.getClass()); @Override public void configureTasks(ScheduledTaskRegistrar taskRegistrar) { taskRegistrar.setTaskScheduler(taskScheduler()); // &#x91C7;&#x7528;jdk &#x81EA;&#x5E26;&#x7684;&#x6267;&#x884C;&#x5668;&#x7EBF;&#x7A0B;&#x6C60; java.util.concurrent.Executors // taskRegistrar.setScheduler(Executors.newScheduledThreadPool(10)); } @Bean public ThreadPoolTaskScheduler taskScheduler() { ThreadPoolTaskScheduler taskScheduler = new ThreadPoolTaskScheduler(); taskScheduler.setPoolSize(4); //&#x8BBE;&#x5B9A;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;4&#x7684;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x7EBF;&#x7A0B;&#x6C60; taskScheduler.setWaitForTasksToCompleteOnShutdown(true); taskScheduler.setThreadNamePrefix(&quot;schedule&quot;); taskScheduler.setRemoveOnCancelPolicy(true); taskScheduler.setErrorHandler(t -&gt; logger.error(&quot;Error occurs&quot;, t)); return taskScheduler; }} &#x53C2;&#x8003;&#x535A;&#x6587;&#xFF1A; SpringBoot &#x521B;&#x5EFA;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#xFF08;&#x914D;&#x5408;&#x6570;&#x636E;&#x5E93;&#x52A8;&#x6001;&#x6267;&#x884C;&#xFF09;https://www.jianshu.com/p/d160f2536de7 springboot(&#x4E5D;)&#xFF1A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;https://www.cnblogs.com/ityouknow/p/6132645.html spring boot&#x9879;&#x76EE;&#x4E2D;&#x5904;&#x7406;Schedule&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;https://www.rjkf.cn/springboot-schedule-cron/ SpringBoot&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x53CA;Cron&#x8868;&#x8FBE;&#x5F0F;&#x8BE6;&#x89E3;https://my.oschina.net/jack90john/blog/1506474 &#x5B9E;&#x6218;Spring Boot 2.0&#x7CFB;&#x5217;(&#x516D;) - &#x5355;&#x673A;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x7684;&#x51E0;&#x79CD;&#x5B9E;&#x73B0;https://juejin.im/post/5b31b9eff265da598826c200 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>定时任务</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Springboot 瘦身打包]]></title>
    <url>%2F2018%2F12%2F16%2F006%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x5B9E;&#x9645;&#x751F;&#x4EA7;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5E38;&#x5E38;&#x4F1A;&#x9047;&#x5230;&#x8D44;&#x6E90;&#x6253;&#x5305;&#x6587;&#x4EF6;&#x592A;&#x5927;&#xFF0C;&#x5728;&#x90E8;&#x7F72;&#x7684;&#x65F6;&#x5019;&#x5F88;&#x4E0D;&#x65B9;&#x4FBF;&#xFF0C;&#x4F20;&#x7EDF;&#x7684;&#x6253;&#x5305;&#x65B9;&#x5F0F;&#x4F1A;&#x5C06;&#x6240;&#x6709;&#x7684;&#x6587;&#x4EF6;&#xFF08;jar &#x548C; &#x8D44;&#x6E90;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF09;&#x90FD;&#x6253;&#x5305;&#x5728;&#x4E86;&#x4E00;&#x4E2A; jar &#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x540E;&#x671F;&#x5728;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x76F8;&#x5F53;&#x7684;&#x4E0D;&#x65B9;&#x4FBF;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x4F55;&#x5C06;&#x9879;&#x76EE;&#x672C;&#x8EAB;&#x7684; jar &#x6587;&#x4EF6;&#x548C;&#x4F9D;&#x8D56; jar &#x6587;&#x4EF6;&#x5206;&#x79BB;&#xFF0C;&#x5E76;&#x628A;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x4E5F;&#x5206;&#x79BB;&#x51FA;&#x6765;&#xFF0C;&#x5206;&#x522B;&#x72EC;&#x7ACB;&#x6210;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x662F;&#x5F88;&#x6709;&#x5FC5;&#x8981;&#x7684;&#x3002; &#x4E00;&#x3001;&#x4F20;&#x7EDF;&#x6253;&#x5305;&#x65B9;&#x5F0F;&#x4F20;&#x7EDF;&#x7684;&#x6253;&#x5305;&#x65B9;&#x5F0F;&#x5728; pom.xml &#x4E2D;&#x53EA;&#x9700;&#x8981;&#x5728; build &#x63D2;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;spring-boot-maven-plugin&#x5373;&#x53EF;&#xFF1A; 1234&lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&lt;/plugin&gt; &#x6253;&#x5305;&#x51FA;&#x6765;&#x7684; jar &#x5305;&#x662F;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#x7684;&#xFF0C;&#x9879;&#x76EE;&#x751F;&#x6210;&#x4E86;target&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#xFF0C;&#x91CC;&#x9762;&#x6253;&#x5305;&#x597D;&#x4E86;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684; jar &#x6587;&#x4EF6;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF1A;java -jar king-0.0.1-SNAPSHOT.jar&#x5C31;&#x80FD;&#x8FD0;&#x884C;&#x4E86;&#x3002; &#x5C06; jar &#x5305;&#x89E3;&#x538B;&#x5F00;&#xFF0C;&#x4F1A;&#x5F97;&#x5230;&#x4E0B;&#x9762;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#xFF1A; &#x6CE8;&#x610F;&#x5728;META-INF&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E2D;&#x5B58;&#x5728;MANIFEST.MF&#x6587;&#x4EF6;&#xFF0C;&#x91CC;&#x9762;&#x8BB0;&#x5F55;&#x4E86;&#x542F;&#x52A8;&#x7C7B;Start-Class &#x3001;&#x4F9D;&#x8D56;&#x7C7B;Spring-Boot-Lib&#x7B49;&#x4FE1;&#x606F;&#x3002; &#x8FD0;&#x884C; jar &#x5305;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9996;&#x5148;&#x542F;&#x52A8;&#x7684;&#x662F;&#x542F;&#x52A8;&#x7C7B;&#xFF0C;&#x5E76;&#x4F9D;&#x8D56;BOOT-INF/lib/&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E2D;&#x7684; jar &#x6587;&#x4EF6;&#x3002; &#x4E8C;&#x3001;springboot &#x6253;&#x5305; lib &#x548C;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x5206;&#x79BB;&#x73B0;&#x5728;&#x6709;&#x5982;&#x4E0B;&#x7684;&#x6253;&#x5305;&#x9700;&#x6C42;&#xFF1A; &#x9879;&#x76EE;&#x81EA;&#x8EAB; jar &#x6587;&#x4EF6;&#x6253;&#x5305;&#x5728; zip &#x5305;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5176;&#x4ED6;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x5305;&#x6253;&#x5305;&#x5728;lib&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x5168;&#x90E8;&#x6253;&#x5305;&#x5728;resources&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x9879;&#x76EE;&#x8FD0;&#x884C;&#x7684;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x6253;&#x5305;&#x5728;bin&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E0B;&#x3002; &#x5728;pom.xml&#x914D;&#x7F6E;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157&lt;build&gt; &lt;plugins&gt; &lt;!--&#x6253;&#x5305;jar --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;!--&#x4E0D;&#x6253;&#x5305;&#x8D44;&#x6E90;&#x6587;&#x4EF6; --&gt; &lt;excludes&gt; &lt;exclude&gt;bin/**&lt;/exclude&gt; &lt;exclude&gt;config/**&lt;/exclude&gt; &lt;exclude&gt;static/**&lt;/exclude&gt; &lt;exclude&gt;templates/**&lt;/exclude&gt; &lt;exclude&gt;*.yml&lt;/exclude&gt; &lt;/excludes&gt; &lt;!-- &lt;archive&gt; &lt;manifest&gt; &lt;addClasspath&gt;true&lt;/addClasspath&gt; // MANIFEST.MF &#x4E2D; Class-Path &#x52A0;&#x5165;&#x524D;&#x7F00;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x914D;&#x7F6E;&#xFF0C;&#x5728;&#x5916;&#x90E8;&#x547D;&#x4EE4;&#x884C;&#x6307;&#x5B9A; &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt; // jar&#x5305;&#x4E0D;&#x5305;&#x542B;&#x552F;&#x4E00;&#x7248;&#x672C;&#x6807;&#x8BC6; &lt;useUniqueVersions&gt;false&lt;/useUniqueVersions&gt; ` // &#x6307;&#x5B9A;&#x5165;&#x53E3;&#x7C7B;,&#x5982;&#x679C;&#x7A0B;&#x5E8F;&#x91CC;&#x53EA;&#x6709;&#x4E00;&#x4E2A;main&#x65B9;&#x6CD5;&#x5C31;&#x5EFA;&#x8BAE;&#x4E0D;&#x8981;&#x624B;&#x52A8;&#x914D;&#x7F6E; &lt;mainClass&gt;org.woodwhale.king.KingApplication&lt;/mainClass&gt; &lt;/manifest&gt; &lt;manifestEntries&gt; // MANIFEST.MF &#x4E2D; Class-Path &#x52A0;&#x5165;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x914D;&#x7F6E;&#xFF0C;&#x5728;&#x5916;&#x90E8;&#x547D;&#x4EE4;&#x884C;&#x6307; &lt;Class-Path&gt;./resources/&lt;/Class-Path&gt; &lt;/manifestEntries&gt; &lt;/archive&gt; --&gt; &lt;!-- &#x751F;&#x6210;&#x5230; target &#x76EE;&#x5F55;&#x4E0B;&#xFF0C; &#x4E5F;&#x53EF;&#x4EE5;&#x653E;&#x5230;&#x6307;&#x5B9A;&#x76EE;&#x5F55;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; ${project.build.directory}/boot --&gt; &lt;outputDirectory&gt;${project.build.directory}&lt;/outputDirectory&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;!--&#x62F7;&#x8D1D;&#x4F9D;&#x8D56; copy-dependencies --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;copy-dependencies&lt;/id&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;copy-dependencies&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;outputDirectory&gt;${project.build.directory}/lib&lt;/outputDirectory&gt; &lt;overWriteReleases&gt;false&lt;/overWriteReleases&gt; &lt;overWriteSnapshots&gt;false&lt;/overWriteSnapshots&gt; &lt;overWriteIfNewer&gt;true&lt;/overWriteIfNewer&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;!--&#x62F7;&#x8D1D;&#x8D44;&#x6E90;&#x6587;&#x4EF6; copy-resources --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;copy-resources&lt;/id&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;copy-resources&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;encoding&gt;UTF-8&lt;/encoding&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;outputDirectory&gt;${project.build.directory}/resources&lt;/outputDirectory&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;!-- spring boot repackage&#xFF0C; &#x4F9D;&#x8D56; maven-jar-plugin &#x6253;&#x5305;&#x7684;jar&#x5305; &#x91CD;&#x65B0;&#x6253;&#x5305;&#x6210; spring boot&#x7684;jar&#x5305; --&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;!-- &#x5305;&#x542B;&#x672C;&#x5730; jar &#x4F9D;&#x8D56; --&gt; &lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt; &lt;!-- &#x91CD;&#x5199;&#x5305;&#x542B;&#x4F9D;&#x8D56;&#xFF0C;&#x5305;&#x542B;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;jar&#x91CC;&#x6CA1;&#x6709;pom&#x91CC;&#x7684;&#x4F9D;&#x8D56; --&gt; &lt;includes&gt; &lt;include&gt; &lt;groupId&gt;null&lt;/groupId&gt; &lt;artifactId&gt;null&lt;/artifactId&gt; &lt;/include&gt; &lt;/includes&gt; &lt;layout&gt;ZIP&lt;/layout&gt; &lt;!-- &#x4F7F;&#x7528;&#x5916;&#x90E8;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;jar&#x5305;&#x91CC;&#x6CA1;&#x6709;&#x8D44;&#x6E90;&#x6587;&#x4EF6; --&gt; &lt;addResources&gt;true&lt;/addResources&gt; &lt;outputDirectory&gt;${project.build.directory}&lt;/outputDirectory&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;goals&gt; &lt;goal&gt;repackage&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;!-- &#x914D;&#x7F6E;jar&#x5305;&#x7279;&#x6B8A;&#x6807;&#x8BC6; &#x914D;&#x7F6E;&#x540E;&#xFF0C;&#x4FDD;&#x7559;&#x539F;&#x6587;&#x4EF6;&#xFF0C; &#x751F;&#x6210;&#x65B0;&#x6587;&#x4EF6; *-run.jar &#x914D;&#x7F6E;jar&#x5305;&#x7279;&#x6B8A;&#x6807;&#x8BC6; &#x4E0D;&#x914D;&#x7F6E;&#xFF0C; &#x539F;&#x6587;&#x4EF6;&#x547D;&#x540D;&#x4E3A; *.jar.original&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x6587;&#x4EF6; *.jar --&gt; &lt;classifier&gt;run&lt;/classifier&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;!-- &#x6253;&#x5305;&#x53D1;&#x5E03;&#x65F6;&#xFF0C;&#x8DF3;&#x8FC7;&#x5355;&#x5143;&#x6D4B;&#x8BD5; --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;skipTests&gt;true&lt;/skipTests&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;!-- &#x4F7F;&#x7528;assembly&#x6253;zip&#x5305; --&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;appendAssemblyId&gt;false&lt;/appendAssemblyId&gt; &lt;descriptors&gt; &lt;!-- assembly&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4F4D;&#x7F6E; --&gt; &lt;descriptor&gt;assembly.xml&lt;/descriptor&gt; &lt;/descriptors&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;make-assembly&lt;/id&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;single&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; &#x6CE8;&#x610F;&#xFF1A;&#x5728;spring-boot-maven-plugin&#x4E2D;&#x914D;&#x7F6E;&#x4E86;&#x5305;&#x542B;&#x672C;&#x5730;jar&#x4F9D;&#x8D56;&#x7684;&#x914D;&#x7F6E;&lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt; &#x5728;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x5B58;&#x5728;&#x653E;&#x7F6E;assembly.xml&#x914D;&#x7F6E;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;assembly xmlns=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd&quot;&gt; &lt;id&gt;${project.artifactId}&lt;/id&gt; &lt;formats&gt; &lt;format&gt;zip&lt;/format&gt; &lt;/formats&gt; &lt;!-- &#x538B;&#x7F29;&#x5305;&#x4E0B;&#x662F;&#x5426;&#x751F;&#x6210;&#x548C;&#x9879;&#x76EE;&#x540D;&#x76F8;&#x540C;&#x7684;&#x6839;&#x76EE;&#x5F55; --&gt; &lt;includeBaseDirectory&gt;false&lt;/includeBaseDirectory&gt; &lt;baseDirectory&gt;${project.artifactId}-${project.version}&lt;/baseDirectory&gt; &lt;fileSets&gt; &lt;fileSet&gt; &lt;directory&gt;${project.build.directory}&lt;/directory&gt; &lt;outputDirectory&gt;&lt;/outputDirectory&gt; &lt;includes&gt; &lt;include&gt;${artifact.artifactId}-${artifact.version}.jar&lt;/include&gt; &lt;/includes&gt; &lt;/fileSet&gt; &lt;fileSet&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;outputDirectory&gt;${file.separator}resources&lt;/outputDirectory&gt; &lt;/fileSet&gt; &lt;fileSet&gt; &lt;directory&gt;bin/&lt;/directory&gt; &lt;outputDirectory&gt;${file.separator}bin&lt;/outputDirectory&gt; &lt;/fileSet&gt; &lt;fileSet&gt; &lt;directory&gt;lib/&lt;/directory&gt; &lt;outputDirectory&gt;${file.separator}lib&lt;/outputDirectory&gt; &lt;/fileSet&gt; &lt;/fileSets&gt; &lt;!-- &#x4F7F;&#x7528;&#x9879;&#x76EE;&#x7684;artifact&#xFF0C;&#x7B2C;&#x4E09;&#x65B9; jar &#x6253;&#x5305;&#x8FDB;zip&#x6587;&#x4EF6;&#x7684; lib &#x76EE;&#x5F55; --&gt; &lt;dependencySets&gt; &lt;dependencySet&gt; &lt;useProjectArtifact&gt;true&lt;/useProjectArtifact&gt; &lt;outputDirectory&gt;lib&lt;/outputDirectory&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;includes&gt; &lt;include&gt;*:*&lt;/include&gt; &lt;/includes&gt; &lt;excludes&gt; &lt;exclude&gt;${groupId}:${artifactId}&lt;/exclude&gt; &lt;exclude&gt;org.springframework.boot:spring-boot-devtools&lt;/exclude&gt; &lt;/excludes&gt; &lt;/dependencySet&gt; &lt;/dependencySets&gt;&lt;/assembly&gt; &#x5728;bin&#x811A;&#x672C;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E2D;&#x653E;&#x7F6E;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x548C;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A; &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7528;&#x4E8E;&#x6307;&#x5B9A; jar &#x7684;&#x540D;&#x79F0;&#x53CA;&#x7248;&#x672C;&#x4FE1;&#x606F; 12ARTIFACTID=kingVERSION=0.0.1 windows &#x811A;&#x672C;start.bat&#x6587;&#x4EF6;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041ECHO offECHO &quot;checking config.ini...&quot;SET ROOT=%~dp0SET CONFIG_FILE=%ROOT%config.iniREM **&#x4ECE;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x8BFB;&#x53D6;&#x5185;&#x5BB9;**FOR /F &quot;tokens=1,2 delims==&quot; %%i IN (%CONFIG_FILE%) DO ( SET %%i=%%j)SET APP_NAME=%ARTIFACTID%-%VERSION%IF &quot;%APP_NAME%&quot; == &quot;&quot; ( ECHO &quot;this config.ini is not exist&#xFF0C;please check this config file.&quot; GOTO End) ELSE ( ECHO &quot;checking JAVA_HOME config from checking config.ini...&quot; GOTO OkPath):OkPathecho &quot;check java_home...&quot;if not &quot;%JAVA_HOME%&quot; == &quot;&quot; GOTO OkJHome:OkJHomeif exist &quot;%JAVA_HOME%\bin\java.exe&quot; GOTO Runserver:RunserverSET JAR_NAME=%APP_NAME%.jarSET APP_CONFIG=-Dloader.path=.,resources,libECHO &quot;111:%RUN_JAVA%&quot;ECHO &quot;Starting the %JAR_NAME%&quot;ECHO &quot;%JAVA_HOME%\bin\java -Xms512m -Xmx512m -jar %APP_CONFIG% %JAR_NAME%&quot;CD ..%JAVA_HOME%\bin\java.exe -Xms512m -Xmx512m -jar %APP_CONFIG% %JAR_NAME%GOTO End:EndPAUSE &#x811A;&#x672C;&#x89E3;&#x91CA;&#xFF1A;&#x6700;&#x4E3A;&#x5173;&#x952E;&#x7684;&#x5C31;&#x662F;&#x8FD0;&#x884C;jar &#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x643A;&#x5E26;-Dloader.path=.,resources,lib linux &#x811A;&#x672C;startup.sh&#x6587;&#x4EF6;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687#!/bin/sh## java envexport JAVA_HOME=/usr/java/jdk1.8.0_162API_NAME=./king-0.0.1.jarexport JRE_HOME=JAVA_HOME/jreAPI_CONFIG=.,resources,libJAR_NAME=$API_NAME.jarPID=$API_NAME.pidusage() { echo &quot;Usage: sh startup.sh [start|stop|restart|status]&quot; exit 1}is_exist(){ pid=`ps -ef|grep $JAR_NAME|grep -v grep|awk &apos;{print $2}&apos; ` if [ -z &quot;${pid}&quot; ]; then return 1 else return 0 fi}start(){ is_exist if [ $? -eq &quot;0&quot; ]; then echo &quot;&gt;&gt;&gt; ${JAR_NAME} is already running PID=${pid} &lt;&lt;&lt;&quot; else nohup $JRE_HOME/bin/java -Xms256m -Xmx512m -jar -Dloader.path=$API_CONFIG $JAR_NAME &gt;/dev/null 2&gt;&amp;1 &amp; echo $! &gt; $PID echo &quot;&gt;&gt;&gt; start $JAR_NAME successed PID=$! &lt;&lt;&lt;&quot; fi }stop(){ #is_exist pidf=$(cat $PID) #echo &quot;$pidf&quot; echo &quot;&gt;&gt;&gt; api PID = $pidf begin kill $pidf &lt;&lt;&lt;&quot; kill $pidf rm -rf $PID sleep 2 is_exist if [ $? -eq &quot;0&quot; ]; then echo &quot;&gt;&gt;&gt; api 2 PID = $pid begin kill -9 $pid &lt;&lt;&lt;&quot; kill -9 $pid sleep 2 echo &quot;&gt;&gt;&gt; $JAR_NAME process stopped &lt;&lt;&lt;&quot; else echo &quot;&gt;&gt;&gt; ${JAR_NAME} is not running &lt;&lt;&lt;&quot; fi }status(){ is_exist if [ $? -eq &quot;0&quot; ]; then echo &quot;&gt;&gt;&gt; ${JAR_NAME} is running PID is ${pid} &lt;&lt;&lt;&quot; else echo &quot;&gt;&gt;&gt; ${JAR_NAME} is not running &lt;&lt;&lt;&quot; fi}restart(){ stop start}case &quot;$1&quot; in &quot;start&quot;) start ;; &quot;stop&quot;) stop ;; &quot;status&quot;) status ;; &quot;restart&quot;) restart ;; *) usage ;;esacexit 0 shell &#x811A;&#x672C;&#x91CC;&#x9700;&#x8981;&#x914D;&#x7F6E;JAVA_HOME&#x8DEF;&#x5F84;&#x548C; jar &#x6587;&#x4EF6;&#x540D;&#x5373;&#x53EF;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Springboot</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
        <tag>Maven Project</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Web 如何超清无码]]></title>
    <url>%2F2018%2F11%2F30%2F007%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x524D;&#x8A00;1. &#x6587;&#x4EF6;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x901A;&#x7528;&#x8BBE;&#x7F6E;&#x5728;&#x4F7F;&#x7528; eclipse &#x5F00;&#x53D1;&#x5DE5;&#x5177;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9996;&#x5148;&#x9700;&#x8981;&#x786E;&#x5B9A;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x7684;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#xFF1A; windows&#x83DC;&#x5355; &#x2013;&#xBB; perferences&#x9009;&#x9879; &#x2013;&#xBB; General&#x9009;&#x9879;&#x4E2D;&#x7684;Workspace&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x9009;&#x9879;&#xFF0C;&#x8BBE;&#x7F6E;&#x6587;&#x4EF6;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x3002; 2. &#x6587;&#x4EF6;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x5355;&#x72EC;&#x8BBE;&#x7F6E;&#x5355;&#x4E2A;&#x9879;&#x76EE;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x8BBE;&#x7F6E;&#xFF1A;&#x9879;&#x76EE; &#x2013;&#xBB; &#x53F3;&#x952E; &#x2013;&#xBB; Properties &#x2013;&#xBB; Text file encoding &#x5355;&#x4E2A;&#x9875;&#x9762;&#x6587;&#x4EF6;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x8BBE;&#x7F6E;&#xFF1A;&#x9875;&#x9762; &#x2013;&#xBB; &#x53F3;&#x952E; &#x2013;&#xBB; Properties &#x2013;&#xBB; Text file encoding &#x4E00;&#x3001;response &#x54CD;&#x5E94;&#x4E71;&#x7801;response &#x54CD;&#x5E94;&#x6570;&#x636E;&#x56DE;&#x6D4F;&#x89C8;&#x5668;&#x4E4B;&#x524D;&#xFF0C;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x5C06;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x6210;&#x5B57;&#x8282;&#x6D41;&#x7684;&#x5F62;&#x5F0F;&#x8F93;&#x51FA;&#x5185;&#x5BB9;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5B57;&#x7B26;&#x6D41;&#x7684;&#x5F62;&#x5F0F;&#x8F93;&#x51FA;&#x5185;&#x5BB9;&#xFF0C;&#x4F46;&#x662F;&#x5B57;&#x7B26;&#x6D41;&#x5F62;&#x5F0F;&#x4EC5;&#x9650;&#x4E8E;&#x6587;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x6B64;&#x524D;&#x8005;&#x5728; web &#x5F00;&#x53D1;&#x4E2D;&#x9700;&#x8981;&#x66F4;&#x8C28;&#x614E;&#x7684;&#x5173;&#x6CE8;&#x548C;&#x7406;&#x89E3;&#x539F;&#x7406;&#x3002; 1.2 &#x5B57;&#x8282;&#x6D41;&#x54CD;&#x5E94;&#x5728; web &#x5DE5;&#x7A0B;&#x4E2D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;servlet 12345678910111213public class ResponseDemo1 extends HttpServlet { private static final long serialVersionUID = 1L; protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { String data =&quot;&#x6728;&#x9CB8;&#x9C7C;&quot;; response.getOutputStream().write(data.getBytes()); } protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { doGet(request, response); }} &#x6CE8;&#x610F;&#xFF0C;&#x6B64;&#x65F6;&#x7684;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x7F16;&#x7801;&#x7C7B;&#x578B;&#x4E3A;&#xFF1A;UTF-8&#xFF0C;&#x67E5;&#x770B;&#x6587;&#x4EF6;&#x7F16;&#x7801;&#x7C7B;&#x578B;&#x53EF;&#x53F3;&#x51FB;&#x6587;&#x4EF6;&#x5C5E;&#x6027;&#xFF0C;&#x5728;Resource&#x9009;&#x9879;&#x4E2D;&#x7684;Text file encoding&#x4E2D;&#x53EF;&#x89C1;&#x3002; servlet &#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x8DEF;&#x5F84;&#x6620;&#x5C04;&#x914D;&#x7F6E;&#xFF1A; 123456789&lt;servlet&gt; &lt;description&gt;&lt;/description&gt; &lt;servlet-name&gt;responseDemo1&lt;/servlet-name&gt; &lt;servlet-class&gt;org.king.response.ResponseDemo1&lt;/servlet-class&gt;&lt;/servlet&gt;&lt;servlet-mapping&gt; &lt;servlet-name&gt;responseDemo1&lt;/servlet-name&gt; &lt;url-pattern&gt;/responseDemo1&lt;/url-pattern&gt;&lt;/servlet-mapping&gt; &#x4F7F;&#x7528; IE &#x6D4F;&#x89C8;&#x5668;&#x8BBF;&#x95EE; web &#x5DE5;&#x7A0B;&#xFF0C;&#x6B64;&#x65F6;&#x6D4F;&#x89C8;&#x5668;&#x663E;&#x793A;&#x4E2D;&#x6587;&#x4E71;&#x7801;&#xFF0C;&#x5E76;&#x4E14;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x7F51;&#x9875;&#x7F16;&#x7801;&#x53EF;&#x77E5;&#xFF0C;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;GB2312&#x7F16;&#x7801;&#x89E3;&#x6790;&#x54CD;&#x5E94;&#x6587;&#x672C;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;GB2312&#x7801;&#x8868;&#x5462;&#xFF1F;&#x56E0;&#x4E3A; windows &#x7CFB;&#x7EDF;&#x672C;&#x5730;&#x7684;&#x65F6;&#x533A;&#x8BED;&#x8A00;&#x662F;&#x4E2D;&#x6587;&#xFF0C;&#x56E0;&#x6B64;&#x6D4F;&#x89C8;&#x5668;&#x4F1A;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;GB2312&#x89E3;&#x7801;&#x54CD;&#x5E94;&#x4F53;&#x3002;&#x5F53;&#x624B;&#x52A8;&#x66F4;&#x6539;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x4E3A;UTF-8&#x65F6;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x663E;&#x793A;&#x6C49;&#x5B57;&#x5185;&#x5BB9;&#x6B63;&#x5E38;&#x3002; &#x90A3;&#x4E48;&#x95EE;&#x9898;&#x6765;&#x4E86;&#xFF0C;&#x9ED8;&#x8BA4;&#x7528;&#x6237;&#x90FD;&#x662F;&#x7535;&#x8111;&#x5C0F;&#x767D;&#xFF0C;&#x4E0D;&#x80FD;&#x7B49;&#x7528;&#x6237;&#x770B;&#x5230;&#x7F51;&#x9875;&#x4E71;&#x7801;&#x518D;&#x81EA;&#x5DF1;&#x624B;&#x52A8;&#x4FEE;&#x6539;&#x6D4F;&#x89C8;&#x5668;&#x89E3;&#x7801;&#x683C;&#x5F0F;&#xFF0C;&#x8FD9;&#x4F3C;&#x4E4E;&#x4E0D;&#x662F;&#x96C5;&#x7684; web &#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x51FA;&#x73B0;&#x7684;&#x95EE;&#x9898;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848; 1&#xFF1A;&#x54CD;&#x5E94;&#x5934;&#x8BBE;&#x7F6E; &#x4E8E;&#x662F;&#x5728;&#x7A0B;&#x5E8F;&#x54CD;&#x5E94;&#x56DE;&#x6D4F;&#x89C8;&#x5668;&#x4E4B;&#x524D;&#xFF0C;&#x8BBE;&#x7F6E;&#x54CD;&#x5E94;&#x5934;&#xFF1A; 123String data =&quot;&#x6728;&#x9CB8;&#x9C7C;&quot;;response.setHeader(&quot;Content-Type&quot;, &quot;text/html;charset=UTF-8&quot;); // &#x589E;&#x52A0;&#x54CD;&#x5E94;&#x5934;&#x8BBE;&#x7F6E;response.getOutputStream().write(data.getBytes()); &#x901A;&#x8FC7;&#x54CD;&#x5E94;&#x5934;&#x7684;&#x8BBE;&#x7F6E;&#xFF0C;&#x4F7F;&#x5F97;&#x6D4F;&#x89C8;&#x5668;&#x5FC5;&#x987B;&#x4EE5;&#x7A0B;&#x5E8F;&#x8BBE;&#x7F6E;&#x7684;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x89E3;&#x6790; html &#x6587;&#x672C;&#x5185;&#x5BB9;&#xFF1A; &#x6CE8;&#x610F;&#xFF1A;&#x5728;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5F88;&#x9690;&#x853D;&#x7684;&#x9690;&#x60A3;&#xFF0C;&#x56E0;&#x4E3A;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x5C31;&#x662F;UTF-8&#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x4E14;&#x5DE5;&#x4F5C;&#x7A7A;&#x95F4;&#x8BBE;&#x7F6E;&#x7684;&#x662F;UTF-8&#x7F16;&#x7801;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x95EE;&#x9898; 1&#x4E2D;&#x8BBE;&#x7F6E;&#x6D4F;&#x89C8;&#x5668;&#x4E3A;UTF-8&#x7F16;&#x7801;&#x89E3;&#x6790;&#x6587;&#x672C;&#x7684;&#x65F6;&#x5019;&#x624D;&#x80FD;&#x6B63;&#x5E38;&#x663E;&#x793A;&#xFF0C;&#x56E0;&#x6B64;&#x5BF9;&#x4E8E;&#x8F93;&#x51FA;&#x5B57;&#x8282;&#x6D41;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x4E0A;&#x8FF0;&#x6E90;&#x7801;&#x4E2D;&#x5BF9;data&#x5B57;&#x7B26;&#x4E32;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x6570;&#x7EC4;&#x8F6C;&#x6362;&#x7684;&#x65F6;&#x5019;&#x6307;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#x3002; 123String data =&quot;&#x6728;&#x9CB8;&#x9C7C;&quot;;response.setHeader(&quot;Content-Type&quot;, &quot;text/html;charset=UTF-8&quot;); // &#x589E;&#x52A0;&#x54CD;&#x5E94;&#x5934;&#x8BBE;&#x7F6E;response.getOutputStream().write(data.getBytes(&#x201C;UTF-8&#x201D;)); &#x89E3;&#x51B3;&#x65B9;&#x6848; 2&#xFF1A;&#x6A21;&#x62DF; http &#x5934;&#x6587;&#x4EF6; &#x5728; html &#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;meta&#x6807;&#x7B7E;&#x4E2D;&#x7684;http-equiv&#x5C5E;&#x6027;&#x6307;&#x5B9A;&#xFF1A; 1234String httpHeader = &quot;&lt;html&gt;&lt;meta http-equiv=&apos;Content-Type&apos; content=&apos;charset=UTF-8&apos;&gt;&lt;body&gt;&quot;; response.getOutputStream().write(httpHeader.getBytes()); response.getOutputStream().write((data).getBytes()); response.getOutputStream().write(&quot;&lt;/body&gt;&lt;/html&gt;&quot;.getBytes()); &#x67E5;&#x770B;&#x6E90;&#x7801;&#x53EF;&#x77E5;&#xFF0C;html &#x89E3;&#x6790;&#x4E86;meta&#x6807;&#x7B7E;&#x53CA;&#x5176;&#x5C5E;&#x6027;&#x3002;&#x53E6;&#x5916;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x5728; W3C &#x6587;&#x6863;&#x4E2D;&#x8BF4;&#x660E;&#x4E86;&#x4F7F;&#x7528; http-equiv &#x5DF2;&#x7ECF;&#x4E0D;&#x662F;&#x89C4;&#x5B9A; HTML &#x6587;&#x6863;&#x7684;&#x5B57;&#x7B26;&#x96C6;&#x7684;&#x552F;&#x4E00;&#x65B9;&#x5F0F;&#xFF1A; HTML 4.01 &#x4E0E; HTML5&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#xFF1A;HTML 4.01&#xFF1A;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;HTML5&#xFF1A;&lt;meta charset=&quot;UTF-8&quot;&gt;&#x53C2;&#x8003;&#x5730;&#x5740;&#xFF1A;http://www.w3school.com.cn/tags/tag_meta.asp 1.2 &#x5B57;&#x7B26;&#x6D41;&#x54CD;&#x5E94;&#x7531;&#x4E8E;&#x5927;&#x591A;&#x6570;&#x6570;&#x636E;&#x90FD;&#x662F;&#x4EE5;&#x5B57;&#x7B26;&#x6587;&#x672C;&#x7684;&#x5F62;&#x5F0F;&#x54CD;&#x5E94;&#x56DE;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x5C06;&#x6570;&#x636E;&#x8F6C;&#x6210;&#x5B57;&#x7B26;&#x6D41;&#x4F20;&#x8F93;&#x3002; 123String data =&quot;&#x6728;&#x9CB8;&#x9C7C;&quot;;PrintWriter out = response.getWriter();out.write(data); &#x6CE8;&#x610F;&#xFF0C;&#x5373;&#x4F7F;&#x662F;&#x4F7F;&#x7528;&#x5B57;&#x7B26;&#x6D41;&#x4F20;&#x8F93;&#xFF0C;&#x5728;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5747;&#x5C06;&#x5B57;&#x7B26;&#x6570;&#x636E;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7684;&#x7801;&#x8868;&#x89E3;&#x6790;&#x6210;&#x673A;&#x5668;&#x7801;&#x8FDB;&#x884C;&#x6570;&#x5B57;&#x4F20;&#x8F93;&#xFF0C;&#x5230;&#x4E86;&#x76EE;&#x7684;&#x5730;&#x518D;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x7684;&#x7801;&#x8868;&#x8FDB;&#x884C;&#x7FFB;&#x8BD1;&#x89E3;&#x6790;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E0A;&#x9762;&#x7B80;&#x5355;&#x7684;&#x4F7F;&#x7528;&#x5B57;&#x7B26;&#x6D41;&#x6570;&#x636E;&#x54CD;&#x5E94;&#x56DE;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x65F6;&#x5019;&#x4E00;&#x5B9A;&#x662F;&#x6309;&#x7167;&#x67D0;&#x79CD;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#x6210;&#x4E8C;&#x8FDB;&#x5236;&#x4FE1;&#x606F;&#x5E76;&#x4F20;&#x8F93;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x9879;&#x76EE;&#x4F7F;&#x7528;&#x7684;&#x662F; Tomcat &#x670D;&#x52A1;&#x5668;&#xFF0C;&#x6240;&#x4EE5;&#x9ED8;&#x8BA4;&#x7684;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x4E3A;ISO8859-1&#xFF0C;&#x5728; Tomcat &#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x4E00;&#x7AE0;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x53E5;&#x8BF4;&#x660E;&#xFF0C;&#x610F;&#x601D;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#x5C31;&#x4F7F;&#x7528; ISO8859-1&#x4F20;&#x8F93;&#x6570;&#x636E;&#xFF1A; The HTTP specification is clear that if no character set is specified for media sub-types of the &#x201C;text&#x201D; media type, the ISO-8859-1 character set must be used.&#x53C2;&#x8003;&#x5730;&#x5740;&#xFF1A;http://tomcat.apache.org/tomcat-7.0-doc/config/filter.html &#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF1A;&#x8BBE;&#x7F6E; response &#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801;&#x53CA;&#x54CD;&#x5E94;&#x5934; &#x8BBE;&#x7F6E; response &#x54CD;&#x5E94;&#x5BF9;&#x8C61;&#x4EE5;&#x7279;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x54CD;&#x5E94;&#x5934;&#xFF0C;&#x8981;&#x6C42;&#x6D4F;&#x89C8;&#x5668;&#x4EE5;&#x7279;&#x5B9A;&#x683C;&#x5F0F;&#x89E3;&#x6790;&#xFF0C;&#x5373;&#x53EF;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x4E0D;&#x4F1A;&#x4E71;&#x7801;&#xFF1A; 12345678String data =&quot;&#x6728;&#x9CB8;&#x9C7C;&quot;;// &#x8981;&#x6C42; response &#x4EE5; UTF-8 &#x5B57;&#x7B26;&#x96C6;&#x8F93;&#x51FA;response.setCharacterEncoding(&quot;UTF-8&quot;);// &#x901A;&#x77E5;&#x6D4F;&#x89C8;&#x5668;&#x4EE5; UTF-8 &#x5B57;&#x7B26;&#x96C6;&#x89E3;&#x6790;&#x6570;&#x636E;// response.setHeader(&quot;Content-Type&quot;, &quot;text/html;charset=UTF-8&quot;); // &#x7B49;&#x6548;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;response.setContentType(&quot;text/html;charset=UTF-8&quot;);PrintWriter out = response.getWriter();out.write(data); &#x6CE8;&#x610F;&#xFF1A;Java &#x8BBE;&#x8BA1;&#x8005;&#x5728;&#x8BBE;&#x8BA1;HttpServletResponse&#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#x63D0;&#x4F9B;&#x4E86;setContentType()&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x901A;&#x77E5;&#x6D4F;&#x89C8;&#x5668;&#x4EE5;&#x6307;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#x89E3;&#x6790;&#x6587;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x8981;&#x6C42; response &#x5BF9;&#x8C61;&#x4EE5;&#x6307;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x3002; &#x6269;&#x5C55;&#xFF1A; &#x54CD;&#x5E94;&#x5934;&#x7684;&#x4FE1;&#x606F;&#x4E2D;&#x4E0D;&#x5141;&#x8BB8;&#x5305;&#x542B;&#x4E2D;&#x6587;&#x7F16;&#x7801;&#xFF0C;&#x53EA;&#x80FD;&#x662F; ASCII &#x7801;&#x5B57;&#x7B26;&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x4E8E;&#x56FE;&#x7247;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x4F20;&#x8F93;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x5C31;&#x5FC5;&#x987B;&#x4F7F;&#x7528;URLEncoding&#x7C7B;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x8F6C;&#x7801;&#xFF1A; 1response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot; + URLEncoder.encode(data,&quot;UTF-8&quot;)); &#x4E8C;&#x3001;request &#x8BF7;&#x6C42;&#x4E71;&#x7801;&#x76EE;&#x524D;&#xFF0C;request &#x8BF7;&#x6C42;&#x7684;&#x4E3B;&#x6D41;&#x8BF7;&#x6C42;&#x7C7B;&#x578B;&#x4E3A;GET&#x548C;POST&#xFF0C;&#x5176;&#x4E2D;GET&#x8BF7;&#x6C42;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x5728;&#x8868;&#x5355;&#x4E2D;&#x63D0;&#x4EA4;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x5730;&#x5740;&#x680F;&#x4E2D;&#x663E;&#x793A;&#x8BF7;&#x6C42;&#x3002; 2.1 &#x8868;&#x5355;&#x4E2D;&#x7684; POST &#x8BF7;&#x6C42;post &#x8BF7;&#x6C42;&#x6570;&#x636E;&#x5728;&#x53D1;&#x9001;&#x65F6;&#x4E00;&#x5B9A;&#x7ECF;&#x8FC7;&#x67D0;&#x79CD;&#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801;&#x6210;&#x4E8C;&#x8FDB;&#x5236;&#x4FE1;&#x606F;&#xFF0C;&#x518D;&#x7ECF;&#x8FC7;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x5230;&#x670D;&#x52A1;&#x5668;&#xFF0C;post &#x8BF7;&#x6C42;&#x5728; html &#x9875;&#x9762;&#x548C; jsp &#x9875;&#x9762;&#x4E2D;&#x4F1A;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x8868;&#x73B0;&#x3002; [1] post &#x8BF7;&#x6C42;&#x5728;html&#x9875;&#x9762;&#x8868;&#x73B0;&#xFF1A; &#x5728; html &#x9875;&#x9762;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x6709;meta&#x4FE1;&#x606F;&#x6307;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801;&#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x6B64;&#x7F16;&#x7801;&#x4F20;&#x8F93;&#x6570;&#x636E;&#xFF0C;&#x6CA1;&#x6709;&#x5219;&#x4F7F;&#x7528;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x7F16;&#x7801;&#xFF0C;&#x4E2D;&#x6587;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E00;&#x822C;&#x4F7F;&#x7528;GB2312&#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801;&#x3002; &#x4E0B;&#x9762; html &#x9875;&#x9762;&#x6307;&#x5B9A;&#x4E86;meta&#x4FE1;&#x606F;&#xFF1A; 123&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=GBK&quot;&gt; // &#x6216;&#x8005;&lt;meta charset=&quot;GBK&quot;&gt; &#x6B64;&#x65F6;&#x6570;&#x636E;&#x4F20;&#x8F93;&#x5230;&#x670D;&#x52A1;&#x5668;&#x662F;&#x7ECF;&#x8FC7;UTF-8&#x7F16;&#x7801;&#x89E3;&#x6790;&#xFF0C;&#x540E;&#x53F0;&#x83B7;&#x53D6;&#x8BF7;&#x6C42;&#x6570;&#x636E; 12String username = request.getParameter(&quot;username&quot;);String password = request.getParameter(&quot;password&quot;); &#x6B64;&#x65F6;&#x4E00;&#x5B9A;&#x662F;&#x4F1A;&#x51FA;&#x73B0;&#x4E2D;&#x6587;&#x4E71;&#x7801;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;request.getParameter()&#x7684;&#x77AC;&#x95F4;&#xFF0C;Tomcat &#x4F1A;&#x5C06;&#x7F51;&#x7EDC;&#x6570;&#x636E;&#x4E2D;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x67E5;&#x8BE2;ISO8859-1&#x5B57;&#x7B26;&#x96C6;&#x8BD5;&#x56FE;&#x89E3;&#x7801;&#x6210;&#x53EF;&#x89C1;&#x5B57;&#x7B26;&#x5E76;&#x8FD4;&#x56DE;&#x3002; &#x300C; &#x89E3;&#x51B3;&#x65B9;&#x6848; &#x300D; &#x5728;request.getParameter()&#x8C03;&#x7528;&#x4E4B;&#x524D;&#xFF0C;&#x8981;&#x6C42; request &#x5BF9;&#x8C61;&#x83B7;&#x53D6;&#x8BF7;&#x6C42;&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;&#x6307;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#xFF1A; 1request.setCharacterEncoding(&quot;UTF-8&quot;); &#x4E5F;&#x5C31;&#x662F; request &#x5BF9;&#x8C61;&#x83B7;&#x53D6;&#x8BF7;&#x6C42;&#x53C2;&#x6570;&#x65F6;&#xFF0C;&#x4E0D;&#x8981;&#x4F9D;&#x8D56;&#x670D;&#x52A1;&#x5668;&#x7684; API &#x5B9E;&#x73B0;&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528;&#x7A0B;&#x5E8F;&#x5458;&#x81EA;&#x5DF1;&#x7684;&#x5B57;&#x7B26;&#x96C6;&#x7F16;&#x7801;&#x3002; &#x5B8C;&#x7F8E;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4EE3;&#x7801;&#xFF1A; 123request.setCharacterEncoding(&quot;UTF-8&quot;);String username = request.getParameter(&quot;username&quot;);String password = request.getParameter(&quot;password&quot;); [2] post &#x8BF7;&#x6C42;&#x5728; jsp &#x9875;&#x9762;&#x8868;&#x73B0;&#xFF1A; &#x5728; jsp &#x9875;&#x9762;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;@page&#x4E2D;&#x6307;&#x5B9A;&quot;contentType&quot;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728; html &#x6587;&#x672C;&#x4E2D;&#x6307;&#x5B9A;meta&#x4FE1;&#x606F;&#xFF0C;&#x5F53;&#x6709;@page&#x6307;&#x5B9A;charset&#x65F6;&#xFF0C;&#x6B64;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x4F18;&#x4E0E;meta&#x914D;&#x7F6E;&#xFF0C;&#x5C31;&#x662F;&#x8BF4;&#x4E0B;&#x9762; jsp &#x9875;&#x9762;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x663E;&#x793A;&#x7684;&#x9ED8;&#x8BA4;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x4E3A;GBK&#xFF1A; 1234567891011121314151617&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=GBK&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt; &lt;form action=&quot;/king-world/index&quot; method=&quot;POST&quot;&gt; &#x7528;&#x6237;&#x540D;&#xFF1A;&lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt;&lt;br/&gt; &#x5BC6;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#x7801;&#xFF1A;&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;&lt;br/&gt; &lt;input type=&quot;submit&quot; value=&quot;&#x63D0; &#x4EA4;&quot;/&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; &#x5BF9;&#x4E8E;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x53C2;&#x6570;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x548C;&#x5728;&#x4E0A;&#x4E00;&#x5C0F;&#x7ED3;&#x70B9;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002; 2.2 &#x8868;&#x5355;&#x4E2D;&#x53CA;&#x5730;&#x5740;&#x680F;&#x4E2D;&#x7684; GET &#x8BF7;&#x6C42;&#x9875;&#x9762;&#x53CA;&#x5730;&#x5740;&#x680F;&#x4E2D;&#x7684;GET&#x8BF7;&#x6C42;&#xFF0C;&#x5728;&#x6570;&#x636E;&#x4F20;&#x8F93;&#x65F6;&#x4F7F;&#x7528;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x4E0D;&#x4F9D;&#x8D56;&#x4E8E;&#x9875;&#x9762;&#x7684;meta&#x6216;&#x8005;contentType&#x4FE1;&#x606F;&#xFF0C;GET &#x8BF7;&#x6C42;&#x7684;&#x672C;&#x8D28;&#x662F;&#x4F7F;&#x7528;&#x7EDF;&#x4E00;&#x8D44;&#x6E90;&#x6807;&#x5FD7;&#x7B26;&#xFF0C;&#x5F53;&#x8868;&#x5355;&#x4E2D;&#x7684;GET&#x8BF7;&#x6C42;&#x53D1;&#x751F;&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x8BF7;&#x6C42;&#x5730;&#x5740;&#x4F1A;&#x6253;&#x5370;&#x5230;&#x5730;&#x5740;&#x680F;&#x4E2D;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x5728; IE &#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x4E0D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E2D;&#x6587;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x76F4;&#x63A5;&#x53D1;&#x8BF7;&#x6C42;&#xFF0C;&#x800C; chrome &#x6D4F;&#x89C8;&#x5668;&#x4F1A;&#x5C06;&#x4E2D;&#x6587;&#x8FDB;&#x884C;URL&#x7F16;&#x7801;&#x518D;&#x53D1;&#x8BF7;&#x6C42;&#xFF0C;&#x81F3;&#x4E8E;&#x5176;&#x4ED6;&#x6D4F;&#x89C8;&#x5668;&#x662F;&#x5426;&#x81EA;&#x52A8;&#x8F6C;&#x7801;&#xFF0C;&#x7B14;&#x8005;&#x6CA1;&#x6D4B;&#x8BD5;&#x4E86;&#x3002; GET&#x8BF7;&#x6C42;&#x7531; Tomcat &#x670D;&#x52A1;&#x5BB9;&#x5668;&#x63A5;&#x6536;&#xFF0C;&#x4F1A;&#x5C06;&#x8FD9;&#x4E2A;URL&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x5BF9;&#x8FDB;&#x884C;ISO8859-1&#x7F16;&#x7801;&#xFF0C;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4F5C;&#x51FA;&#x4E86;&#x4E0B;&#x9762;&#x7684;&#x89E3;&#x91CA;&#xFF1A; &#x5728; Tomcat &#x7CFB;&#x7EDF;&#x53C2;&#x6570;&#x914D;&#x7F6E;&#x4E2D;&#x63D0;&#x5230;&#x4E86;&#x5173;&#x4E8E;URIEncoding&#x7684;&#x89E3;&#x91CA;&#xFF1A;This specifies the character encoding used to decode the URI bytes, after %xx decoding the URL. If not specified, ISO-8859-1 will be used.&#x53C2;&#x8003;&#x5730;&#x5740;&#xFF1A;https://tomcat.apache.org/tomcat-7.0-doc/config/http.html &#x89E3;&#x51B3;&#x65B9;&#x6848; 1 &#x4ECE;&#x4E0A;&#x8FF0;&#x63CF;&#x8FF0;&#x4E2D;&#x53EF;&#x77E5;&#xFF0C;&#x5728; Tomcat &#x670D;&#x52A1;&#x5668;&#x7684;conf&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x4E0B;&#x7684;server.xml&#x4E2D;&#x914D;&#x7F6E;&#x4E86;&#x8FDE;&#x63A5;&#x5668;&#x4FE1;&#x606F;&#xFF1A; &#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF1A;%tomcat root%\conf\server.xml1&lt;Connector connectionTimeout=&quot;20000&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; redirectPort=&quot;8443&quot;/&gt; &#x5728;Connector&#x8FDE;&#x63A5;&#x5668;&#x4E2D;&#x589E;&#x52A0;URIEncoding=&quot;UTF-8&quot;&#x5C5E;&#x6027;&#x914D;&#x7F6E;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848; 2 &#x5728; Tomcat &#x7684;server.xml&#x4E0B;&#x7684;connector&#x5C5E;&#x6027;&#x4E2D;&#x6DFB;&#x52A0;&#x53C2;&#x6570;useBodyEncodingForURI=&quot;true&quot;&#xFF08;&#x6CE8;&#x610F;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x5BF9;&#x6574;&#x4E2A; URI &#x90FD;&#x91C7;&#x7528; BodyEncoding&#xFF0C;&#x53EA;&#x662F;&#x5E94;&#x7528;&#x4E8E; Query String &#x800C;&#x5DF2;&#xFF09;&#x3002;&#x8FD9;&#x6837;&#xFF0C;Tomcat &#x4FBF;&#x4F1A;&#x7528;request.setCharacterEncoding()&#x6307;&#x5B9A;&#x7684;&#x7F16;&#x7801;&#x6765;&#x89E3;&#x6790; GET &#x53C2;&#x6570;&#x4E86;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848; 3 &#x5728; servlet &#x4E2D;&#x624B;&#x52A8;&#x8F6C;&#x7801;&#xFF0C;&#x5728; Tomcat &#x670D;&#x52A1;&#x5668;&#x4E2D;&#xFF0C;&#x5C06;ISO8859-1&#x8F6C;&#x7801;&#x6210;UTF-8&#xFF1A; 1234String username = request.getParameter(&quot;username&quot;); if(username != null &amp;&amp; !username.trim().isEmpty()) { username = new String(username.getBytes(&quot;ISO8859-1&quot;),&quot;UTF-8&quot;);} &#x89E3;&#x51B3;&#x65B9;&#x6848; 4 &#x5B9E;&#x73B0;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x62E6;&#x622A;&#x8FC7;&#x6EE4;&#xFF0C;&#x5E76;&#x5728;web.xml&#x4E2D;&#x914D;&#x7F6E;filter&#x548C;filter-mapping&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950public class EncodingFilter implements Filter { public void destroy() { } public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain) throws IOException, ServletException { // &#x5982;&#x679C;&#x5E0C;&#x671B;&#x533F;&#x540D;&#x5185;&#x90E8;&#x7C7B;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x5728;&#x5916;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x90A3;&#x4E48;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x8981;&#x6C42;&#x5176;&#x53C2;&#x6570;&#x5F15;&#x7528;&#x662F;final&#x7684; final HttpServletRequest request = (HttpServletRequest) req; HttpServletResponse response = (HttpServletResponse) resp; request.setCharacterEncoding(&quot;UTF-8&quot;);// POST&#x63D0;&#x4EA4;&#x6709;&#x6548; response.setContentType(&quot;text/html;charset=UTF-8&quot;); // &#x89E3;&#x51B3;&#xFF1A;&#x5BF9;HttpServletRequest&#x63A5;&#x53E3;&#x7684;getParameter&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x529F;&#x80FD;&#x6269;&#x5C55;&#xFF0C;&#x8BC6;&#x522B;GET&#x8BF7;&#x6C42;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x52A8;&#x6001;&#x4EE3;&#x7406;! HttpServletRequest proxyRequest = (HttpServletRequest) Proxy.newProxyInstance(request.getClass().getClassLoader(), new Class[] { HttpServletRequest.class }, new InvocationHandler() { // args&#x5BF9;&#x8C61;&#x6570;&#x7EC4;&#xFF0C;&#x4EE3;&#x8868;&#x88AB;&#x8C03;&#x7528;&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570; public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { String methodName = method.getName(); if (&quot;getParameter&quot;.equals(methodName)) { String value = request.getParameter(args[0] .toString()); String requestMethodName = request.getMethod(); if (&quot;GET&quot;.equals(requestMethodName)) { // &#x6392;&#x9664;&#x7A7A;&#x5BF9;&#x8C61;&#x53CA;&#x7A7A;&#x5B57;&#x7B26;&#x4E32; if (value != null &amp;&amp; !&quot;&quot;.equals(value.trim())) { value = new String(value .getBytes(&quot;iso-8859-1&quot;), &quot;utf-8&quot;); } } return value; } else { return method.invoke(request, args); } } }); //&#x653E;&#x884C; (&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x6216;&#x8005;servlet) chain.doFilter(proxyRequest, response); } public void init(FilterConfig filterConfig) throws ServletException { }} &#x63A8;&#x8350;&#x4F7F;&#x7528;&#x65B9;&#x6848; 4&#x3002; &#x4E09;&#x3001;jsp &#x9875;&#x9762;&#x7684;&#x7F16;&#x7801;&#x539F;&#x7406;3.1 jsp &#x9875;&#x9762;&#x7684;&#x7F16;&#x7801;&#x4E09;&#x9636;&#x6BB5;JSP&#x8981;&#x7ECF;&#x8FC7;&#x4E24;&#x6B21;&#x7684;&#x201D;&#x7F16;&#x7801;&#x201D;&#xFF0C;&#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#x4F1A;&#x7528;pageEncoding&#xFF0C;&#x7B2C;&#x4E8C;&#x9636;&#x6BB5;&#x4F1A;&#x7528;UTF-8&#x81F3;UTF-8&#xFF0C;&#x7B2C;&#x4E09;&#x9636;&#x6BB5;&#x5C31;&#x662F;&#x7531; Tomcat &#x51FA;&#x6765;&#x7684;&#x7F51;&#x9875;&#xFF0C; &#x7528;&#x7684;&#x662F;contentType&#x3002; &#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#xFF1A;JVM &#x5C06;.jsp&#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x4E3A;.java&#x6587;&#x4EF6;&#x3002;JVM &#x5148;&#x8BFB;&#x53D6;pageEncoding&#x7684;&#x503C;&#xFF0C;&#x6839;&#x636E;&#x8BE5;&#x503C;&#x53BB;&#x8BFB;&#x53D6;.jsp&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x7531;&#x6307;&#x5B9A;&#x7684;&#x7F16;&#x7801;&#x65B9;&#x6848;&#x751F;&#x6210;UTF-8&#x7684;.java&#x6587;&#x4EF6;&#x3002; &#x8BC1;&#x660E;&#xFF1A;&#x5728; Tomcat &#x670D;&#x52A1;&#x5668;&#x76EE;&#x5F55;&#x4E0B;work&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;Catalina&#x76EE;&#x5F55;&#x4E2D;&#x627E;&#x5230;.java&#x6587;&#x4EF6;&#xFF08;&#x7531;jsp&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x751F;&#x6210;&#xFF09;&#xFF0C;&#x5176;&#x6587;&#x4EF6;&#x7684;&#x7F16;&#x7801;&#x662F;UTF-8&#x683C;&#x5F0F;&#xFF0C;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6587;&#x672C;&#x5185;&#x5BB9;&#x662F;&#x6839;&#x636E;pageEncoding&#x7684;&#x5B57;&#x7B26;&#x96C6;&#x8FDB;&#x884C;&#x8BB0;&#x5F55;&#x3002; &#x7B2C;&#x4E8C;&#x9636;&#x6BB5;&#xFF1A;JVM &#x5C06;java&#x6587;&#x4EF6;&#x8F6C;&#x6362;&#x4E3A;class&#x6587;&#x4EF6;&#xFF0C;&#x4ECE;UTF-8&#x81F3;UTF-8&#x3002;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5C31;&#x4E0E;&#x4EFB;&#x4F55;&#x7F16;&#x7801;&#x7684;&#x8BBE;&#x7F6E;&#x90FD;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#x4E86;&#xFF0C;&#x7ECF;&#x8FC7;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x540E;.java&#x6587;&#x4EF6;&#x5C31;&#x8F6C;&#x6362;&#x6210;&#x4E86;&#x7EDF;&#x4E00;&#x7684;UTF-8&#x7F16;&#x7801;&#x7684;class&#x6587;&#x4EF6;&#x4E86;&#x3002; &#x7B2C;&#x4E09;&#x9636;&#x6BB5;&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x5C06;&#x5904;&#x7406;&#x7684;&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x7ED9;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x5219;&#x4F9D;&#x9760;contentType&#x7684;charset&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;charset&#x5219;&#x6D4F;&#x89C8;&#x5668;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x6307;&#x5B9A;&#x7684;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x8FDB;&#x884C;&#x89E3;&#x7801;&#xFF0C;&#x5426;&#x5219;&#x91C7;&#x7528;&#x9ED8;&#x8BA4;&#x7684;ISO-8859-1&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x8FDB;&#x884C;&#x89E3;&#x7801;&#x5904;&#x7406;&#x3002; &#x8BC1;&#x660E;&#xFF1A;&#x5728;jsp&#x5BF9;&#x5E94;&#x7684;.java&#x6587;&#x4EF6;&#x6E90;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230; response &#x54CD;&#x5E94;&#x5DF2;&#x7ECF;&#x6307;&#x5B9A;&#x4E86;Content-Type&#xFF1A;response.setContentType(&#x201C;text/html; charset=UTF-8&#x201D;); 3.2 jsp &#x9875;&#x9762;&#x4E2D;&#x8BBE;&#x7F6E;&#x5B57;&#x7B26;&#x96C6;1. pageEncoding 1&lt;%@ page pageEncoding=&quot;UTF-8&quot;%&gt; &#x4E0A;&#x6587;&#x4E2D;&#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#xFF0C;&#x4F7F;&#x7528;&#x8BE5;&#x503C;&#x53BB;&#x8BFB;&#x53D6;jsp&#x6587;&#x4EF6;&#xFF0C;&#x4E3A;&#x907F;&#x514D;&#x4E2D;&#x6587;&#x4E71;&#x7801;&#xFF0C;&#x8DDF;jsp&#x6587;&#x4EF6;&#x7F16;&#x7801;&#x4E00;&#x81F4;&#xFF1B;&#x5BF9;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x7F16;&#x7801;&#xFF0C;&#x5373;jsp&#x7684;&#x8F93;&#x51FA;&#x6D41;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x663E;&#x793A;&#x7684;&#x7F16;&#x7801;&#xFF08;&#x4E0D;&#x662F;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#xFF09;&#x3002; 2. contentType 1&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot;%&gt; &#x4F7F;&#x7528;&#x8BE5;&#x503C;&#x5BF9;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x7F16;&#x7801;&#xFF0C;&#x5373;jsp&#x7684;&#x8F93;&#x51FA;&#x6D41;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x663E;&#x793A;&#x7684;&#x7F16;&#x7801;&#xFF1B;&#x5BF9;&#x8868;&#x5355;get&#x548C;post&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x7F16;&#x7801;&#xFF1B;&#x4E0A;&#x6587;&#x4E2D;&#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#xFF0C;&#x4F7F;&#x7528;&#x8BE5;&#x503C;&#x53BB;&#x8BFB;&#x53D6;jsp&#x6587;&#x4EF6;&#xFF08;&#x4E0D;&#x662F;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#xFF09;&#x3002; 3. META 1&lt;META http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&gt; &#x7F51;&#x9875;&#x7684;&#x7F16;&#x7801;&#x4FE1;&#x606F; &#xFF0C;&#x8BF4;&#x660E;&#x9875;&#x9762;&#x5236;&#x4F5C;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x7F16;&#x7801;&#x3002; &#x56E0;&#x6B64;&#x7F16;&#x5199;jsp&#x9875;&#x9762;&#x7684;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x662F;&#x7EDF;&#x4E00;&#x914D;&#x7F6E;&#x6210;UTF-8&#x7F16;&#x7801;&#xFF1A; 123&lt;%@ page contentType=&#x201D;text/html;charset=UTF-8&#x201D; pageEncoding=&quot;UTF-8&quot;%&gt;&#x2026;&lt; META http-equiv=&#x201D;Content-Type&#x201D; content=&#x201D;text/html;charset=UTF-8&#x201D;&gt; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深入理解计算机系统 | 学习笔记（五）]]></title>
    <url>%2F2018%2F10%2F29%2F014%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x5E03;&#x5C14;&#x4EE3;&#x6570;&#x4E8C;&#x8FDB;&#x5236;&#x503C;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x7F16;&#x7801;&#x3001;&#x5B58;&#x50A8;&#x548C;&#x64CD;&#x4F5C;&#x4FE1;&#x606F;&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x6240;&#x4EE5;&#x56F4;&#x7ED5;&#x6570;&#x503C; 0 &#x548C; 1 &#x7684;&#x7814;&#x7A76;&#x5DF2;&#x7ECF;&#x6F14;&#x5316;&#x51FA;&#x4E86;&#x4E30;&#x5BCC;&#x7684;&#x6570;&#x5B66;&#x77E5;&#x8BC6;&#x4F53;&#x7CFB;&#x3002;&#x5176;&#x4E2D;&#x5F71;&#x54CD;&#x6700;&#x6DF1;&#x7684;&#x4EE3;&#x6570;&#x4F53;&#x7CFB;&#x662F;&#x5E03;&#x5C14;&#x4EE3;&#x6570;&#xFF0C;&#x6570;&#x5B66;&#x5BB6;&#x5E03;&#x5C14;&#x6CE8;&#x610F;&#x5230;&#x901A;&#x8FC7;&#x5C06;&#x903B;&#x8F91;&#x503C; TRUE&#xFF08;&#x771F;&#xFF09;&#x548C; FALSE&#xFF08;&#x5047;&#xFF09;&#x7F16;&#x7801;&#x4E3A;&#x4E8C;&#x8FDB;&#x5236;&#x503C; 1 &#x548C; 0&#xFF0C;&#x80FD;&#x591F;&#x8BBE;&#x8BA1;&#x51FA;&#x4E00;&#x79CD;&#x4EE3;&#x6570;&#xFF0C;&#x4EE5;&#x7814;&#x7A76;&#x903B;&#x8F91;&#x63A8;&#x7406;&#x7684;&#x57FA;&#x672C;&#x539F;&#x5219;&#x3002; &#x5E03;&#x5C14;&#x8FD0;&#x7B97; &#x6700;&#x7B80;&#x5355;&#x7684;&#x5E03;&#x5C14;&#x4EE3;&#x6570;&#x662F;&#x5728;&#x4E8C;&#x5143;&#x96C6;&#x5408; {0&#xFF0C;1} &#x57FA;&#x7840;&#x4E0A;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x56DB;&#x79CD;&#x5E03;&#x5C14;&#x8FD0;&#x7B97;&#x6CD5;&#x5219;&#xFF1A; &#x4E0A;&#x56FE;&#x4E2D;&#xFF1A; ~&#x8FD0;&#x7B97;&#x7B26;&#x8868;&#x793A;&#x975E;&#x64CD;&#x4F5C;&#xFF0C;&#x975E;&#x771F;&#x5C31;&#x662F;&#x5047;&#xFF0C;&#x975E;&#x5047;&#x5C31;&#x662F;&#x771F;&#x3002; &amp;&#x8FD0;&#x7B97;&#x7B26;&#x8868;&#x793A;&#x4E14;&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x6709;&#x4E24;&#x8005;&#x540C;&#x65F6;&#x4E3A;&#x771F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x624D;&#x4E3A;&#x771F;&#x3002; |&#x8FD0;&#x7B97;&#x7B26;&#x8868;&#x793A;&#x6216;&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x8981;&#x4E24;&#x8005;&#x4E4B;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x4E3A;&#x771F;&#xFF0C;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x5219;&#x4E3A;&#x771F;&#x3002; ^&#x8FD0;&#x7B97;&#x7B26;&#x8868;&#x793A;&#x5F02;&#x6216;&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x6709;&#x4E24;&#x8005;&#x4E0D;&#x76F8;&#x540C;&#x65F6;&#xFF0C;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x4E3A;&#x771F;&#xFF08;&#x4E24;&#x8005;&#x76F8;&#x540C;&#xFF0C;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x5219;&#x4E3A;&#x5047;&#xFF09;&#x3002; &#x4F4D;&#x5411;&#x91CF;&#x8FD0;&#x7B97; &#x5E03;&#x5C14;&#x8FD0;&#x7B97;&#x89C4;&#x5B9A;&#x4E86;&#x4E24;&#x4E2A;&#x547D;&#x9898;&#x4E4B;&#x95F4;&#x7684;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5; 4 &#x4E2A;&#x5E03;&#x5C14;&#x8FD0;&#x7B97;&#x6269;&#x5C55;&#x5230;&#x4F4D;&#x5411;&#x91CF;&#x7684;&#x8FD0;&#x7B97;&#xFF0C;&#x4F4D;&#x5411;&#x91CF;&#x5C31;&#x662F;&#x6709;&#x56FA;&#x5B9A;&#x957F;&#x5EA6;&#x4E3A; w&#x3001;&#x7531; 0 &#x548C; 1 &#x7EC4;&#x6210;&#x7684;&#x4E32;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x6709;&#x4E24;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A; w &#x7684;&#x4F4D;&#x5411;&#x91CF;&#xFF0C;&#x5206;&#x522B;&#x547D;&#x540D;&#x4E3A; a &#x548C; b&#xFF0C;&#x90A3;&#x4E48;&#x4E24;&#x8005;&#x7684;&#x5E03;&#x5C14;&#x56DB;&#x5219;&#x8FD0;&#x7B97;&#x8868;&#x793A;&#x7684;&#x662F;&#x5411;&#x91CF;&#x4F4D;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x4F4D;&#x5BF9;&#x5E94;&#x7684;&#x76F8;&#x5E94;&#x539F;&#x7B97;&#x3002; &#x5047;&#x8BBE; w = 4&#xFF0C;&#x53C2;&#x6570; a =[0110]&#xFF0C;b =[1100]&#x3002;&#x90A3;&#x4E48; 4 &#x79CD;&#x8FD0;&#x7B97; a &amp; b&#x3001;a | b&#x3001;a ^ b &#x548C; ~b &#x5206;&#x522B;&#x5F97;&#x5230;&#x4EE5;&#x4E0B;&#x7ED3;&#x679C; &#xFF1A; &#x5728;&#x5927;&#x91CF;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x80FD;&#x770B;&#x5230;&#x7528;&#x4F4D;&#x5411;&#x91CF;&#x6765;&#x5BF9;&#x96C6;&#x5408;&#x7F16;&#x7801;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x7B2C; 8 &#x7AE0;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x770B;&#x5230;&#x6709;&#x5F88;&#x591A;&#x4E0D;&#x540C;&#x7684;&#x4FE1;&#x53F7;&#x4F1A;&#x4E2D;&#x65AD;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x3002;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x4F4D;&#x5411;&#x91CF;&#x63A9;&#x7801;&#xFF0C;&#x6709;&#x9009;&#x62E9;&#x5730;&#x4F7F;&#x80FD;&#x6216;&#x662F;&#x4E0D;&#x80FD;&#x5C4F;&#x853D;&#x4E00;&#x4E9B;&#x4FE1;&#x53F7;&#xFF0C;&#x5176;&#x4E2D;&#x67D0;&#x4E00;&#x4F4D;&#x4F4D;&#x7F6E;&#x4E0A;&#x4E3A; 1 &#x65F6;&#xFF0C;&#x8868;&#x660E;&#x4FE1;&#x53F7; i &#x662F;&#x6709;&#x6548;&#x7684;&#xFF0C;&#x800C; 0 &#x8868;&#x660E;&#x8BE5;&#x4FE1;&#x53F7;&#x662F;&#x88AB;&#x5C4F;&#x853D;&#x7684;&#x3002;&#x56E0;&#x800C;&#xFF0C;&#x8FD9;&#x4E2A;&#x63A9;&#x7801;&#x8868;&#x793A;&#x7684;&#x5C31;&#x662F;&#x8BBE;&#x7F6E;&#x4E3A;&#x6709;&#x6548;&#x4FE1;&#x53F7;&#x7684;&#x96C6;&#x5408;&#x3002; &#x4E8C;&#x3001;C &#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;C &#x8BED;&#x8A00;&#x4E2D;&#x6709;&#x4E2A;&#x5F88;&#x6709;&#x7528;&#x7684;&#x7279;&#x6027;&#x5C31;&#x662F;&#x652F;&#x6301;&#x6309;&#x4F4D;&#x5E03;&#x5C14;&#x8FD0;&#x7B97;&#xFF1A; |&#x5C31;&#x662F; OR&#xFF08;&#x6216;&#xFF09;&#xFF0C; &amp;&#x5C31;&#x662F; AND&#xFF08;&#x4E0E;&#xFF09;&#xFF0C; ~&#x5C31;&#x662F; NOT&#xFF08;&#x53D6;&#x53CD;&#xFF09;&#xFF0C; ^&#x5C31;&#x662F; EXCLUSIVE-OR&#xFF08;&#x5F02;&#x6216;&#xFF09; C &#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;&#x53EF;&#x4EE5;&#x8FD0;&#x7528;&#x5230;&#x4EFB;&#x4F55;&#x201C;&#x6574;&#x578B;&#x201D;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E0A;&#xFF0C;&#x4E0B;&#x56FE;&#x662F; C &#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;&#x5B9E;&#x4F8B;&#xFF1A; &#x4ECE;&#x4E0A;&#x56FE;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8981;&#x5BF9;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5C06;&#x8FD0;&#x7B97;&#x7684;&#x6570;&#x8F6C;&#x6362;&#x6210;&#x4E8C;&#x8FDB;&#x5236;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;&#x4E8C;&#x8FDB;&#x5236;&#x7ED3;&#x679C;&#x518D;&#x8F6C;&#x6210;&#x539F;&#x6765;&#x7684;&#x8FDB;&#x5236;&#x6570;&#x5373;&#x53EF;&#x3002; &#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;&#x7684;&#x4E00;&#x4E2A;&#x5E38;&#x89C1;&#x7528;&#x6CD5;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x63A9;&#x7801;&#x8FD0;&#x7B97;&#xFF0C;&#x8FD9;&#x91CC;&#x63A9;&#x7801;&#x662F;&#x4E00;&#x4E2A;&#x4F4D;&#x6A21;&#x5F0F;&#xFF0C;&#x8868;&#x793A;&#x4ECE;&#x4E00;&#x4E2A;&#x5B57;&#x4E2D;&#x9009;&#x51FA;&#x7684;&#x4F4D;&#x7684;&#x96C6;&#x5408;&#x3002;&#x6BD4;&#x5982;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x4E00;&#x4E2A;&#x6574;&#x6570; x&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x53D6;&#x5F97;&#x8FD9;&#x4E2A;&#x6574;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x6574;&#x6570;&#x503C;&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x4F4D;&#x8FD0;&#x7B97;&#x3002; 12345678#include &lt;stdio.h&gt;int main(){ unsigned int i = 0x1234; unsigned int j = 0xFF; unsigned int k = i &amp; j; printf(&quot;%X&quot;,k);} &#x8F93;&#x51FA;&#x6253;&#x5370;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;34&#xFF0C;&#x7528;&#x56FE;&#x6765;&#x7406;&#x89E3;&#x63A9;&#x7801;0xFF&#x5728;&#x8FD0;&#x7B97;&#x8FC7;&#x7A0B;&#x4E2D;&#x53D1;&#x6325;&#x7684;&#x4F5C;&#x7528;&#xFF1A; &#x4E09;&#x3001;C &#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x9664;&#x4E86;&#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;&#xFF0C;C &#x8BED;&#x8A00;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x7EC4;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x6CD5;&#x5219;&#xFF0C;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x6570;&#x5B66;&#x4E0A;&#x7684;&#x547D;&#x9898;&#x903B;&#x8F91;&#x4E2D;&#x7684; OR&#x3001;AND&#x3001;NOT&#x3002;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x548C;&#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;&#x5BB9;&#x6613;&#x6982;&#x5FF5;&#x6DF7;&#x6DC6;&#xFF0C;&#x5728;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x4E2D;&#x53EA;&#x8981;&#x662F;&#x975E;&#x96F6;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x90FD;&#x8868;&#x793A;&#x4F4D; TRUE&#x3002; ||&#x8FD0;&#x7B97;&#x7B26;&#x8868;&#x793A;&#x903B;&#x8F91;&#x4E0E;&#xFF08;OR&#xFF09; &amp;&amp;&#x8FD0;&#x7B97;&#x7B26;&#x8868;&#x793A;&#x903B;&#x8F91;&#x4E14;&#xFF08;AND&#xFF09; &#xFF01;&#x8FD0;&#x7B97;&#x7B26;&#x8868;&#x793A;&#x903B;&#x8F91;&#x975E;&#xFF08;NOT&#xFF09; &#x6CE8;&#x610F;&#xFF1A;&amp;&amp;&#x8868;&#x793A;&#x7684;&#x662F;&#x903B;&#x8F91;&#x4E0E;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x5982;&#x679C;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x7ED3;&#x679C;&#x4E3A; FALSE&#xFF0C;&#x5219;&#x8FD0;&#x7B97;&#x7B26;&#x540E;&#x9762;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x5C31;&#x4E0D;&#x4F1A;&#x518D;&#x8BA1;&#x7B97;&#x4E86;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x548C;&#x4F4D;&#x7EA7;&#x7684;&#x4E0E;&#xFF08;&amp;&#xFF09;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x4F4D;&#x7EA7;&#x7684;&#x4E0E;&#x64CD;&#x4F5C;&#x662F;&#x5728;&#x4F4D;&#x7EA7;&#x522B;&#x7684;&#x4E0E;&#x64CD;&#x4F5C;&#x3002;&#xFF01;&#x8868;&#x793A;&#x7684;&#x662F;&#x903B;&#x8F91;&#x4E0A;&#x7684;&#x975E;&#x5173;&#x7CFB;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x975E;&#x96F6;&#xFF0C;&#x8FDB;&#x884C;&#x975E;&#x64CD;&#x4F5C;&#x4E4B;&#x540E;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x53EA;&#x662F; 1&#xFF08;&#x56E0;&#x4E3A; 1 &#x8868;&#x793A;&#x903B;&#x8F91;&#x4E0A;&#x7684;&#x771F;&#xFF09;&#x3002; &#x56DB;&#x3001;C &#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x4F4D;&#x79FB;&#x8FD0;&#x7B97;C &#x8BED;&#x8A00;&#x4E2D;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x7EC4;&#x4F4D;&#x79FB;&#x8FD0;&#x7B97;&#xFF0C;&#x5411;&#x5DE6;&#x6216;&#x5411;&#x53F3;&#x79FB;&#x52A8;&#x4F4D;&#x6A21;&#x5F0F;&#x3002; &#x5DE6;&#x79FB;&#xFF1A; C &#x8868;&#x8FBE;&#x5F0F; x &lt;&lt; k &#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x503C;&#x3002;x &#x5411;&#x5DE6;&#x79FB;&#x52A8; k &#x4F4D;&#xFF0C;&#x4E22;&#x5F03;&#x6700;&#x9AD8;&#x7684; k &#x4F4D;&#xFF0C;&#x5E76;&#x5728;&#x53F3;&#x7AEF;&#x8865; k &#x4E2A; 0 &#x3002; &#x53F3;&#x79FB;&#xFF1A;&#x53F3;&#x79FB;&#x5206;&#x4E3A;&#x7B97;&#x672F;&#x53F3;&#x79FB;&#x548C;&#x903B;&#x8F91;&#x53F3;&#x79FB;&#x3002;&#x903B;&#x8F91;&#x53F3;&#x79FB;&#xFF1A;x &#x5411;&#x53F3;&#x79FB;&#x52A8; k &#x4F4D;&#xFF0C;&#x4E22;&#x5F03;&#x6700;&#x4F4E;&#x7684; k &#x4F4D;&#xFF0C;&#x5E76;&#x5728;&#x5DE6;&#x7AEF;&#x8865; k &#x4E2A; 0 &#x3002;&#x7B97;&#x672F;&#x53F3;&#x79FB;&#x662F;&#x56E0;&#x4E3A;&#x8003;&#x8651;&#x5230;&#x5E26;&#x7B26;&#x53F7;&#x7684;&#x6574;&#x6570;&#x7684;&#x8FD0;&#x7B97;&#xFF1A;x &#x5411;&#x53F3;&#x79FB;&#x52A8; k &#x4F4D;&#xFF0C;&#x4E22;&#x5F03;&#x6700;&#x4F4E;&#x7684; k &#x4F4D;&#xFF0C;&#x5E76;&#x5728;&#x5DE6;&#x7AEF;&#x8865; k &#x4E2A;&#x6700;&#x9AD8;&#x4F4D;&#x7684;&#x64CD;&#x4F5C;&#x6570;&#xFF08;&#x6700;&#x9AD8;&#x4F4D;&#x662F; 1 &#x5C31;&#x586B;&#x5145; 1&#xFF0C;&#x6700;&#x9AD8;&#x4F4D;&#x662F; 0 &#x5C31;&#x586B;&#x5145; 0&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x6709;&#x7B26;&#x53F7;&#x6574;&#x6570;&#x4E2D;&#x6700;&#x9AD8;&#x4F4D;&#x662F;&#x7B26;&#x53F7;&#x7684;&#x6807;&#x8BC6;&#x4F4D;&#xFF09;&#x3002; &#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;&#x7F16;&#x8BD1;&#x5668;/&#x673A;&#x5668;&#x7EC4;&#x5408;&#x90FD;&#x5BF9;&#x6709;&#x7B26;&#x53F7;&#x6570;&#x4F7F;&#x7528;&#x7B97;&#x672F;&#x53F3;&#x79FB;&#xFF0C;&#x5BF9;&#x4E8E;&#x65E0;&#x7B26;&#x53F7;&#x6570;&#xFF0C;&#x53F3;&#x79FB;&#x5FC5;&#x987B;&#x662F;&#x903B;&#x8F91;&#x53F3;&#x79FB;&#x3002; &#x4E0E; C &#x76F8;&#x6BD4;&#xFF0C;Java &#x8868;&#x8FBE;&#x5F0F;&#x6709;&#x660E;&#x786E;&#x5B9A;&#x4E49;&#xFF0C;&#x8868;&#x8FBE;&#x5F0F;x&gt;&gt;k&#x4F1A;&#x5C06; x &#x7B97;&#x672F;&#x53F3;&#x79FB; k &#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x800C;x&gt;&gt;&gt;k&#x4F1A;&#x5BF9; x &#x505A;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x3002; &#x4E94;&#x3001;&#x5C0F;&#x7ED3;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x4E2D;&#x51FA;&#x4E8E;&#x9AD8;&#x6548;&#x7387;&#x8FD0;&#x884C;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x4FE1;&#x606F;&#x7684;&#x5B58;&#x50A8;&#x91C7;&#x7528;&#x4F4D;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x5E76;&#x4E14;&#x4F7F;&#x7528;&#x7B80;&#x5355;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x7EC4;&#x5408;&#x5F62;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x6620;&#x5C04;&#x4FE1;&#x606F;&#xFF0C;&#x5149;&#x80FD;&#x5B58;&#x50A8;&#x8FD8;&#x4E0D;&#x80FD;&#x4F53;&#x73B0;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x4F18;&#x52BF;&#xFF0C;&#x5B83;&#x5FC5;&#x987B;&#x4F1A;&#x8BA1;&#x7B97;&#x6570;&#x503C;&#xFF0C;&#x8FD9;&#x4E5F;&#x5F97;&#x76CA;&#x4E8E;&#x6570;&#x5B66;&#x6982;&#x5FF5;&#x7684;&#x53D1;&#x5C55;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x5B9E;&#x73B0;&#x5E76;&#x62D3;&#x5C55;&#x4E86;&#x5E03;&#x5C14;&#x8FD0;&#x7B97;&#xFF0C;&#x4F7F;&#x5F97;&#x8BA1;&#x7B97;&#x673A;&#x80FD;&#x591F;&#x5FEB;&#x9012;&#x9AD8;&#x6548;&#x7684;&#x8BA1;&#x7B97;&#x6570;&#x503C;&#x8FD0;&#x7B97;&#x3002;&#x5728;&#x5E03;&#x5C14;&#x8FD0;&#x7B97;&#x7684;&#x5B8C;&#x7F8E;&#x5B9E;&#x73B0;&#x57FA;&#x7840;&#x4E4B;&#x4E0A;&#xFF0C;&#x62D3;&#x5C55;&#x5230;&#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;&#xFF0C;&#x518D;&#x62D3;&#x5C55;&#x5230;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x7684;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x548C;&#x4F4D;&#x79FB;&#x8FD0;&#x7B97;&#x3002; &#x5E03;&#x5C14;&#x8FD0;&#x7B97;&#x63D0;&#x51FA;&#x4E86;&#x4E24;&#x4F4D;&#x547D;&#x9898;&#x4E4B;&#x95F4;&#x7684;&#x56DB;&#x5219;&#x8FD0;&#x7B97;&#xFF1A;&#x4E0E;&#xFF08;&amp;&#xFF09;&#x3001;&#x6216;&#xFF08;|&#xFF09;&#x3001;&#x975E;&#xFF08;~&#xFF09;&#x3001;&#x5F02;&#x6216;&#xFF08;^&#xFF09;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x5B9E;&#x73B0;&#x5E76;&#x62D3;&#x5C55;&#x4E86;&#x5E03;&#x5C14;&#x8FD0;&#x7B97;&#x8BBE;&#x8BA1;&#x51FA;&#x4F4D;&#x5411;&#x91CF;&#x8FD0;&#x7B97;&#xFF0C;&#x4F7F;&#x5F97; C &#x8BED;&#x8A00;&#x5728;&#x8BBE;&#x8BA1;&#x4E4B;&#x521D;&#x5C31;&#x652F;&#x6301;&#x4F4D;&#x7EA7;&#x8FD0;&#x7B97;&#x3001;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x548C;&#x4F4D;&#x79FB;&#x8FD0;&#x7B97;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>深入理解计算机系统</category>
      </categories>
      <tags>
        <tag>基础原理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MyBatis Generator 逆向工程详解]]></title>
    <url>%2F2018%2F10%2F29%2F015%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;Mysql &#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x51C6;&#x5907;1.1 &#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;12CREATE DATABASE `my_test_db` /*!40100 COLLATE &apos;utf8mb4_unicode_ci&apos; */;SHOW DATABASES; 2.2 &#x521B;&#x5EFA;&#x7528;&#x6237;&#x8868;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;&#x8868;123456789101112CREATE TABLE `User` ( `id` INT NOT NULL, `username` VARCHAR(120) NOT NULL, `password` VARCHAR(120) NOT NULL, `gender` BIT NOT NULL, `email` VARCHAR(120) NOT NULL, `born` TIMESTAMP NOT NULL, `extraInfo` VARCHAR(500) NOT NULL, PRIMARY KEY (`id`))COLLATE=&apos;utf8mb4_unicode_ci&apos;ENGINE=InnoDB; 3.3 &#x521B;&#x5EFA;&#x8D2D;&#x7269;&#x8F66;&#x8868;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;&#x8868;123456789101112CREATE TABLE `Cart` ( `id` INT NOT NULL, `logisticId` VARCHAR(50) NOT NULL, `number` INT NOT NULL, `discount` DOUBLE NULL, `total` DOUBLE NULL, `extrainfo` VARCHAR(500) NULL, PRIMARY KEY (`id`), UNIQUE INDEX `logisticId` (`logisticId`))COLLATE=&apos;utf8mb4_unicode_ci&apos;ENGINE=InnoDB; &#x4E8C;&#x3001;&#x9006;&#x5411;&#x5DE5;&#x7A0B;&#x751F;&#x6210;2.1 pom &#x4F9D;&#x8D56;&#x914D;&#x7F6E;&#x5728; pom.xml &#x4F9D;&#x8D56;&#x6587;&#x4EF6;&#x4E2D;&#x589E;&#x52A0; mybatis generator &#x63D2;&#x4EF6;&#x4F9D;&#x8D56; 12345678910111213141516171819202122232425262728293031323334&lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.46&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt; &lt;version&gt;1.3.7&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;Generate MyBatis Artifacts&lt;/id&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;generate&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;configuration&gt; &lt;!--&#x5141;&#x8BB8;&#x79FB;&#x52A8;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6; --&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;!-- &#x662F;&#x5426;&#x8986;&#x76D6; --&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;!-- &#x81EA;&#x52A8;&#x751F;&#x6210;&#x7684;&#x914D;&#x7F6E; --&gt; &lt;configurationFile&gt;${basedir}/src/main/resources/generator/generatorConfig.xml&lt;/configurationFile&gt; &lt;/configuration&gt;&lt;/plugin&gt; 2.2 &#x914D;&#x7F6E;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x5728;&lt;configurationFile&gt;&#x914D;&#x7F6E;&#x7684;&#x5BF9;&#x5E94;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x521B;&#x5EFA;&#x5BF9;&#x5E94;&#x7684;&#x9006;&#x5411;&#x751F;&#x6210;&#x5DE5;&#x7A0B;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5C06;&#x4E0B;&#x5217;&#x914D;&#x7F6E;&#x7C98;&#x8D34;&#x5230;&#x5176;&#x4E2D;&#xFF1A; mybatis &#x9006;&#x5411;&#x5DE5;&#x7A0B;&#x914D;&#x7F6E;&#x6620;&#x5C04;12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;&lt;generatorConfiguration&gt; &lt;properties resource=&quot;generator/mybatisGeneratorinit.properties&quot;/&gt; &lt;!-- &#x6570;&#x636E;&#x5E93;&#x9A71;&#x52A8;:&#x9009;&#x62E9;&#x4F60;&#x7684;&#x672C;&#x5730;&#x786C;&#x76D8;&#x4E0A;&#x9762;&#x7684;&#x6570;&#x636E;&#x5E93;&#x9A71;&#x52A8;&#x5305;--&gt; &lt;classPathEntry location=&quot;${classPathEntry.location}&quot;/&gt; --&gt; &lt;context id=&quot;MysqlContext&quot; targetRuntime=&quot;MyBatis3&quot; defaultModelType=&quot;flat&quot;&gt; &lt;commentGenerator&gt; &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt; &lt;!-- &#x662F;&#x5426;&#x53BB;&#x9664;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x7684;&#x6CE8;&#x91CA; true&#xFF1A;&#x662F; &#xFF1A; false:&#x5426; --&gt; &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt; &lt;/commentGenerator&gt; &lt;!--&#x6570;&#x636E;&#x5E93;&#x94FE;&#x63A5;URL&#xFF0C;&#x7528;&#x6237;&#x540D;&#x3001;&#x5BC6;&#x7801; --&gt; &lt;jdbcConnection driverClass=&quot;${jdbc.driverClass}&quot; connectionURL=&quot;${jdbc.connectionURL}&quot; userId=&quot;${jdbc.userId}&quot; password=&quot;${jdbc.password}&quot;&gt; &lt;/jdbcConnection&gt; &lt;javaTypeResolver&gt; &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt; &lt;/javaTypeResolver&gt; &lt;!-- &#x751F;&#x6210;&#x6A21;&#x578B;&#x7684;&#x5305;&#x540D;&#x548C;&#x4F4D;&#x7F6E;--&gt; &lt;javaModelGenerator targetPackage=&quot;${javaModelGenerator.targetPackage}&quot; targetProject=&quot;${javaModelGenerator.targetProject}&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt; &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt; &lt;/javaModelGenerator&gt; &lt;!-- &#x751F;&#x6210;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x7684;&#x5305;&#x540D;&#x548C;&#x4F4D;&#x7F6E;--&gt; &lt;sqlMapGenerator targetPackage=&quot;${sqlMapGenerator.targetPackage}&quot; targetProject=&quot;${sqlMapGenerator.targetProject}&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt; &lt;/sqlMapGenerator&gt; &lt;!-- &#x751F;&#x6210;DAO&#x7684;&#x5305;&#x540D;&#x548C;&#x4F4D;&#x7F6E;--&gt; &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;${javaClientGenerator.targetPackage}&quot; targetProject=&quot;${javaClientGenerator.targetProject}&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt; &lt;/javaClientGenerator&gt; &lt;!-- &#x8981;&#x751F;&#x6210;&#x7684;&#x8868; tableName&#x662F;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x8868;&#x540D;&#x6216;&#x89C6;&#x56FE;&#x540D; domainObjectName&#x662F;&#x5B9E;&#x4F53;&#x7C7B;&#x540D;--&gt; &lt;table tableName=&quot;%&quot; enableCountByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;&gt; &lt;!-- &lt;generatedKey column=&quot;id&quot; sqlStatement=&quot;Mysql&quot; identity=&quot;true&quot;/&gt; --&gt; &lt;/table&gt; &lt;/context&gt;&lt;/generatorConfiguration&gt; 2.3 &#x914D;&#x7F6E;&#x81EA;&#x5B9A;&#x4E49;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5728;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF1A;&lt;properties&gt;&#x5143;&#x7D20;&#x6307;&#x5B9A;&#x4E86;generator/mybatisGeneratorinit.properties&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x5BF9;&#x5E94;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A; mybatis &#x9006;&#x5411;&#x5DE5;&#x7A0B;&#x914D;&#x7F6E;&#x6587;&#x4EF6;123456789101112131415161718192021#Mybatis Generator configuration#mysql-driverclassPathEntry.location=C://mysql-connector-java-5.1.46.jar# JDBC configjdbc.driverClass=com.mysql.jdbc.Driverjdbc.connectionURL=jdbc:mysql://localhost:3306/my_test_dbjdbc.userId=rootjdbc.password=root#JavaBean locationjavaModelGenerator.targetProject=src/main/javajavaModelGenerator.targetPackage=org.woodwhales.king.entity#interface locationjavaClientGenerator.targetProject=src/main/javajavaClientGenerator.targetPackage=org.woodwhales.king.mapper#mapping locationsqlMapGenerator.targetProject=src/main/resourcessqlMapGenerator.targetPackage=org.woodwhales.king.mapper &#x6CE8;&#x610F;&#xFF1A;&#x914D;&#x7F6E;&#x7684;&#x76EE;&#x5F55;&#x9700;&#x8981;&#x63D0;&#x524D;&#x624B;&#x52A8;&#x521B;&#x5EFA;&#x51FA;&#x6765;&#x3002; 2.4 &#x8FD0;&#x884C; mybatis &#x9006;&#x5411;&#x5DE5;&#x7A0B;&#x5728;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#x53F3;&#x51FB;&#x9009;&#x62E9;&quot;Show in&quot;&#x4E2D;&#x7684;&quot;Terminal&quot;&#x9009;&#x9879;&#xFF0C;&#x8FDB;&#x5165; dos &#x7A97;&#x53E3;&#xFF0C;&#x6267;&#x884C;&#x9006;&#x5411;&#x751F;&#x6210;&#x547D;&#x4EE4;&#xFF1A;mvn mybatis-generator:generate &#x9879;&#x76EE;&#x751F;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x5237;&#x65B0;&#x9879;&#x76EE;&#x3002; 2.5 mapper &#x63A5;&#x53E3;&#x65E2;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x6CE8;&#x518C;&#x914D;&#x7F6E;&#x5C06; mapper &#x63A5;&#x53E3;&#x6CE8;&#x518C;&#x5230; springboot &#x4E2D;&#xFF0C;&#x5728;&#x8981;&#x6CE8;&#x518C;&#x7684;&#x7C7B;&#x4E0A;&#x589E;&#x52A0;@Mapper&#x6CE8;&#x89E3;&#xFF0C;&#x6216;&#x8005;&#x4F7F;&#x7528;&#x5305;&#x626B;&#x63CF;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x6CE8;&#x518C;&#xFF1A;&#x5728;&#x542F;&#x52A8;&#x7C7B;&#x4E0A;&#x589E;&#x52A0;@MapperScan(basePackages=&quot;org.woodwhale.demo.mapper&quot;)&#xFF0C;&#x5F3A;&#x70C8;&#x63A8;&#x8350;&#x7B2C;&#x4E8C;&#x79CD;&#x3002; &#x5C06; mapper &#x6620;&#x5C04;&#x7684; xml &#x6587;&#x4EF6;&#x6CE8;&#x518C;&#x5230; springboot&#xFF1A;&#x5728;application.yml&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x589E;&#x52A0;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x626B;&#x63CF;&#xFF1A; 12mybatis: mapper-locations: classpath:org/woodwhale/demo/mapper/*Mapper.xml &#x4E09;&#x3001;MyBatis Generator &#x8BE6;&#x89E3;MyBatis Generator&#x4E2D;&#x6587;&#x6587;&#x6863;&#x5730;&#x5740;&#xFF1A;mbg.cndocs.ml &#x6CE8;&#xFF1A;&#x672C;&#x6587;&#x540E;&#x9762;&#x63D0;&#x5230;&#x7684;MBG&#x5168;&#x90E8;&#x6307;&#x4EE3;MyBatis Generator&#x3002; 3.1 XML &#x914D;&#x7F6E;&#x8BE6;&#x89E3;1234&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt; 3.2 &#x6839;&#x8282;&#x70B9;&lt;generatorConfiguration&gt;&#x8282;&#x70B9;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5C5E;&#x6027;&#xFF0C;&#x76F4;&#x63A5;&#x5199;&#x8282;&#x70B9;&#x5373;&#x53EF;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 123&lt;generatorConfiguration&gt; &lt;!-- &#x5177;&#x4F53;&#x914D;&#x7F6E;&#x5185;&#x5BB9; --&gt;&lt;/generatorConfiguration&gt; &lt;generatorConfiguration&gt;&#x5143;&#x7D20;&#x7684;&#x5B50;&#x5143;&#x7D20;&#x5305;&#x542B;&#x4EE5;&#x4E0B;&#x5B50;&#x5143;&#x7D20;&#xFF08;&#x6709;&#x4E25;&#x683C;&#x7684;&#x987A;&#x5E8F;&#xFF09;&#xFF1A; 123&lt;properties&gt;&#xFF08;0 &#x4E2A;&#x6216; 1 &#x4E2A;&#xFF09;&lt;classPathEntry&gt;&#xFF08;0 &#x4E2A;&#x6216; 1 &#x4E2A;&#xFF09;&lt;context&gt;&#xFF08;1 &#x4E2A;&#x6216;&#x591A;&#x4E2A;&#xFF09; &#x56DB;&#x3001;&#x5143;&#x7D20;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x5916;&#x90E8;&#x7684;&#x5C5E;&#x6027;&#x5143;&#x7D20;&#xFF0C;&#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x7684;&#x5143;&#x7D20;&#x3002; &#x5143;&#x7D20;&#x7528;&#x4E8E;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x9700;&#x8981;&#x5728;&#x914D;&#x7F6E;&#x4E2D;&#x89E3;&#x6790;&#x4F7F;&#x7528;&#x7684;&#x5916;&#x90E8;&#x5C5E;&#x6027;&#x6587;&#x4EF6;&#xFF0C;&#x5F15;&#x5165;&#x5C5E;&#x6027;&#x6587;&#x4EF6;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x914D;&#x7F6E;&#x4E2D;&#x4F7F;&#x7528;${property}&#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5F15;&#x7528;&#x5C5E;&#x6027;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x503C;&#xFF0C;&#x5982;&#x914D;&#x7F6E;jdbc &#x4FE1;&#x606F;&#x548C;targetProject &#x5C5E;&#x6027;&#x3002; &#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x5C5E;&#x6027;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;resource&#x6216;&#x8005;url&#x6765;&#x6307;&#x5B9A;&#x5C5E;&#x6027;&#x6587;&#x4EF6;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#x53EA;&#x80FD;&#x4F7F;&#x7528;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x6765;&#x6307;&#x5B9A;&#xFF0C;&#x5982;&#x679C;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x5C31;&#x4F1A;&#x62A5;&#x9519;&#x3002; resource&#xFF1A;&#x6307;&#x5B9A; classpath &#x4E0B;&#x7684;&#x5C5E;&#x6027;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;&#x7C7B;&#x4F3C;com/myproject/generatorConfig.properties&#x8FD9;&#x6837;&#x7684;&#x5C5E;&#x6027;&#x503C;&#x3002; url&#xFF1A;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E0A;&#x7684;&#x7279;&#x5B9A;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F8B;&#x5982;file://C:/myfolder/generatorConfig.properties&#x3002; &#x4E94;&#x3001;&#x5143;&#x7D20;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x53EF;&#x4EE5;&#x662F; 0 &#x6216;&#x591A;&#x4E2A;&#x3002;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x7528;&#x6CD5;&#x662F;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x9A71;&#x52A8;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1&lt;classPathEntry location=&quot;C:\mysql-connector-java-5.1.42.jar&quot;/&gt; &#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x52A0;&#x8F7D;&#x5176;&#x4ED6;&#x7528;&#x9014;&#x7684; jar &#x5305;&#xFF0C;classPathEntry &#x8D77;&#x4E0D;&#x5230;&#x4F5C;&#x7528;&#xFF0C;&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x5C06;&#x4F60;&#x7528;&#x7684; jar &#x5305;&#x6DFB;&#x52A0;&#x5230;&#x7C7B;&#x8DEF;&#x5F84;&#x4E2D;&#xFF0C;&#x5728; Eclipse &#x7B49; IDE &#x4E2D;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6DFB;&#x52A0;jar&#x5305;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x3002;&#x5F53;&#x4ECE;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x7528;java -cp xx.jar,xx2.jar xxxMainClass&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5728;-cp&#x540E;&#x9762;&#x6307;&#x5B9A;&#x6765;&#x4F7F;&#x7528;&#xFF08;&#x6CE8;&#x610F;-jar&#x4F1A;&#x5BFC;&#x81F4;-cp&#x65E0;&#x6548;&#xFF09;&#x3002; &#x516D;&#x3001;&#x5143;&#x7D20;&#x5728; MBG &#x7684;&#x914D;&#x7F6E;&#x4E2D;&#xFF0C;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x6709;&#x4E00;&#x4E2A;&lt;context&gt;&#x5143;&#x7D20;&#x3002; &lt;context&gt;&#x5143;&#x7D20;&#x7528;&#x4E8E;&#x6307;&#x5B9A;&#x751F;&#x6210;&#x4E00;&#x7EC4;&#x5BF9;&#x8C61;&#x7684;&#x73AF;&#x5883;&#x3002;&#x4F8B;&#x5982;&#x6307;&#x5B9A;&#x8981;&#x8FDE;&#x63A5;&#x7684;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x8981;&#x751F;&#x6210;&#x5BF9;&#x8C61;&#x7684;&#x7C7B;&#x578B;&#x548C;&#x8981;&#x5904;&#x7406;&#x7684;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x8868;&#x3002;&#x8FD0;&#x884C;MBG&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x8981;&#x8FD0;&#x884C;&#x7684;&lt;context&gt;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; id&#xFF1A;&#x7528;&#x6765;&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&lt;context&gt;&#x5143;&#x7D20;&#xFF0C;&#x8BE5;id&#x5C5E;&#x6027;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C; MBG &#x7684;&#x4F7F;&#x7528;&#x3002; &#x6B64;&#x5916;&#x8FD8;&#x6709;&#x51E0;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF1A; defaultModelType &#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x5B9A;&#x4E49;&#x4E86; MBG &#x5982;&#x4F55;&#x751F;&#x6210;&#x5B9E;&#x4F53;&#x7C7B;&#x3002; conditional&#xFF1A;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x8FD9;&#x4E2A;&#x6A21;&#x578B;&#x548C;&#x4E0B;&#x9762;&#x7684;hierarchical&#x7C7B;&#x4F3C;&#xFF0C;&#x9664;&#x4E86;&#x5982;&#x679C;&#x90A3;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x7C7B;&#x5C06;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x5C06;&#x4E0D;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x7C7B;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x8868;&#x7684;&#x4E3B;&#x952E;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x90A3;&#x4E48;&#x4E0D;&#x4F1A;&#x4E3A;&#x8BE5;&#x5B57;&#x6BB5;&#x751F;&#x6210;&#x5355;&#x72EC;&#x7684;&#x5B9E;&#x4F53;&#x7C7B;&#xFF0C;&#x4F1A;&#x5C06;&#x8BE5;&#x5B57;&#x6BB5;&#x5408;&#x5E76;&#x5230;&#x57FA;&#x672C;&#x5B9E;&#x4F53;&#x7C7B;&#x4E2D;&#x3002; flat&#xFF1A;&#x8BE5;&#x6A21;&#x578B;&#x4E3A;&#x6BCF;&#x4E00;&#x5F20;&#x8868;&#x53EA;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x7C7B;&#x3002;&#x8FD9;&#x4E2A;&#x5B9E;&#x4F53;&#x7C7B;&#x5305;&#x542B;&#x8868;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#x3002;&#x8FD9;&#x79CD;&#x6A21;&#x578B;&#x6700;&#x7B80;&#x5355;&#xFF0C;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#x3002; hierarchical&#xFF1A;&#x5982;&#x679C;&#x8868;&#x6709;&#x4E3B;&#x952E;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x6A21;&#x578B;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x4E3B;&#x952E;&#x5B9E;&#x4F53;&#x7C7B;&#xFF0C;&#x5982;&#x679C;&#x8868;&#x8FD8;&#x6709; BLOB &#x5B57;&#x6BB5;&#xFF0C;&#x5219;&#x4F1A;&#x4E3A;&#x8868;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x6240;&#x6709; BLOB &#x5B57;&#x6BB5;&#x7684;&#x5355;&#x72EC;&#x7684;&#x5B9E;&#x4F53;&#x7C7B;&#xFF0C;&#x7136;&#x540E;&#x4E3A;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x7684;&#x5B57;&#x6BB5;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x5B9E;&#x4F53;&#x7C7B;&#x3002;MBG &#x4F1A;&#x5728;&#x6240;&#x6709;&#x751F;&#x6210;&#x7684;&#x5B9E;&#x4F53;&#x7C7B;&#x4E4B;&#x95F4;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x3002; targetRuntime&#xFF1A;&#x6B64;&#x5C5E;&#x6027;&#x7528;&#x4E8E;&#x6307;&#x5B9A;&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x73AF;&#x5883;&#x3002;&#x8BE5;&#x5C5E;&#x6027;&#x652F;&#x6301;&#x4EE5;&#x4E0B;&#x53EF;&#x9009;&#x503C;&#xFF1A; 1234MyBatis3&#xFF1A;&#x9ED8;&#x8BA4;&#x503C;MyBatis3SimpleIbatis2Java2Ibatis2Java5&#xFF1A;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x503C;&#x5373;&#x53EF;&#xFF0C;&#x6709;&#x5173;&#x8FD9;&#x4E9B;&#x503C;&#x7684;&#x5177;&#x4F53;&#x4F5C;&#x7528;&#x4EE5;&#x53CA;&#x533A;&#x522B;&#x8BF7;&#x67E5;&#x770B;&#x4E2D;&#x6587;&#x6587;&#x6863;&#x7684;&#x8BE6;&#x7EC6;&#x5185;&#x5BB9;&#x3002; introspectedColumnImpl&#xFF1A;&#x8BE5;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x6269;&#x5C55;org.mybatis.generator.api.IntrospectedColumn&#x8BE5;&#x7C7B;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x3002;&#x8BE5;&#x5C5E;&#x6027;&#x7684;&#x4F5C;&#x7528;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x6269;&#x5C55; MyBatis Generator&#x3002; &#x6269;&#x5C55; MyBatis Generator&#xFF1A;http://mbg.cndocs.ml/reference/extending.html &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x7684;&#x914D;&#x7F6E;&#x5373;&#x53EF;&#xFF1A; 1&lt;context id=&quot;Mysql&quot; defaultModelType=&quot;flat&quot;&gt; &#x5982;&#x679C;&#x4F60;&#x5E0C;&#x671B;&#x4E0D;&#x751F;&#x6210;&#x548C;Example&#x67E5;&#x8BE2;&#x6709;&#x5173;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x5982;&#x4E0B;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#xFF1A; 1&lt;context id=&quot;Mysql&quot; targetRuntime=&quot;MyBatis3Simple&quot; defaultModelType=&quot;flat&quot;&gt; &#x6CE8;&#x610F;&#xFF1A;&#x4F7F;&#x7528;MyBatis3Simple&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5728;&#x540E;&#x9762;&#x7684;&lt;table&gt;&#x4E2D;&#x9010;&#x4E2A;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#xFF08;&#x540E;&#x9762;&#x4F1A;&#x63D0;&#x5230;&#xFF09;&#x3002; &#x5143;&#x7D20;&#x7684;&#x5B50;&#x5143;&#x7D20; MBG &#x914D;&#x7F6E;&#x4E2D;&#x7684;&#x5176;&#x4ED6;&#x51E0;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x662F;&lt;context&gt;&#x7684;&#x5B50;&#x5143;&#x7D20;&#xFF0C;&#x8FD9;&#x4E9B;&#x5B50;&#x5143;&#x7D20;&#xFF08;&#x6709;&#x4E25;&#x683C;&#x7684;&#x914D;&#x7F6E;&#x987A;&#x5E8F;&#xFF09;&#x5305;&#x62EC;&#xFF1A; 123456789&lt;property&gt;&#xFF08;0 &#x4E2A;&#x6216;&#x591A;&#x4E2A;&#xFF09;&lt;plugin&gt;&#xFF08;0 &#x4E2A;&#x6216;&#x591A;&#x4E2A;&#xFF09;&lt;commentGenerator&gt;&#xFF08;0 &#x4E2A;&#x6216; 1 &#x4E2A;&#xFF09;&lt;jdbcConnection&gt;&#xFF08;1 &#x4E2A;&#xFF09;&lt;javaTypeResolver&gt;&#xFF08;0 &#x4E2A;&#x6216; 1 &#x4E2A;&#xFF09;&lt;javaModelGenerator&gt;&#xFF08;1 &#x4E2A;&#xFF09;&lt;sqlMapGenerator&gt;&#xFF08;0 &#x4E2A;&#x6216; 1 &#x4E2A;&#xFF09;&lt;javaClientGenerator&gt;&#xFF08;0 &#x4E2A;&#x6216; 1 &#x4E2A;&#xFF09;&lt;table&gt;&#xFF08;1 &#x4E2A;&#x6216;&#x591A;&#x4E2A;&#xFF09; 6.1 &#x5C5E;&#x6027;&lt;property&gt;&#x5C5E;&#x6027;&#x6BD4;&#x8F83;&#x7279;&#x6B8A;&#xFF0C;&#x540E;&#x9762;&#x8BB2;&#x89E3;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x4F1A;&#x548C;&#x7236;&#x5143;&#x7D20;&#x4E00;&#x8D77;&#x8FDB;&#x884C;&#x8BB2;&#x89E3;&#x3002; &#x5728;&#x8BB2;&#x89E3;&lt;property&gt;&#x5C5E;&#x6027;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x770B;&#x770B;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x6982;&#x5FF5;&#xFF1A;&#x5206;&#x9694;&#x7B26; &#x8FD9;&#x91CC;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x8BF4;&#x660E;&#x3002;&#x5047;&#x8BBE;&#x5728; Mysql &#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x8868;&#x540D;&#x4E3A;user info&#xFF0C;&#x4F60;&#x6CA1;&#x6709;&#x770B;&#x9519;&#xFF0C;&#x4E2D;&#x95F4;&#x662F;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x5982;&#x679C;&#x5199;&#x51FA;select * from user info&#x8FD9;&#x6837;&#x7684;&#x8BED;&#x53E5;&#xFF0C;&#x80AF;&#x5B9A;&#x662F;&#x8981;&#x62A5;&#x9519;&#x7684;&#xFF0C;&#x5728; Mysql &#x4E2D;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x4F1A;&#x5199;&#x6210;&#x5982;&#x4E0B;&#x7684;&#x6837;&#x5B50;&#xFF1A; select * from `user info` &#x8FD9;&#x91CC;&#x7684;&#x4F7F;&#x7528;&#x7684;&#x53CD;&#x5355;&#x5F15;&#x53F7;( ` )&#x5C31;&#x662F;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x5206;&#x9694;&#x7B26;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x8868;&#x540D;&#x6216;&#x8005;&#x5217;&#x540D;&#x3002; &#x4E0B;&#x9762;&#x7EE7;&#x7EED;&#x770B;&lt;property&gt;&#x652F;&#x6301;&#x7684;&#x5C5E;&#x6027;&#xFF1A; 123456autoDelimitKeywordsbeginningDelimiterendingDelimiterjavaFileEncodingjavaFormatterxmlFormatter &#x9996;&#x5148;&#x662F;autoDelimitKeywords&#xFF0C;&#x5F53;&#x8868;&#x540D;&#x6216;&#x8005;&#x5B57;&#x6BB5;&#x540D;&#x4E3A; SQL &#x5173;&#x952E;&#x5B57;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x8BE5;&#x5C5E;&#x6027;&#x4E3A; true&#xFF0C;MBG &#x4F1A;&#x81EA;&#x52A8;&#x7ED9;&#x8868;&#x540D;&#x6216;&#x5B57;&#x6BB5;&#x540D;&#x6DFB;&#x52A0;&#x5206;&#x9694;&#x7B26;&#x3002; &#x7531;&#x4E8E;beginningDelimiter&#x548C;endingDelimiter&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;&#x53CC;&#x5F15;&#x53F7;&#xFF08;&#x201D;&#xFF09;&#xFF0C;&#x5728; Mysql &#x4E2D;&#x4E0D;&#x80FD;&#x8FD9;&#x4E48;&#x5199;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x8981;&#x5C06;&#x8FD9;&#x4E24;&#x4E2A;&#x9ED8;&#x8BA4;&#x503C;&#x6539;&#x4E3A;&#x53CD;&#x5355;&#x5F15;&#x53F7;&#xFF08;`&#xFF09;&#xFF0C;&#x914D;&#x7F6E;&#x5982;&#x4E0B;&#xFF1A; 12&lt;property name=&quot;beginningDelimiter&quot; value=&quot;`&quot;/&gt;&lt;property name=&quot;endingDelimiter&quot; value=&quot;`&quot;/&gt; &#x5C5E;&#x6027;javaFileEncoding&#x8BBE;&#x7F6E;&#x8981;&#x4F7F;&#x7528;&#x7684; Java &#x6587;&#x4EF6;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x5E73;&#x53F0;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x53EA;&#x6709;&#x5F53;&#x751F;&#x4EA7;&#x7684;&#x7F16;&#x7801;&#x9700;&#x8981;&#x7279;&#x6B8A;&#x6307;&#x5B9A;&#x65F6;&#x624D;&#x9700;&#x8981;&#x4F7F;&#x7528;&#xFF0C;&#x4E00;&#x822C;&#x7528;&#x4E0D;&#x5230;&#x3002; &#x6700;&#x540E;&#x4E24;&#x4E2A;javaFormatter&#x548C;xmlFormatter&#x5C5E;&#x6027;&#x53EF;&#x80FD;&#x4F1A;&#x5F88;&#x6709;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x4F7F;&#x7528;&#x6A21;&#x677F;&#x6765;&#x5B9A;&#x5236;&#x751F;&#x6210;&#x7684; Java &#x6587;&#x4EF6;&#x548C; xml &#x6587;&#x4EF6;&#x7684;&#x6837;&#x5F0F;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x8FD9;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#x7684;&#x503C;&#x6765;&#x5B9E;&#x73B0;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x5206;&#x8282;&#x5BF9;&#x5176;&#x4ED6;&#x7684;&#x5B50;&#x5143;&#x7D20;&#x9010;&#x4E2A;&#x8FDB;&#x884C;&#x4ECB;&#x7ECD;&#x3002; 6.2 &#x5143;&#x7D20;&#x8BE5;&#x5143;&#x7D20;&#x53EF;&#x4EE5;&#x914D;&#x7F6E; 0 &#x4E2A;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x3002;&lt;plugin&gt;&#x5143;&#x7D20;&#x7528;&#x6765;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x63D2;&#x4EF6;&#x3002;&#x63D2;&#x4EF6;&#x7528;&#x4E8E;&#x6269;&#x5C55;&#x6216;&#x4FEE;&#x6539;&#x901A;&#x8FC7; MyBatis Generator (MBG) &#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x63D2;&#x4EF6;&#x5C06;&#x6309;&#x5728;&#x914D;&#x7F6E;&#x4E2D;&#x914D;&#x7F6E;&#x7684;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x3002; &#x6709;&#x5173;&#x63D2;&#x4EF6;&#x7684;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x5F00;&#x53D1;&#x63D2;&#x4EF6;&#x548C;&#x63D0;&#x4F9B;&#x7684;&#x63D2;&#x4EF6;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x3002;&#x5F00;&#x53D1;&#x63D2;&#x4EF6;&#xFF1A;http://mbg.cndocs.ml/reference/pluggingIn.html&#x63D0;&#x4F9B;&#x7684;&#x63D2;&#x4EF6;&#xFF1A;http://mbg.cndocs.ml/reference/plugins.html 6.3 &#x5143;&#x7D20;&#x8BE5;&#x5143;&#x7D20;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;1&#x4E2A;&#x3002;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x975E;&#x5E38;&#x6709;&#x7528;&#xFF0C;&#x76F8;&#x4FE1;&#x5F88;&#x591A;&#x4EBA;&#x90FD;&#x6709;&#x8FC7;&#x8FD9;&#x6837;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x5C31;&#x662F;&#x5E0C;&#x671B; MBG &#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x6CE8;&#x91CA;&#x4FE1;&#x606F;&#xFF0C;&#x5177;&#x4F53;&#x5C31;&#x662F;&#x751F;&#x6210;&#x8868;&#x6216;&#x5B57;&#x6BB5;&#x7684;&#x5907;&#x6CE8;&#x4FE1;&#x606F;&#x3002; &#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x5C31;&#x80FD;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x73B0;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x529F;&#x80FD;&#x3002;&#x8FD9;&#x91CC;&#x5148;&#x4ECB;&#x7ECD;&#x8BE5;&#x5143;&#x7D20;&#xFF0C;&#x4ECB;&#x7ECD;&#x5B8C;&#x540E;&#x4F1A;&#x4E3E;&#x4F8B;&#x5982;&#x4F55;&#x6269;&#x5C55;&#x5B9E;&#x73B0;&#x8BE5;&#x529F;&#x80FD;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709;&#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027; type&#xFF0C;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x7528;&#x6237;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x8BE5;&#x7C7B;&#x9700;&#x8981;&#x5B9E;&#x73B0;org.mybatis.generator.api.CommentGenerator&#x63A5;&#x53E3;&#x3002;&#x800C;&#x4E14;&#x5FC5;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x63A5;&#x6536;&#x9ED8;&#x8BA4;&#x7684;&#x7279;&#x6B8A;&#x503C; DEFAULT&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;org.mybatis.generator.internal.DefaultCommentGenerator&#x3002; &#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x4E2D;&#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF0C;&#x9700;&#x8981;&#x901A;&#x8FC7;&lt;property&gt;&#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#x3002; suppressAllComments&#xFF1A;&#x963B;&#x6B62;&#x751F;&#x6210;&#x6CE8;&#x91CA;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A; false suppressDate&#xFF1A;&#x963B;&#x6B62;&#x751F;&#x6210;&#x7684;&#x6CE8;&#x91CA;&#x5305;&#x542B;&#x65F6;&#x95F4;&#x6233;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A; false &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x7531;&#x4E8E; MBG &#x751F;&#x6210;&#x7684;&#x6CE8;&#x91CA;&#x4FE1;&#x606F;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x4EF7;&#x503C;&#xFF0C;&#x800C;&#x4E14;&#x6709;&#x65F6;&#x95F4;&#x6233;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6BCF;&#x6B21;&#x751F;&#x6210;&#x7684;&#x6CE8;&#x91CA;&#x90FD;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x4F7F;&#x7528;&#x7248;&#x672C;&#x63A7;&#x5236;&#x7684;&#x65F6;&#x5019;&#x6BCF;&#x6B21;&#x90FD;&#x4F1A;&#x63D0;&#x4EA4;&#xFF0C;&#x56E0;&#x800C;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x6211;&#x4EEC;&#x90FD;&#x4F1A;&#x5C4F;&#x853D;&#x6CE8;&#x91CA;&#x4FE1;&#x606F;&#xFF0C;&#x53EF;&#x4EE5;&#x5982;&#x4E0B;&#x914D;&#x7F6E;&#xFF1A; 1234&lt;commentGenerator&gt; &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt; &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;&lt;/commentGenerator&gt; &#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x7B80;&#x5355;&#x4E3E;&#x4F8B;&#x5B9E;&#x73B0;&#x751F;&#x6210;&#x5305;&#x542B;&#x8868;&#x5B57;&#x6BB5;&#x6CE8;&#x91CA;&#x4FE1;&#x606F;&#x7684;&#x6CE8;&#x91CA;&#xFF1A; &#x56E0;&#x4E3A;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x5BF9;&#x6211;&#x4EEC;&#x6765;&#x8BF4;&#xFF0C;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x4F1A;&#x5F88;&#x5BB9;&#x6613;&#xFF0C;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x590D;&#x5236;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#x7C7B;&#x4EE3;&#x7801;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4FEE;&#x6539;&#x7C7B;&#x540D;&#x5982;MyCommentGenerator&#xFF0C;&#x5728;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x4E2D;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x662F;&#x5426;&#x7EE7;&#x7EED;&#x652F;&#x6301;&#x4E0A;&#x9762;&#x7684;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#xFF0C;&#x4F60;&#x8FD8;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x5BF9;&#x5176;&#x4ED6;&#x5C5E;&#x6027;&#x7684;&#x652F;&#x6301;&#x3002; &#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x4E0B;&#x9762;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x4FEE;&#x6539;&#x6765;&#x4E86;&#x89E3;&#xFF0C;&#x5176;&#x4ED6;&#x51E0;&#x4E2A;&#x65B9;&#x6CD5;&#x8BF7;&#x81EA;&#x884C;&#x4FEE;&#x6539;(&#x5199;&#x672C;&#x7AE0;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4E5F;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x5B9E;&#x73B0;&#x8BE5;&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x63D0;&#x4F9B;&#x5B8C;&#x6574;&#x6E90;&#x7801;&#x4E86;)&#xFF1A; 123456789@Overridepublic void addFieldComment(Field field, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) { if (introspectedColumn.getRemarks() != null &amp;&amp; !introspectedColumn.getRemarks().equals(&quot;&quot;)) { field.addJavaDocLine(&quot;/**&quot;); field.addJavaDocLine(&quot; * &quot; + introspectedColumn.getRemarks()); addJavadocTag(field, false); field.addJavaDocLine(&quot; */&quot;); }} &#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x662F;&#x7ED9;&#x5B57;&#x6BB5;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#x4FE1;&#x606F;&#x7684;&#xFF0C;&#x5176;&#x4E2D;IntrospectedColumn&#x5305;&#x542B;&#x4E86;&#x5B57;&#x6BB5;&#x7684;&#x5B8C;&#x6574;&#x4FE1;&#x606F;&#xFF0C;&#x901A;&#x8FC7;getRemarks&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5B57;&#x6BB5;&#x7684;&#x6CE8;&#x91CA;&#x4FE1;&#x606F;&#x3002;&#x4E0A;&#x9762;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4FEE;&#x6539;&#x8D77;&#x6765;&#x8FD8;&#x662F;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x3002;&#x9664;&#x4E86;&#x5B57;&#x6BB5;&#x7684;&#x6CE8;&#x91CA;&#x5916;&#x8FD8;&#x6709; Getter &#x548C; Setter&#xFF0C;&#x4EE5;&#x53CA;&#x7C7B;&#x7684;&#x6CE8;&#x91CA;&#x3002;&#x6B64;&#x5916;&#x8FD8;&#x6709;&#x751F;&#x6210; XML &#x7684;&#x6CE8;&#x91CA;&#xFF0C;&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x3002; &#x5B8C;&#x6210;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x9700;&#x8981;&#x505A;&lt;commentGenerator&gt;&#x5143;&#x7D20;&#x914D;&#x7F6E;&#xFF1A; 1&lt;commentGenerator type=&quot;com.github.abel533.mybatis.generator.MyCommentGenerator&quot;/&gt; 6.4 &#x5143;&#x7D20;&lt;jdbcConnection&gt;&#x7528;&#x4E8E;&#x6307;&#x5B9A;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x4FE1;&#x606F;&#xFF0C;&#x8BE5;&#x5143;&#x7D20;&#x5FC5;&#x9009;&#xFF0C;&#x4E14;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x3002; &#x914D;&#x7F6E;&#x8BE5;&#x5143;&#x7D20;&#x53EA;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x5982;&#x679C; JDBC &#x9A71;&#x52A8;&#x4E0D;&#x5728; classpath &#x4E0B;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x901A;&#x8FC7;&lt;classPathEntry&gt;&#x5143;&#x7D20;&#x5F15;&#x5165; jar &#x5305;&#xFF0C;&#x8FD9;&#x91CC;&#x63A8;&#x8350;&#x5C06; jar &#x5305;&#x653E;&#x5230; classpath &#x4E0B;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709;&#x4E24;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; driverClass&#xFF1A;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x5E93;&#x7684; JDBC &#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x7684;&#x5B8C;&#x5168;&#x9650;&#x5B9A;&#x7C7B;&#x540D; connectionURL&#xFF1A;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x5E93;&#x7684; JDBC &#x8FDE;&#x63A5; URL &#x8BE5;&#x5143;&#x7D20;&#x8FD8;&#x6709;&#x4E24;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;: userId&#xFF1A;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7528;&#x6237; ID password&#xFF1A;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5BC6;&#x7801; &#x6B64;&#x5916;&#x8BE5;&#x5143;&#x7D20;&#x8FD8;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x591A;&#x4E2A;&lt;property&gt;&#x5B50;&#x5143;&#x7D20;&#xFF0C;&#x8FD9;&#x91CC;&#x914D;&#x7F6E;&#x7684;&lt;property&gt;&#x5C5E;&#x6027;&#x90FD;&#x4F1A;&#x6DFB;&#x52A0;&#x5230; JDBC &#x9A71;&#x52A8;&#x7684;&#x5C5E;&#x6027;&#x4E2D;&#x3002; &#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x914D;&#x7F6E;&#x8D77;&#x6765;&#x6700;&#x5BB9;&#x6613;&#xFF0C;&#x8FD9;&#x91CC;&#x4E3E;&#x4E2A;&#x7B80;&#x5355;&#x4F8B;&#x5B50;&#xFF1A; 12345&lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://localhost:3306/test&quot; userId=&quot;root&quot; password=&quot;root&quot;&gt;&lt;/jdbcConnection&gt; 6.5 &#x5143;&#x7D20;&#x8BE5;&#x5143;&#x7D20;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x3002;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x914D;&#x7F6E;&#x7528;&#x6765;&#x6307;&#x5B9A; JDBC &#x7C7B;&#x578B;&#x548C; Java &#x7C7B;&#x578B;&#x5982;&#x4F55;&#x8F6C;&#x6362;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x7684;&#x5C5E;type&#x548C;&lt;commentGenerator&gt;&#x6BD4;&#x8F83;&#x7C7B;&#x578B;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x9ED8;&#x8BA4;&#x7684;&#x5B9E;&#x73B0; DEFAULT&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x5373;&#x53EF;&#xFF0C;&#x9700;&#x8981;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x7684;&#x60C5;&#x51B5;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5176;&#x4ED6;&#x5143;&#x7D20;&#x914D;&#x7F6E;&#x6765;&#x89E3;&#x51B3;&#xFF0C;&#x4E0D;&#x5EFA;&#x8BAE;&#x4FEE;&#x6539;&#x8BE5;&#x5C5E;&#x6027;&#x3002; &#x8BE5;&#x5C5E;&#x6027;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x7684;&lt;property&gt;&#x5143;&#x7D20;&#x3002; &#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x7684;&#x5C5E;&#x6027;&#x4E3A;forceBigDecimals&#xFF0C;&#x8BE5;&#x5C5E;&#x6027;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x662F;&#x5426;&#x5F3A;&#x5236; DECIMAL &#x548C; NUMERIC &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x8F6C;&#x6362;&#x4E3A; Java &#x7C7B;&#x578B;&#x7684;java.math.BigDecimal&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A; false&#xFF0C;&#x4E00;&#x822C;&#x4E0D;&#x9700;&#x8981;&#x914D;&#x7F6E;&#x3002; &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x8F6C;&#x6362;&#x89C4;&#x5219;&#x4E3A;&#xFF1A; &#x5982;&#x679C;&#x7CBE;&#x5EA6; &gt; 0 &#x6216;&#x8005;&#x957F;&#x5EA6; &gt; 18&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;java.math.BigDecimal&#x5982;&#x679C;&#x7CBE;&#x5EA6; = 0 &#x5E76;&#x4E14; 10 &lt;= &#x957F;&#x5EA6; &lt;= 18&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;java.lang.Long&#x5982;&#x679C;&#x7CBE;&#x5EA6; = 0 &#x5E76;&#x4E14;5 &lt;= &#x957F;&#x5EA6; &lt;= 9&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;java.lang.Integer&#x5982;&#x679C;&#x7CBE;&#x5EA6; = 0 &#x5E76;&#x4E14; &#x957F;&#x5EA6; &lt; 5&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;java.lang.Short &#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A; true&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x5B9A;&#x4F1A;&#x4F7F;&#x7528;java.math.BigDecimal&#xFF0C; &lt;javaTypeResolver&gt;&#x5143;&#x7D20;&#x914D;&#x7F6E;&#x793A;&#x4F8B;&#xFF1A; 123&lt;javaTypeResolver &gt; &lt;property name=&quot;forceBigDecimals&quot; value=&quot;true&quot; /&gt;&lt;/javaTypeResolver&gt; 6.6 &#x5143;&#x7D20;&#x8BE5;&#x5143;&#x7D20;&#x5FC5;&#x987B;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#xFF0C;&#x5E76;&#x4E14;&#x6700;&#x591A;&#x4E00;&#x4E2A;&#x3002;&#x8BE5;&#x5143;&#x7D20;&#x7528;&#x6765;&#x63A7;&#x5236;&#x751F;&#x6210;&#x7684;&#x5B9E;&#x4F53;&#x7C7B;&#xFF0C;&#x6839;&#x636E;&lt;context&gt;&#x4E2D;&#x914D;&#x7F6E;&#x7684;defaultModelType&#xFF0C;&#x4E00;&#x4E2A;&#x8868;&#x53EF;&#x80FD;&#x4F1A;&#x5BF9;&#x5E94;&#x751F;&#x6210;&#x591A;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x4F53;&#x7C7B;&#x3002;&#x4E00;&#x4E2A;&#x8868;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;&#x7C7B;&#x5B9E;&#x9645;&#x4E0A;&#x5E76;&#x4E0D;&#x65B9;&#x4FBF;&#xFF0C;&#x6240;&#x4EE5;&#x524D;&#x9762;&#x4E5F;&#x63A8;&#x8350;&#x4F7F;&#x7528; flat&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x4E00;&#x4E2A;&#x8868;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x7C7B;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; targetPackage&#xFF1A;&#x751F;&#x6210;&#x5B9E;&#x4F53;&#x7C7B;&#x5B58;&#x653E;&#x7684;&#x5305;&#x540D;&#xFF0C;&#x4E00;&#x822C;&#x5C31;&#x662F;&#x653E;&#x5728;&#x8BE5;&#x5305;&#x4E0B;&#x3002;&#x5B9E;&#x9645;&#x8FD8;&#x4F1A;&#x53D7;&#x5230;&#x5176;&#x4ED6;&#x914D;&#x7F6E;&#x7684;&#x5F71;&#x54CD;&#xFF08; &#x4E2D;&#x4F1A;&#x63D0;&#x5230;&#xFF09;&#x3002; targetProject&#xFF1A;&#x6307;&#x5B9A;&#x76EE;&#x6807;&#x9879;&#x76EE;&#x8DEF;&#x5F84;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x6216;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF08;&#x5982;targetProject=&quot;src/main/java&quot;&#xFF09;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x652F;&#x6301;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x5B50;&#x5143;&#x7D20;&#x5C5E;&#x6027;&#xFF1A; constructorBased&#xFF1A;&#x8BE5;&#x5C5E;&#x6027;&#x53EA;&#x5BF9; MyBatis3 &#x6709;&#x6548;&#xFF0C;&#x5982;&#x679C; true &#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x5165;&#x53C2;&#xFF0C;&#x5982;&#x679C; false &#x5C31;&#x4F1A;&#x4F7F;&#x7528; setter&#x65B9;&#x5F0F;&#x3002;&#x9ED8;&#x8BA4;&#x4E3A; false&#x3002; enableSubPackages&#xFF1A;&#x5982;&#x679C; true&#xFF0C;MBG &#x4F1A;&#x6839;&#x636E; catalog &#x548C; schema &#x6765;&#x751F;&#x6210;&#x5B50;&#x5305;&#x3002;&#x5982;&#x679C; false &#x5C31;&#x4F1A;&#x76F4;&#x63A5;&#x7528; targetPackage &#x5C5E;&#x6027;&#x3002;&#x9ED8;&#x8BA4;&#x4E3A;false&#x3002; immutable&#xFF1A;&#x8BE5;&#x5C5E;&#x6027;&#x7528;&#x6765;&#x914D;&#x7F6E;&#x5B9E;&#x4F53;&#x7C7B;&#x5C5E;&#x6027;&#x662F;&#x5426;&#x53EF;&#x53D8;&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A; true&#xFF0C;&#x90A3;&#x4E48; constructorBased &#x4E0D;&#x7BA1;&#x8BBE;&#x7F6E;&#x6210;&#x4EC0;&#x4E48;&#xFF0C;&#x90FD;&#x4F1A;&#x4F7F;&#x7528;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x5165;&#x53C2;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x4F1A;&#x751F;&#x6210; setter &#x65B9;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x4E3A; false&#xFF0C;&#x5B9E;&#x4F53;&#x7C7B;&#x5C5E;&#x6027;&#x5C31;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x3002;&#x9ED8;&#x8BA4;&#x4E3A; false&#x3002; rootClass&#xFF1A;&#x8BBE;&#x7F6E;&#x6240;&#x6709;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x57FA;&#x7C7B;&#x3002;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x7C7B;&#x7684;&#x5168;&#x9650;&#x5B9A;&#x540D;&#x79F0;&#x3002;&#x5E76;&#x4E14;&#x5982;&#x679C; MBG &#x80FD;&#x591F;&#x52A0;&#x8F7D;rootClass&#xFF0C;&#x90A3;&#x4E48; MBG &#x4E0D;&#x4F1A;&#x8986;&#x76D6;&#x548C;&#x7236;&#x7C7B;&#x4E2D;&#x5B8C;&#x5168;&#x5339;&#x914D;&#x7684;&#x5C5E;&#x6027;&#x3002;&#x5339;&#x914D;&#x89C4;&#x5219;&#xFF1A; 1234&#x5C5E;&#x6027;&#x540D;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#x5C5E;&#x6027;&#x7C7B;&#x578B;&#x76F8;&#x540C;&#x5C5E;&#x6027;&#x6709;getter&#x65B9;&#x6CD5;&#x5C5E;&#x6027;&#x6709;setter&#x65B9;&#x6CD5; trimStrings&#xFF1A;&#x662F;&#x5426;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x8FDB;&#x884C; trim &#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A; true &#x5C31;&#x4F1A;&#x751F;&#x6210;&#x7C7B;&#x4F3C;&#x8FD9;&#x6837; 123public void setUsername(String username) { this.username = username == null ? null : username.trim();} &#x7684; setter &#x65B9;&#x6CD5;&#x3002;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A; false&#x3002; &lt;javaModelGenerator&gt;&#x5143;&#x7D20;&#x914D;&#x7F6E;&#x793A;&#x4F8B;&#xFF1A; 1234&lt;javaModelGenerator targetPackage=&quot;test.model&quot; targetProject=&quot;src\main\java&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt; &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;&lt;/javaModelGenerator&gt; 6.7 &#x5143;&#x7D20;&#x8BE5;&#x5143;&#x7D20;&#x53EF;&#x9009;&#xFF0C;&#x6700;&#x591A;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x3002;&#x4F46;&#x662F;&#x6709;&#x5982;&#x4E0B;&#x4E24;&#x79CD;&#x5FC5;&#x9009;&#x7684;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#xFF1A; &#x5982;&#x679C;targetRuntime&#x76EE;&#x6807;&#x662F; iBATIS2&#xFF0C;&#x8BE5;&#x5143;&#x7D20;&#x5FC5;&#x987B;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x3002;&#x5982;&#x679C;targetRuntime&#x76EE;&#x6807;&#x662F; MyBatis3&#xFF0C;&#x53EA;&#x6709;&#x5F53;&lt;javaClientGenerator&gt;&#x9700;&#x8981;XML&#x65F6;&#xFF0C;&#x8BE5;&#x5143;&#x7D20;&#x5FC5;&#x987B;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x3002; &#x5982;&#x679C;&#x6CA1;&#x6709;&#x914D;&#x7F6E; &#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x7684;&#x89C4;&#x5219;&#xFF1A;&#x5982;&#x679C;&#x6307;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A; &#xFF0C;&#x90A3;&#x4E48; MBG &#x5C06;&#x53EA;&#x751F;&#x6210; XML &#x7684; SQL &#x6620;&#x5C04;&#x6587;&#x4EF6;&#x548C;&#x5B9E;&#x4F53;&#x7C7B;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A; &#xFF0C;&#x90A3;&#x4E48; MBG &#x5C06;&#x53EA;&#x751F;&#x6210;&#x5B9E;&#x4F53;&#x7C7B;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF08;&#x548C;&#x524D;&#x9762;&#x63D0;&#x8FC7;&#x7684;&lt;javaModelGenerator&gt;&#x7684;&#x5C5E;&#x6027;&#x542B;&#x4E49;&#x4E00;&#x6837;&#xFF09;&#xFF1A; targetPackage&#xFF1A;&#x751F;&#x6210;&#x5B9E;&#x4F53;&#x7C7B;&#x5B58;&#x653E;&#x7684;&#x5305;&#x540D;&#xFF0C;&#x4E00;&#x822C;&#x5C31;&#x662F;&#x653E;&#x5728;&#x8BE5;&#x5305;&#x4E0B;&#x3002;&#x5B9E;&#x9645;&#x8FD8;&#x4F1A;&#x53D7;&#x5230;&#x5176;&#x4ED6;&#x914D;&#x7F6E;&#x7684;&#x5F71;&#x54CD;(&#x4E2D;&#x4F1A;&#x63D0;&#x5230;)&#x3002; targetProject&#xFF1A;&#x6307;&#x5B9A;&#x76EE;&#x6807;&#x9879;&#x76EE;&#x8DEF;&#x5F84;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x6216;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF08;&#x5982;&#xFF1A;targetProject=&quot;src/main/resources&quot;&#xFF09;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x652F;&#x6301;&lt;property&gt;&#x5B50;&#x5143;&#x7D20;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x7684;&#x5C5E;&#x6027;&#xFF1A; enableSubPackages&#xFF1A;&#x5982;&#x679C; true&#xFF0C;MBG &#x4F1A;&#x6839;&#x636E; catalog &#x548C; schema &#x6765;&#x751F;&#x6210;&#x5B50;&#x5305;&#x3002;&#x5982;&#x679C; false &#x5C31;&#x4F1A;&#x76F4;&#x63A5;&#x7528; targetPackage &#x5C5E;&#x6027;&#x3002;&#x9ED8;&#x8BA4;&#x4E3A; false&#x3002; &lt;sqlMapGenerator&gt;&#x5143;&#x7D20;&#x914D;&#x7F6E;&#x793A;&#x4F8B;&#xFF1A; 123&lt;sqlMapGenerator targetPackage=&quot;test.xml&quot; targetProject=&quot;src\main\resources&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;&lt;/sqlMapGenerator&gt; 6.8 &#x5143;&#x7D20;&#x8BE5;&#x5143;&#x7D20;&#x53EF;&#x9009;&#xFF0C;&#x6700;&#x591A;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x914D;&#x7F6E;&#x8BE5;&#x5143;&#x7D20;&#xFF0C;&#x5C31;&#x4E0D;&#x4F1A;&#x751F;&#x6210; Mapper &#x63A5;&#x53E3;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709; 3 &#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; type&#xFF1A;&#x8BE5;&#x5C5E;&#x6027;&#x7528;&#x4E8E;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x9884;&#x5B9A;&#x4E49;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7801;&#xFF08;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A; Mapper &#x63A5;&#x53E3;&#xFF09;&#x751F;&#x6210;&#x5668;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#x5B9E;&#x73B0;&#xFF0C;&#x9700;&#x8981;&#x7EE7;&#x627F;org.mybatis.generator.codegen.AbstractJavaClientGenerator&#x7C7B;&#xFF0C;&#x5FC5;&#x9009;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x3002; &#x8BE5;&#x5C5E;&#x6027;&#x63D0;&#x4F9B;&#x4E86;&#x4EE5;&#x4E0B;&#x9884;&#x5B9A;&#x7684;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#xFF0C;&#x9996;&#x5148;&#x6839;&#x636E;&lt;context&gt;&#x7684; targetRuntime &#x5206;&#x6210;&#x4E09;&#x7C7B;&#xFF1A; 1. MyBatis3&#x7C7B;&#xFF1A;ANNOTATEDMAPPER&#xFF1A;&#x57FA;&#x4E8E;&#x6CE8;&#x89E3;&#x7684; Mapper &#x63A5;&#x53E3;&#xFF0C;&#x4E0D;&#x4F1A;&#x6709;&#x5BF9;&#x5E94;&#x7684; XML &#x6620;&#x5C04;&#x6587;&#x4EF6;&#x3002;MIXEDMAPPER&#xFF1A;XML &#x548C;&#x6CE8;&#x89E3;&#x7684;&#x6DF7;&#x5408;&#x5F62;&#x5F0F;&#xFF0C;&#xFF08;&#x4E0A;&#x9762;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E2D;&#x7684;&#xFF09;SqlProvider &#x6CE8;&#x89E3;&#x65B9;&#x6CD5;&#x4F1A;&#x88AB; XML &#x66FF;&#x4EE3;&#x3002;XMLMAPPER&#xFF1A;&#x6240;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x90FD;&#x5728; XML &#x4E2D;&#xFF0C;&#x63A5;&#x53E3;&#x8C03;&#x7528;&#x4F9D;&#x8D56; XML &#x6587;&#x4EF6;&#x3002; 2. MyBatis3Simple&#x7C7B;&#xFF1A;ANNOTATEDMAPPER&#xFF1A;&#x57FA;&#x4E8E;&#x6CE8;&#x89E3;&#x7684; Mapper &#x63A5;&#x53E3;&#xFF0C;&#x4E0D;&#x4F1A;&#x6709;&#x5BF9;&#x5E94;&#x7684; XML &#x6620;&#x5C04;&#x6587;&#x4EF6;&#x3002;XMLMAPPER&#xFF1A;&#x6240;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x90FD;&#x5728; XML &#x4E2D;&#xFF0C;&#x63A5;&#x53E3;&#x8C03;&#x7528;&#x4F9D;&#x8D56; XML &#x6587;&#x4EF6;&#x3002; 3. Ibatis2Java2&#x6216;Ibatis2Java5&#x7C7B;&#xFF1A;IBATIS&#xFF1A;&#x751F;&#x6210;&#x7684;&#x5BF9;&#x8C61;&#x7B26;&#x5408;iBATIS&#x7684;DAO&#x6846;&#x67B6;&#xFF08;&#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#xFF09;&#x3002;GENERIC-CI&#xFF1A;&#x751F;&#x6210;&#x7684;&#x5BF9;&#x8C61;&#x5C06;&#x53EA;&#x4F9D;&#x8D56;&#x4E8E;SqlMapClient&#xFF0C;&#x901A;&#x8FC7;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x6CE8;&#x5165;&#x3002;GENERIC-SI&#xFF1A;&#x751F;&#x6210;&#x7684;&#x5BF9;&#x8C61;&#x5C06;&#x53EA;&#x4F9D;&#x8D56;&#x4E8E;SqlMapClient&#xFF0C;&#x901A;&#x8FC7;setter&#x65B9;&#x6CD5;&#x6CE8;&#x5165;&#x3002;SPRING&#xFF1A;&#x751F;&#x6210;&#x7684;&#x5BF9;&#x8C61;&#x7B26;&#x5408;Spring&#x7684;DAO&#x63A5;&#x53E3;&#x3002; targetPackage&#xFF1A;&#x751F;&#x6210;&#x5B9E;&#x4F53;&#x7C7B;&#x5B58;&#x653E;&#x7684;&#x5305;&#x540D;&#xFF0C;&#x4E00;&#x822C;&#x5C31;&#x662F;&#x653E;&#x5728;&#x8BE5;&#x5305;&#x4E0B;&#x3002;&#x5B9E;&#x9645;&#x8FD8;&#x4F1A;&#x53D7;&#x5230;&#x5176;&#x4ED6;&#x914D;&#x7F6E;&#x7684;&#x5F71;&#x54CD;&#xFF08;&#x4E2D;&#x4F1A;&#x63D0;&#x5230;&#xFF09;&#x3002; targetProject&#xFF1A;&#x6307;&#x5B9A;&#x76EE;&#x6807;&#x9879;&#x76EE;&#x8DEF;&#x5F84;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x6216;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF08;&#x5982;&#xFF1A;targetProject=&quot;src/main/java&quot;&#xFF09;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF1A; implementationPackage&#xFF1A;&#x5982;&#x679C;&#x6307;&#x5B9A;&#x4E86;&#x8BE5;&#x5C5E;&#x6027;&#xFF0C;&#x5B9E;&#x73B0;&#x7C7B;&#x5C31;&#x4F1A;&#x751F;&#x6210;&#x5728;&#x8FD9;&#x4E2A;&#x5305;&#x4E2D;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x652F;&#x6301;&lt;property&gt;&#x5B50;&#x5143;&#x7D20;&#x8BBE;&#x7F6E;&#x7684;&#x5C5E;&#x6027;&#xFF1A; 12345enableSubPackagesexampleMethodVisibilitymethodNameCalculatorrootInterfaceuseLegacyBuilder &#x8FD9;&#x51E0;&#x4E2A;&lt;property&gt;&#x5B50;&#x5143;&#x7D20;&#x5C5E;&#x6027;&#x4E0D;&#x592A;&#x5E38;&#x7528;&#xFF0C;&#x5177;&#x4F53;&#x4F5C;&#x7528;&#x8BF7;&#x770B;&#x5B8C;&#x6574;&#x7684;&#x6587;&#x6863;&#xFF0C;&#x8FD9;&#x91CC;&#x5BF9;rootInterface&#x505A;&#x4E2A;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#xFF1A; rootInterface&#xFF1A;&#x7528;&#x4E8E;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x6240;&#x6709;&#x751F;&#x6210;&#x7684;&#x63A5;&#x53E3;&#x90FD;&#x7EE7;&#x627F;&#x7684;&#x7236;&#x63A5;&#x53E3;&#x3002; &#x8FD9;&#x4E2A;&#x503C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&amp;lt;table\&amp;gt;&#x914D;&#x7F6E;&#x7684;rootInterface&#x5C5E;&#x6027;&#x8986;&#x76D6;&#x3002;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x5BF9;&#x4E8E;&#x901A;&#x7528; Mapper &#x6765;&#x8BF4;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;&#x751F;&#x6210;&#x7684;&#x6240;&#x6709;&#x63A5;&#x53E3;&#x90FD;&#x7EE7;&#x627F;&#x8BE5;&#x63A5;&#x53E3;&#x3002; &lt;javaClientGenerator&gt;&#x5143;&#x7D20;&#x914D;&#x7F6E;&#x793A;&#x4F8B;&#xFF1A; 1&lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;test.dao&quot; targetProject=&quot;src\main\java&quot;/&gt; 6.9 &#x5143;&#x7D20;&#x8BE5;&#x5143;&#x7D20;&#x81F3;&#x5C11;&#x8981;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x3002;&#x8BE5;&#x5143;&#x7D20;&#x7528;&#x6765;&#x914D;&#x7F6E;&#x8981;&#x901A;&#x8FC7;&#x5185;&#x7701;&#x7684;&#x8868;&#x3002;&#x53EA;&#x6709;&#x914D;&#x7F6E;&#x7684;&#x624D;&#x4F1A;&#x751F;&#x6210;&#x5B9E;&#x4F53;&#x7C7B;&#x548C;&#x5176;&#x4ED6;&#x6587;&#x4EF6;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709;&#x4E00;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; tableName&#xFF1A;&#x6307;&#x5B9A;&#x8981;&#x751F;&#x6210;&#x7684;&#x8868;&#x540D;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; SQL &#x901A;&#x914D;&#x7B26;&#x5339;&#x914D;&#x591A;&#x4E2A;&#x8868;&#x3002; &#x4F8B;&#x5982;&#x8981;&#x751F;&#x6210;&#x5168;&#x90E8;&#x7684;&#x8868;&#xFF0C;&#x53EF;&#x4EE5;&#x6309;&#x5982;&#x4E0B;&#x914D;&#x7F6E;&#xFF1A;&lt;table tableName=&quot;%&quot; /&gt; &#x8BE5;&#x5143;&#x7D20;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF1A; schema&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x7684; schema&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; SQL &#x901A;&#x914D;&#x7B26;&#x5339;&#x914D;&#x3002;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;&#x8BE5;&#x503C;&#xFF0C;&#x751F;&#x6210; SQL &#x7684;&#x8868;&#x540D;&#x4F1A;&#x53D8;&#x6210;&#x5982; schema.tableName &#x7684;&#x5F62;&#x5F0F;&#x3002; catalog&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x7684; catalog&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;&#x8BE5;&#x503C;&#xFF0C;&#x751F;&#x6210; SQL &#x7684;&#x8868;&#x540D;&#x4F1A;&#x53D8;&#x6210;&#x5982; catalog.tableName &#x7684;&#x5F62;&#x5F0F;&#x3002; alias&#xFF1A;&#x5982;&#x679C;&#x6307;&#x5B9A;&#xFF0C;&#x8FD9;&#x4E2A;&#x503C;&#x4F1A;&#x7528;&#x5728;&#x751F;&#x6210;&#x7684; select &#x67E5;&#x8BE2; SQL &#x7684;&#x8868;&#x7684;&#x522B;&#x540D;&#x548C;&#x5217;&#x540D;&#x4E0A;&#x3002; &#x5217;&#x540D;&#x4F1A;&#x88AB;&#x522B;&#x540D;&#x4E3A; alias_actualColumnName&#xFF08;&#x522B;&#x540D;_&#x5B9E;&#x9645;&#x5217;&#x540D;&#xFF09;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#x3002; domainObjectName&#xFF1A;&#x751F;&#x6210;&#x5BF9;&#x8C61;&#x7684;&#x57FA;&#x672C;&#x540D;&#x79F0;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#xFF0C;MBG &#x4F1A;&#x81EA;&#x52A8;&#x6839;&#x636E;&#x8868;&#x540D;&#x6765;&#x751F;&#x6210;&#x540D;&#x79F0;&#x3002; enableXXX&#xFF1A;XXX &#x4EE3;&#x8868;&#x591A;&#x79CD; SQL &#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x5C5E;&#x6027;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x662F;&#x5426;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684; XXX &#x8BED;&#x53E5;&#x3002; selectByPrimaryKeyQueryId&#xFF1A;DBA &#x8DDF;&#x8E2A;&#x5DE5;&#x5177;&#x4F1A;&#x7528;&#x5230;&#xFF0C;&#x5177;&#x4F53;&#x8BF7;&#x770B;&#x8BE6;&#x7EC6;&#x6587;&#x6863;&#x3002; selectByExampleQueryId&#xFF1A;DBA &#x8DDF;&#x8E2A;&#x5DE5;&#x5177;&#x4F1A;&#x7528;&#x5230;&#xFF0C;&#x5177;&#x4F53;&#x8BF7;&#x770B;&#x8BE6;&#x7EC6;&#x6587;&#x6863;&#x3002; modelType&#xFF1A;&#x548C;&lt;context&gt;&#x7684;defaultModelType&#x542B;&#x4E49;&#x4E00;&#x6837;&#xFF0C;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x9488;&#x5BF9;&#x8868;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x914D;&#x7F6E;&#x4F1A;&#x8986;&#x76D6;&lt;context&gt;&#x7684;defaultModelType&#x914D;&#x7F6E;&#x3002; escapeWildcards&#xFF1A;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x8868;&#x793A;&#x5F53;&#x67E5;&#x8BE2;&#x5217;&#xFF0C;&#x662F;&#x5426;&#x5BF9; schema &#x548C;&#x8868;&#x540D;&#x4E2D;&#x7684; SQL &#x901A;&#x914D;&#x7B26; &#xFF08;&#x2019;_&#x2019; and &#x2018;%&#x2019;&#xFF09;&#x8FDB;&#x884C;&#x8F6C;&#x4E49;&#x3002; &#x5BF9;&#x4E8E;&#x67D0;&#x4E9B;&#x9A71;&#x52A8;&#x5F53; schema &#x6216;&#x8868;&#x540D;&#x4E2D;&#x5305;&#x542B; SQL &#x901A;&#x914D;&#x7B26;&#x65F6;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x4E00;&#x4E2A;&#x8868;&#x540D;&#x662F; MY_TABLE&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x9A71;&#x52A8;&#x9700;&#x8981;&#x5C06;&#x4E0B;&#x5212;&#x7EBF;&#x8FDB;&#x884C;&#x8F6C;&#x4E49;&#xFF09;&#x662F;&#x5FC5;&#x987B;&#x7684;&#x3002;&#x9ED8;&#x8BA4;&#x503C;&#x662F; false&#x3002; delimitIdentifiers&#xFF1A;&#x662F;&#x5426;&#x7ED9;&#x6807;&#x8BC6;&#x7B26;&#x589E;&#x52A0;&#x5206;&#x9694;&#x7B26;&#x3002;&#x9ED8;&#x8BA4; false&#x3002;&#x5F53; catalog&#xFF0C;schema &#x6216; tableName &#x4E2D;&#x5305;&#x542B;&#x7A7A;&#x767D;&#x65F6;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;true&#x3002; delimitAllColumns&#xFF1A;&#x662F;&#x5426;&#x5BF9;&#x6240;&#x6709;&#x5217;&#x6DFB;&#x52A0;&#x5206;&#x9694;&#x7B26;&#x3002;&#x9ED8;&#x8BA4; false&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x53EF;&#x7528;&#x7684;&lt;property&gt;&#x5B50;&#x5143;&#x7D20;&#xFF0C;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#x4E3A;&#xFF1A; constructorBased&#xFF1A;&#x548C;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x542B;&#x4E49;&#x4E00;&#x6837;&#x3002; ignoreQualifiersAtRuntime&#xFF1A;&#x751F;&#x6210;&#x7684; SQL &#x4E2D;&#x7684;&#x8868;&#x540D;&#x5C06;&#x4E0D;&#x4F1A;&#x5305;&#x542B; schema &#x548C; catalog &#x524D;&#x7F00;&#x3002; immutable&#xFF1A;&#x548C;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x542B;&#x4E49;&#x4E00;&#x6837;&#x3002; modelOnly&#xFF1A;&#x6B64;&#x5C5E;&#x6027;&#x7528;&#x4E8E;&#x914D;&#x7F6E;&#x662F;&#x5426;&#x4E3A;&#x8868;&#x53EA;&#x751F;&#x6210;&#x5B9E;&#x4F53;&#x7C7B;&#x3002;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A; true &#x5C31;&#x4E0D;&#x4F1A;&#x6709; Mapper &#x63A5;&#x53E3;&#x3002;&#x5982;&#x679C;&#x914D;&#x7F6E;&#x4E86;&#xFF0C;&#x5E76;&#x4E14; modelOnly &#x4E3A; true&#xFF0C;&#x90A3;&#x4E48; XML &#x6620;&#x5C04;&#x6587;&#x4EF6;&#x4E2D;&#x53EA;&#x6709;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x6620;&#x5C04;&#x5143;&#x7D20;&#xFF08; &#xFF09;&#x3002;&#x5982;&#x679C;&#x4E3A; true &#x8FD8;&#x4F1A;&#x8986;&#x76D6;&#x5C5E;&#x6027;&#x4E2D;&#x7684; enableXXX &#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x4E0D;&#x4F1A;&#x751F;&#x6210;&#x4EFB;&#x4F55; CRUD &#x65B9;&#x6CD5;&#x3002; rootClass&#xFF1A;&#x548C;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x542B;&#x4E49;&#x4E00;&#x6837;&#x3002; rootInterface&#xFF1A;&#x548C;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x542B;&#x4E49;&#x4E00;&#x6837;&#x3002; runtimeCatalog&#xFF1A;&#x8FD0;&#x884C;&#x65F6;&#x7684; catalog&#xFF0C;&#x5F53;&#x751F;&#x6210;&#x8868;&#x548C;&#x8FD0;&#x884C;&#x73AF;&#x5883;&#x7684;&#x8868;&#x7684; catalog &#x4E0D;&#x4E00;&#x6837;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8BE5;&#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#x3002; runtimeSchema&#xFF1A;&#x8FD0;&#x884C;&#x65F6;&#x7684; schema&#xFF0C;&#x5F53;&#x751F;&#x6210;&#x8868;&#x548C;&#x8FD0;&#x884C;&#x73AF;&#x5883;&#x7684;&#x8868;&#x7684; schema &#x4E0D;&#x4E00;&#x6837;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8BE5;&#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#x3002; runtimeTableName&#xFF1A;&#x8FD0;&#x884C;&#x65F6;&#x7684; tableName&#xFF0C;&#x5F53;&#x751F;&#x6210;&#x8868;&#x548C;&#x8FD0;&#x884C;&#x73AF;&#x5883;&#x7684;&#x8868;&#x7684; tableName &#x4E0D;&#x4E00;&#x6837;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8BE5;&#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#x3002; selectAllOrderByClause&#xFF1A;&#x8BE5;&#x5C5E;&#x6027;&#x503C;&#x4F1A;&#x8FFD;&#x52A0;&#x5230; selectAll &#x65B9;&#x6CD5;&#x540E;&#x7684; SQL &#x4E2D;&#xFF0C;&#x4F1A;&#x76F4;&#x63A5;&#x8DDF; order by &#x62FC;&#x63A5;&#x540E;&#x6DFB;&#x52A0;&#x5230; SQL &#x672B;&#x5C3E;&#x3002; useActualColumnNames&#xFF1A;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A; true&#xFF0C;&#x90A3;&#x4E48; MBG &#x4F1A;&#x4F7F;&#x7528;&#x4ECE;&#x6570;&#x636E;&#x5E93;&#x5143;&#x6570;&#x636E;&#x83B7;&#x53D6;&#x7684;&#x5217;&#x540D;&#x4F5C;&#x4E3A;&#x751F;&#x6210;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#x3002; &#x5982;&#x679C;&#x4E3A; false&#xFF08;&#x9ED8;&#x8BA4;&#x503C;&#xFF09;&#xFF0C;MGB &#x5C06;&#x4F1A;&#x5C1D;&#x8BD5;&#x5C06;&#x8FD4;&#x56DE;&#x7684;&#x540D;&#x79F0;&#x8F6C;&#x6362;&#x4E3A;&#x9A7C;&#x5CF0;&#x5F62;&#x5F0F;&#x3002; &#x5728;&#x8FD9;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; &#x5143;&#x7D20;&#x663E;&#x793A;&#x6307;&#x5B9A;&#xFF0C;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x5C06;&#x4F1A;&#x5FFD;&#x7565;&#x8FD9;&#x4E2A;&#xFF08;useActualColumnNames&#xFF09;&#x5C5E;&#x6027;&#x3002; useColumnIndexes&#xFF1A;&#x5982;&#x679C;&#x662F; true&#xFF0C;MBG &#x751F;&#x6210; resultMaps &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x4F7F;&#x7528;&#x5217;&#x7684;&#x7D22;&#x5F15;,&#x800C;&#x4E0D;&#x662F;&#x7ED3;&#x679C;&#x4E2D;&#x5217;&#x540D;&#x7684;&#x987A;&#x5E8F;&#x3002; useCompoundPropertyNames&#xFF1A;&#x5982;&#x679C;&#x662F; true&#xFF0C;&#x90A3;&#x4E48; MBG &#x751F;&#x6210;&#x5C5E;&#x6027;&#x540D;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x5C06;&#x5217;&#x540D;&#x548C;&#x5217;&#x5907;&#x6CE8;&#x63A5;&#x8D77;&#x6765;&#x3002;&#x8FD9;&#x5BF9;&#x4E8E;&#x90A3;&#x4E9B;&#x901A;&#x8FC7;&#x7B2C;&#x56DB;&#x4EE3;&#x8BED;&#x8A00;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x5217;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;FLD22237&#xFF09;&#xFF0C;&#x4F46;&#x662F;&#x5907;&#x6CE8;&#x5305;&#x542B;&#x6709;&#x7528;&#x4FE1;&#x606F;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;&#x201D;customer id&#x201D;&#xFF09;&#x7684;&#x6570;&#x636E;&#x5E93;&#x6765;&#x8BF4;&#x5F88;&#x6709;&#x7528;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;MBG &#x4F1A;&#x751F;&#x6210;&#x5C5E;&#x6027;&#x540D; FLD2237_CustomerId&#x3002; 6.10 &#x5B50;&#x5143;&#x7D20;&#x9664;&#x4E86;&lt;property&gt;&#x5B50;&#x5143;&#x7D20;&#x5916;&#xFF0C;&lt;table&gt;&#x8FD8;&#x5305;&#x542B;&#x4EE5;&#x4E0B;&#x5B50;&#x5143;&#x7D20;&#xFF1A; 1234&lt;generatedKey&gt; (0 &#x4E2A;&#x6216; 1 &#x4E2A;)&lt;columnRenamingRule&gt; (0 &#x4E2A;&#x6216; 1 &#x4E2A;)&lt;columnOverride&gt; (0 &#x4E2A;&#x6216;&#x591A;&#x4E2A;)&lt;ignoreColumn&gt; (0 &#x4E2A;&#x6216;&#x591A;&#x4E2A;) &#x4E0B;&#x9762;&#x5BF9;&#x8FD9; 4 &#x4E2A;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x8BE6;&#x7EC6;&#x8BB2;&#x89E3;&#x3002; 6.10.1 &#x5143;&#x7D20; &#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x3002;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x4E3B;&#x952E;&#x7684;&#x5C5E;&#x6027;&#xFF08;identity &#x5B57;&#x6BB5;&#x6216;&#x8005; sequences &#x5E8F;&#x5217;&#xFF09;&#x3002;&#x5982;&#x679C;&#x6307;&#x5B9A;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;MBG &#x5728;&#x751F;&#x6210; insert &#x7684; SQL &#x6620;&#x5C04;&#x6587;&#x4EF6;&#x4E2D;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&lt;selectKey&gt;&#x5143;&#x7D20;&#x3002; &#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x3002; &#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x5305;&#x542B;&#x4E0B;&#x9762;&#x4E24;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; column&#xFF1A;&#x751F;&#x6210;&#x5217;&#x7684;&#x5217;&#x540D;&#x3002; sqlStatement&#xFF1A;&#x5C06;&#x8FD4;&#x56DE;&#x65B0;&#x503C;&#x7684; SQL &#x8BED;&#x53E5;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A; identity &#x5217;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x9884;&#x5B9A;&#x4E49;&#x7684;&#x7684;&#x7279;&#x6B8A;&#x503C;&#x3002;&#x9884;&#x5B9A;&#x4E49;&#x503C;&#x5982;&#x4E0B;&#xFF1A; 12345678910CloudscapeDB2DB2_MFDerbyHSQLDBInformixMySqlSqlServerSYBASEJDBC JDBC&#xFF1A;&#x8FD9;&#x4F1A;&#x914D;&#x7F6E; MBG &#x4F7F;&#x7528; MyBatis3 &#x652F;&#x6301;&#x7684; JDBC &#x6807;&#x51C6;&#x7684;&#x751F;&#x6210; key &#x6765;&#x751F;&#x6210;&#x4EE3;&#x7801;&#x3002; &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x4E8E;&#x6570;&#x636E;&#x5E93;&#x83B7;&#x53D6;&#x6807;&#x8BC6;&#x5217;&#x4E2D;&#x7684;&#x503C;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x91CD;&#x8981;&#xFF1A;&#x53EA;&#x6709;&#x5F53;&#x76EE;&#x6807;&#x8FD0;&#x884C;&#x4E3A; MyBatis3 &#x65F6;&#x624D;&#x4F1A;&#x4EA7;&#x751F;&#x6B63;&#x786E;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x5982;&#x679C;&#x4E0E; iBATIS2 &#x4E00;&#x8D77;&#x4F7F;&#x7528;&#x76EE;&#x6807;&#x8FD0;&#x884C;&#x65F6;&#x4F1A;&#x4EA7;&#x751F;&#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x7684;&#x4EE3;&#x7801;&#x3002; &#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x8FD8;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF1A; identity&#xFF1A;&#x5F53;&#x8BBE;&#x7F6E;&#x4E3A;true&#x65F6;,&#x8BE5;&#x5217;&#x4F1A;&#x88AB;&#x6807;&#x8BB0; &#x4E3A;identity &#x5217;&#xFF0C; &#x5E76;&#x4E14;&lt;selectKey&gt;&#x5143;&#x7D20;&#x4F1A;&#x88AB;&#x63D2;&#x5165;&#x5728; insert &#x540E;&#x9762;&#x3002; &#x5F53;&#x8BBE;&#x7F6E;&#x4E3A;false&#x65F6;&#xFF0C;&lt;selectKey&gt;&#x4F1A;&#x63D2;&#x5165;&#x5230; insert &#x4E4B;&#x524D;&#xFF08;&#x901A;&#x5E38;&#x662F;&#x5E8F;&#x5217;&#xFF09;&#x3002;&#x91CD;&#x8981;&#xFF1A;&#x5373;&#x4F7F;&#x60A8; type &#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x4E3A; post&#xFF0C;&#x60A8;&#x4ECD;&#x7136;&#x9700;&#x8981;&#x4E3A; identity &#x5217;&#x5C06;&#x8BE5;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x4E3A; true&#x3002; &#x8FD9;&#x5C06;&#x6807;&#x5FD7; MBG &#x4ECE;&#x63D2;&#x5165;&#x5217;&#x8868;&#x4E2D;&#x5220;&#x9664;&#x8BE5;&#x5217;&#x3002;&#x9ED8;&#x8BA4;&#x503C;&#x662F; false&#x3002; type&#xFF1A;type = post and identity = true &#x7684;&#x65F6;&#x5019;&#x751F;&#x6210;&#x7684;&#x4E2D;&#x7684; order=AFTER&#xFF0C;&#x5F53; type=pre &#x7684;&#x65F6;&#x5019;&#xFF0C;identity &#x53EA;&#x80FD;&#x4E3A; false&#xFF0C;&#x751F;&#x6210;&#x7684;&#x4E2D;&#x7684; order = BEFORE&#x3002;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x7406;&#x89E3;&#xFF0C;&#x81EA;&#x52A8;&#x589E;&#x957F;&#x7684;&#x5217;&#x53EA;&#x6709;&#x63D2;&#x5165;&#x5230;&#x6570;&#x636E;&#x5E93;&#x540E;&#x624D;&#x80FD;&#x5F97;&#x5230; ID&#xFF0C;&#x6240;&#x4EE5;&#x662F; AFTER&#xFF0C;&#x4F7F;&#x7528;&#x5E8F;&#x5217;&#x65F6;&#xFF0C;&#x53EA;&#x6709;&#x5148;&#x83B7;&#x53D6;&#x5E8F;&#x5217;&#x4E4B;&#x540E;&#xFF0C;&#x624D;&#x80FD;&#x63D2;&#x5165;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6240;&#x4EE5;&#x662F;&#xFF1A;BEFORE&#x3002; &#x5143;&#x7D20;&#x914D;&#x7F6E;&#x793A;&#x4F8B;&#x4E00;&#xFF1A; 123&lt;table tableName=&quot;user login info&quot; domainObjectName=&quot;UserLoginInfo&quot;&gt; &lt;generatedKey column=&quot;id&quot; sqlStatement=&quot;Mysql&quot;/&gt;&lt;/table&gt; &#x5BF9;&#x5E94;&#x7684;&#x751F;&#x6210;&#x7684;&#x7ED3;&#x679C;&#xFF1A; 1234567&lt;insert id=&quot;insert&quot; parameterType=&quot;test.model.UserLoginInfo&quot;&gt; &lt;selectKey keyProperty=&quot;id&quot; order=&quot;AFTER&quot; resultType=&quot;java.lang.Integer&quot;&gt; SELECT LAST_INSERT_ID() &lt;/selectKey&gt; insert into `user login info` (Id, username, logindate, loginip) values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{logindate,jdbcType=TIMESTAMP}, #{loginip,jdbcType=VARCHAR})&lt;/insert&gt; &#x5143;&#x7D20;&#x914D;&#x7F6E;&#x793A;&#x4F8B;&#x4E8C;&#xFF1A; 123&lt;table tableName=&quot;user login info&quot; domainObjectName=&quot;UserLoginInfo&quot;&gt; &lt;generatedKey column=&quot;id&quot; sqlStatement=&quot;select SEQ_ID.nextval from dual&quot;/&gt;&lt;/table&gt; &#x5BF9;&#x5E94;&#x7684;&#x751F;&#x6210;&#x7ED3;&#x679C;&#xFF1A; 1234567&lt;insert id=&quot;insert&quot; parameterType=&quot;test.model.UserLoginInfo&quot;&gt; &lt;selectKey keyProperty=&quot;id&quot; order=&quot;BEFORE&quot; resultType=&quot;java.lang.Integer&quot;&gt; select SEQ_ID.nextval from dual &lt;/selectKey&gt; insert into `user login info` (Id, username, logindate, loginip) values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{logindate,jdbcType=TIMESTAMP},#{loginip,jdbcType=VARCHAR})&lt;/insert&gt; 6.10.2 &#x5143;&#x7D20; &#x8BE5;&#x5143;&#x7D20;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#xFF0C;&#x4F7F;&#x7528;&#x8BE5;&#x5143;&#x7D20;&#x53EF;&#x4EE5;&#x5728;&#x751F;&#x6210;&#x5217;&#x4E4B;&#x524D;&#xFF0C;&#x5BF9;&#x5217;&#x8FDB;&#x884C;&#x91CD;&#x547D;&#x540D;&#x3002;&#x8FD9;&#x5BF9;&#x90A3;&#x4E9B;&#x5B58;&#x5728;&#x540C;&#x4E00;&#x524D;&#x7F00;&#x7684;&#x5B57;&#x6BB5;&#x60F3;&#x5728;&#x751F;&#x6210;&#x5C5E;&#x6027;&#x540D;&#x65F6;&#x53BB;&#x9664;&#x524D;&#x7F00;&#x7684;&#x8868;&#x975E;&#x5E38;&#x6709;&#x7528;&#x3002; &#x4F8B;&#x5982;&#x5047;&#x8BBE;&#x4E00;&#x4E2A;&#x8868;&#x5305;&#x542B;&#x4EE5;&#x4E0B;&#x7684;&#x5217;&#xFF1A; 1234CUST_BUSINESS_NAMECUST_STREET_ADDRESSCUST_CITYCUST_STATE &#x751F;&#x6210;&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;&#x540D;&#x4E2D;&#x5982;&#x679C;&#x90FD;&#x5305;&#x542B;CUST&#x7684;&#x524D;&#x7F00;&#x53EF;&#x80FD;&#x4F1A;&#x8BA9;&#x4EBA;&#x4E0D;&#x723D;&#x3002;&#x8FD9;&#x4E9B;&#x524D;&#x7F00;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;&#x5B9A;&#x4E49;&#x91CD;&#x547D;&#x540D;&#x89C4;&#x5219;: 1&lt;columnRenamingRule searchString=&quot;^CUST_&quot; replaceString=&quot;&quot; /&gt; &#x6CE8;&#x610F;&#xFF1A;&#x5728;&#x5185;&#x90E8;&#xFF0C;MBG &#x4F7F;&#x7528;java.util.regex.Matcher.replaceAll&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#x3002;&#x8BF7;&#x53C2;&#x9605;&#x6709;&#x5173;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x6587;&#x6863;&#x548C;&#x5728; Java &#x4E2D;&#x4F7F;&#x7528;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x4F8B;&#x5B50;&#x3002; &#x5F53;&lt;columnOverride&gt;&#x5339;&#x914D;&#x4E00;&#x5217;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#xFF08;&lt;columnRenamingRule&gt;&#xFF09;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#x3002;&lt;columnOverride&gt;&#x4F18;&#x5148;&#x4E8E;&#x91CD;&#x547D;&#x540D;&#x7684;&#x89C4;&#x5219;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709;&#x4E00;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; searchString&#xFF1A;&#x5B9A;&#x4E49;&#x5C06;&#x88AB;&#x66FF;&#x6362;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709;&#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF1A; replaceString&#xFF1A;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x66FF;&#x6362;&#x641C;&#x7D22;&#x5B57;&#x7B26;&#x4E32;&#x5217;&#x6BCF;&#x4E00;&#x4E2A;&#x5339;&#x914D;&#x9879;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x5173;&#x4E8E;&lt;table&gt;&#x7684;&lt;property&gt;&#x5C5E;&#x6027;useActualColumnNames&#x5BF9;&#x6B64;&#x7684;&#x5F71;&#x54CD;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x5B8C;&#x6574;&#x6587;&#x6863;&#x3002; 6.10.3 &#x5143;&#x7D20; &#x8BE5;&#x5143;&#x7D20;&#x53EF;&#x9009;&#xFF0C;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x591A;&#x4E2A;&#x3002;&#x8BE5;&#x5143;&#x7D20;&#x4ECE;&#x5C06;&#x67D0;&#x4E9B;&#x5C5E;&#x6027;&#x9ED8;&#x8BA4;&#x8BA1;&#x7B97;&#x7684;&#x503C;&#x66F4;&#x6539;&#x4E3A;&#x6307;&#x5B9A;&#x7684;&#x503C;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709;&#x4E00;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; column&#xFF1A;&#x8981;&#x91CD;&#x5199;&#x7684;&#x5217;&#x540D;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709;&#x591A;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF1A; property&#xFF1A;&#x8981;&#x4F7F;&#x7528;&#x7684; Java &#x5C5E;&#x6027;&#x7684;&#x540D;&#x79F0;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#xFF0C;MBG &#x4F1A;&#x6839;&#x636E;&#x5217;&#x540D;&#x751F;&#x6210;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x8868;&#x7684;&#x4E00;&#x5217;&#x540D;&#x4E3A;STRT_DTE&#xFF0C;MBG&#x4F1A;&#x6839;&#x636E; &#x7684; useActualColumnNames &#x5C5E;&#x6027;&#x751F;&#x6210; STRT_DTE &#x6216; strtDte&#x3002; javaType&#xFF1A;&#x8BE5;&#x5217;&#x5C5E;&#x6027;&#x503C;&#x4E3A;&#x5B8C;&#x5168;&#x9650;&#x5B9A;&#x7684; Java &#x7C7B;&#x578B;&#x3002;&#x5982;&#x679C;&#x9700;&#x8981;&#xFF0C;&#x8FD9;&#x53EF;&#x4EE5;&#x8986;&#x76D6;&#x7531;JavaTypeResolver&#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x7C7B;&#x578B;&#x3002; &#x5BF9;&#x67D0;&#x4E9B;&#x6570;&#x636E;&#x5E93;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x662F;&#x5FC5;&#x8981;&#x7684;&#x7528;&#x6765;&#x5904;&#x7406;&#x201C;&#x5947;&#x602A;&#x7684;&#x201D;&#x6570;&#x636E;&#x5E93;&#x7C7B;&#x578B;&#xFF08;&#x4F8B;&#x5982; MySql &#x7684; unsigned bigint &#x7C7B;&#x578B;&#x9700;&#x8981;&#x6620;&#x5C04;&#x4E3A;java.lang.Object)&#x3002; jdbcType&#xFF1A;&#x8BE5;&#x5217;&#x7684; JDBC &#x7C7B;&#x578B;&#xFF08;INTEGER, DECIMAL, NUMERIC, VARCHAR &#x7B49;&#x7B49;&#xFF09;&#x3002; &#x5982;&#x679C;&#x9700;&#x8981;&#xFF0C;&#x8FD9;&#x53EF;&#x4EE5;&#x8986;&#x76D6;&#x7531; JavaTypeResolver &#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x7C7B;&#x578B;&#x3002; &#x5BF9;&#x67D0;&#x4E9B;&#x6570;&#x636E;&#x5E93;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x662F;&#x5FC5;&#x8981;&#x7684;&#x7528;&#x6765;&#x5904;&#x7406;&#x602A;&#x5F02;&#x7684; JDBC &#x9A71;&#x52A8; (&#x4F8B;&#x5982; DB2 &#x7684;LONGVARCHAR &#x7C7B;&#x578B;&#x9700;&#x8981;&#x4E3A; iBATIS &#x6620;&#x5C04;&#x4E3A; VARCHAR)&#x3002; typeHandler&#xFF1A;&#x7528;&#x6237;&#x5B9A;&#x4E49;&#x7684;&#x9700;&#x8981;&#x7528;&#x6765;&#x5904;&#x7406;&#x8FD9;&#x5217;&#x7684;&#x7C7B;&#x578B;&#x5904;&#x7406;&#x5668;&#x3002;&#x5B83;&#x5FC5;&#x987B;&#x662F;&#x4E00;&#x4E2A;&#x7EE7;&#x627F; iBATIS &#x7684; TypeHandler &#x7C7B;&#x6216; TypeHandlerCallback &#x63A5;&#x53E3;&#xFF08;&#x8BE5;&#x63A5;&#x53E3;&#x5F88;&#x5BB9;&#x6613;&#x7EE7;&#x627F;&#xFF09;&#x7684;&#x5168;&#x9650;&#x5B9A;&#x7684;&#x7C7B;&#x540D;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x6216;&#x8005;&#x662F;&#x7A7A;&#x767D;&#xFF0C;iBATIS&#x4F1A;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x7C7B;&#x578B;&#x5904;&#x7406;&#x5668;&#x6765;&#x5904;&#x7406;&#x7C7B;&#x578B;&#x3002;&#x91CD;&#x8981;&#xFF1A;MBG &#x4E0D;&#x4F1A;&#x6821;&#x9A8C;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x5904;&#x7406;&#x5668;&#x662F;&#x5426;&#x5B58;&#x5728;&#x6216;&#x8005;&#x53EF;&#x7528;&#x3002; MGB &#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x5C06;&#x8FD9;&#x4E2A;&#x503C;&#x63D2;&#x5165;&#x5230;&#x751F;&#x6210;&#x7684; SQL &#x6620;&#x5C04;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x3002; delimitedColumnName&#xFF1A;&#x6307;&#x5B9A;&#x662F;&#x5426;&#x5E94;&#x5728;&#x751F;&#x6210;&#x7684; SQL &#x7684;&#x5217;&#x540D;&#x79F0;&#x4E0A;&#x589E;&#x52A0;&#x5206;&#x9694;&#x7B26;&#x3002; &#x5982;&#x679C;&#x5217;&#x7684;&#x540D;&#x79F0;&#x4E2D;&#x5305;&#x542B;&#x7A7A;&#x683C;&#xFF0C;MGB &#x4F1A;&#x81EA;&#x52A8;&#x6DFB;&#x52A0;&#x5206;&#x9694;&#x7B26;&#xFF0C; &#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x91CD;&#x5199;&#x53EA;&#x6709;&#x5F53;&#x5217;&#x540D;&#x9700;&#x8981;&#x5F3A;&#x5236;&#x4E3A;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x540D;&#x5B57;&#x6216;&#x8005;&#x5217;&#x540D;&#x662F;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x4FDD;&#x7559;&#x5B57;&#x65F6;&#x662F;&#x5FC5;&#x8981;&#x7684;&#x3002; &lt;columnOverride&gt; &#x5143;&#x7D20;&#x914D;&#x7F6E;&#x793A;&#x4F8B;&#xFF1A; 123&lt;table schema=&quot;DB2ADMIN&quot; tableName=&quot;ALLTYPES&quot; &gt; &lt;columnOverride column=&quot;LONG_VARCHAR_FIELD&quot; javaType=&quot;java.lang.String&quot; jdbcType=&quot;VARCHAR&quot; /&gt;&lt;/table&gt; 6.10.4 &#x5143;&#x7D20; &#x8BE5;&#x5143;&#x7D20;&#x53EF;&#x9009;&#xFF0C;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x591A;&#x4E2A;&#x3002;&#x8BE5;&#x5143;&#x7D20;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5C4F;&#x853D;&#x4E0D;&#x9700;&#x8981;&#x751F;&#x6210;&#x7684;&#x5217;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x6709;&#x4E00;&#x4E2A;&#x5FC5;&#x9009;&#x5C5E;&#x6027;&#xFF1A; column&#xFF1A;&#x8981;&#x5FFD;&#x7565;&#x7684;&#x5217;&#x540D;&#x3002; &#x8BE5;&#x5143;&#x7D20;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#xFF1A; delimitedColumnName&#xFF1A;&#x5339;&#x914D;&#x5217;&#x540D;&#x7684;&#x65F6;&#x5019;&#x662F;&#x5426;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x3002;&#x5982;&#x679C;&#x4E3A; true &#x5219;&#x533A;&#x5206;&#x3002;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;false&#xFF0C;&#x4E0D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x3002; &#x53C2;&#x8003;&#x8D44;&#x6599;&#xFF1A;MyBatis Generator &#x8BE6;&#x89E3; MyBatis GeneratorXML Configuration File Reference MyBatis Generator XML &#x914D;&#x7F6E;&#x53C2;&#x8003;(&#x4E2D;&#x6587;&#x6587;&#x6863;&#x7F51;&#x5740;&#x5931;&#x6548;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x770B;&#x4E0A;&#x9762;&#x5B98;&#x65B9;&#x6587;&#x6863;) &#x6269;&#x5C55; MyBatis Generator &#x4ECE;&#x6E90;&#x7801;&#x6784;&#x5EFA; Mybatis Generator&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x81EA;&#x52A8;&#x751F;&#x6210; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Mybatis</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深入理解计算机系统 | 学习笔记（四）]]></title>
    <url>%2F2018%2F10%2F22%2F013%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x524D;&#x8A00;&#x73B0;&#x4EE3;&#x8BA1;&#x7B97;&#x673A;&#x5B58;&#x50A8;&#x548C;&#x5904;&#x7406;&#x7684;&#x4FE1;&#x606F;&#x4EE5;&#x4E8C;&#x503C;&#x4FE1;&#x53F7;&#x8868;&#x793A;&#xFF0C;&#x5373;&#x7531;&#x6570;&#x5B66;&#x4E0A;&#x7684;&#x6570;&#x5B57; 0 &#x548C; 1 &#x5E76;&#x4EE5;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x5F62;&#x5F0F;&#x8868;&#x793A;&#x6570;&#x5B57;&#x4FE1;&#x606F;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x4E13;&#x4E1A;&#x4E2D;&#x5BF9;&#x5176;&#x6709;&#x4E2A;&#x4E13;&#x4E1A;&#x7684;&#x672F;&#x8BED;&#xFF1A;&#x4F4D;&#xFF08;bit&#xFF09;&#x3002; &#x5341;&#x8FDB;&#x5236;&#x662F;&#x9022;&#x5341;&#x8FDB;&#x4E00;&#xFF0C;&#x4E8C;&#x8FDB;&#x5236;&#x5219;&#x662F;&#x9022;&#x4E8C;&#x8FDB;&#x4E00;&#xFF0C;&#x516B;&#x8FDB;&#x5236;&#x662F;&#x9022;&#x516B;&#x8FDB;&#x4E00;&#xFF0C;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x662F;&#x9022;&#x5341;&#x516D;&#x8FDB;&#x4E00;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x6210;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x4FE1;&#x606F;&#x5B58;&#x50A8;&#x7684;&#x57FA;&#x7840;&#x673A;&#x5236;&#xFF1F;&#x56E0;&#x4E3A;&#x4E8C;&#x503C;&#x4FE1;&#x53F7;&#x80FD;&#x591F;&#x5F88;&#x5BB9;&#x6613;&#x5730;&#x88AB;&#x8868;&#x793A;&#x3001;&#x5B58;&#x50A8;&#x548C;&#x4F20;&#x8F93;&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A;&#x7A7F;&#x5B54;&#x5361;&#x7247;&#x4E0A;&#x6709;&#x6D1E;&#x6216;&#x65E0;&#x6D1E;&#x3001;&#x5BFC;&#x7EBF;&#x4E0A;&#x7684;&#x9AD8;&#x7535;&#x538B;&#x6216;&#x4F4E;&#x7535;&#x538B;&#xFF0C;&#x6216;&#x8005;&#x987A;&#x65F6;&#x9488;&#x6216;&#x9006;&#x65F6;&#x9488;&#x7684;&#x78C1;&#x573A;&#x3002;&#x53E6;&#x5916;&#x4ECE;&#x6280;&#x672F;&#x652F;&#x6301;&#x7684;&#x6210;&#x672C;&#x4E0A;&#xFF0C;&#x786C;&#x4EF6;&#x5904;&#x7406;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x80FD;&#x529B;&#x6BD4;&#x5176;&#x4ED6;&#x8FDB;&#x5236;&#x7B80;&#x5355;&#x53EF;&#x9760;&#x3002; &#x5355;&#x4E2A;&#x7684;&#x4F4D;&#x6CA1;&#x6709;&#x592A;&#x591A;&#x7684;&#x5B9E;&#x9645;&#x4F5C;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x628A; n &#x591A;&#x7684;&#x4F4D;&#x8FDB;&#x884C;&#x7EC4;&#x5408;&#x6392;&#x5217;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;&#x4EFB;&#x4F55;&#x6709;&#x9650;&#x96C6;&#x5408;&#x7684;&#x5143;&#x7D20;&#x4FE1;&#x606F;&#x3002; &#x4E0A;&#x56FE;&#x4E2D;&#x591A;&#x4E2A;&#x4F4D;&#x8FDB;&#x884C;&#x7EC4;&#x5408;&#x7684;&#x53EF;&#x80FD;&#x503C;&#x4FE1;&#x606F;&#x8D4B;&#x4E88;&#x4E00;&#x5B9A;&#x7684;&#x89E3;&#x91CA;&#x5C31;&#x80FD;&#x8FDB;&#x884C;&#x6570;&#x5B66;&#x4E0A;&#x7684;&#x6570;&#x503C;&#x8868;&#x793A;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x4E09;&#x79CD;&#x6700;&#x91CD;&#x8981;&#x7684;&#x6570;&#x5B57;&#x8868;&#x793A;&#xFF1A;&#x65E0;&#x7B26;&#x53F7;&#xFF08;unsigned&#xFF09;&#x3001;&#x8865;&#x7801;&#xFF08;two&#x2019;s-complement&#xFF09;&#x3001;&#x6D6E;&#x70B9;&#x6570;&#xFF08;floating-point&#xFF09;&#x3002; &#x65E0;&#x7B26;&#x53F7;&#xFF08;unsigned&#xFF09;&#x7F16;&#x7801;&#x57FA;&#x4E8E;&#x4F20;&#x7EDF;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x6CD5;&#xFF0C;&#x8868;&#x793A;&#x5927;&#x4E8E;&#x6216;&#x8005;&#x7B49;&#x4E8E;&#x96F6;&#x7684;&#x6570;&#x5B57;&#x3002;&#x8865;&#x7801;&#xFF08;two&#x2019;s-complement&#xFF09;&#x7F16;&#x7801;&#x662F;&#x8868;&#x793A;&#x6709;&#x7B26;&#x53F7;&#x6574;&#x6570;&#x7684;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6709;&#x7B26;&#x53F7;&#x6574;&#x6570;&#x5C31;&#x662F;&#x53EF;&#x4EE5;&#x4E3A;&#x6B63;&#x6216;&#x8005;&#x4E3A;&#x8D1F;&#x7684;&#x6570;&#x5B57;&#x3002;&#x6D6E;&#x70B9;&#x6570;&#xFF08;floating-point&#xFF09;&#x7F16;&#x7801;&#x662F;&#x8868;&#x793A;&#x5B9E;&#x6570;&#x7684;&#x79D1;&#x5B66;&#x8BB0;&#x6570;&#x6CD5;&#x7684;&#x4EE5;&#x4E8C;&#x4E3A;&#x57FA;&#x6570;&#x7684;&#x7248;&#x672C;&#x3002; &#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x8868;&#x793A;&#x6CD5;&#x662F;&#x7528;&#x6709;&#x9650;&#x6570;&#x91CF;&#x7684;&#x4F4D;&#x6765;&#x5BF9;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x7F16;&#x7801;&#xFF0C;&#x5F53;&#x7ED3;&#x679C;&#x592A;&#x5927;&#x4EE5;&#x81F3;&#x4E0D;&#x80FD;&#x8868;&#x793A;&#x65F6;&#xFF08;&#x6709;&#x9650;&#x7684;&#x4F4D;&#x88C5;&#x4E0D;&#x4E0B;&#x8981;&#x8868;&#x793A;&#x7684;&#x6570;&#x5B57;&#x65F6;&#xFF09;&#xFF0C;&#x67D0;&#x4E9B;&#x8FD0;&#x7B97;&#x5C31;&#x4F1A;&#x6EA2;&#x51FA;&#xFF08;overflow&#xFF09;&#x3002; &#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x6765;&#x8BF4;&#xFF0C;&#x7531;&#x4E8E;&#x6570;&#x503C;&#x8303;&#x56F4;&#x53EF;&#x80FD;&#x6709;&#x6240;&#x4E0D;&#x540C;&#xFF0C;&#x56E0;&#x6B64;&#x638C;&#x63E1;&#x4FE1;&#x606F;&#x76F8;&#x5173;&#x7684;&#x5185;&#x5BB9;&#x5BF9;&#x4E8E;&#x5199;&#x51FA;&#x8DE8;&#x5E73;&#x53F0;&#x7684;&#x7A0B;&#x5E8F;&#x6765;&#x8BB2;&#x4E5F;&#x662F;&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#x3002; &#x4E8C;&#x3001;&#x4FE1;&#x606F;&#x5B58;&#x50A8;&#x7EC4;&#x5408;&#x7684;&#x4F4D;&#x80FD;&#x591F;&#x8868;&#x793A;&#x66F4;&#x591A;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x56E0;&#x6B64;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x4FE1;&#x606F;&#x5C31;&#x5B58;&#x50A8;&#x5728;&#x8FD9;&#x4E9B;&#x4F4D;&#x4E2D;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x8BA1;&#x7B97;&#x673A;&#x4F7F;&#x7528; 8 &#x4F4D;&#x7684;&#x5757;&#xFF0C;&#x6216;&#x8005;&#x5B57;&#x8282;&#xFF08;byte&#xFF09;&#xFF0C;&#x4F5C;&#x4E3A;&#x6700;&#x5C0F;&#x7684;&#x53EF;&#x5BFB;&#x5740;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x5355;&#x4F4D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5728;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#x8BBF;&#x95EE;&#x5355;&#x72EC;&#x7684;&#x4F4D;&#x3002; &#x673A;&#x5668;&#x7EA7;&#x7A0B;&#x5E8F;&#x5C06;&#x5B58;&#x50A8;&#x5668;&#x89C6;&#x4E3A;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5927;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x79F0;&#x4E3A;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#xFF08;virtual memory&#xFF09;&#x3002;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x90FD;&#x7531;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x6570;&#x5B57;&#x6765;&#x6807;&#x8BC6;&#xFF0C;&#x79F0;&#x4E3A;&#x5B83;&#x7684;&#x5730;&#x5740;&#xFF08;address&#xFF09;&#xFF0C;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x5730;&#x5740;&#x7684;&#x96C6;&#x5408;&#x79F0;&#x4E3A;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF08;virtual address space&#xFF09;&#x3002; &#x7A0B;&#x5E8F;&#x8DD1;&#x5728;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x4E0A;&#xFF0C;&#x5C31;&#x53EA;&#x9700;&#x8981;&#x5229;&#x7528;&#x597D;&#x81EA;&#x5DF1;&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF08;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5206;&#x914D;&#x7684;&#xFF09;&#xFF0C;&#x800C;&#x65E0;&#x9700;&#x5173;&#x6CE8;&#x786C;&#x4EF6;&#x662F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x4F4D;&#x4FE1;&#x606F;&#x7684;&#x5B58;&#x50A8;&#xFF0C;&#x56E0;&#x6B64;&#x6709;&#x5F3A;&#x5927;&#x5E9E;&#x6742;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5B8C;&#x6210;&#x4E86;&#x4E0E;&#x786C;&#x4EF6;&#x7684;&#x5B9E;&#x73B0;&#x3002; &#x5177;&#x4F53;&#x6765;&#x8BF4;&#xFF0C;&#x5C31;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x548C;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5C06;&#x5B58;&#x50A8;&#x5668;&#x7A7A;&#x95F4;&#x5212;&#x5206;&#x4E3A;&#x66F4;&#x53EF;&#x7BA1;&#x7406;&#x7684;&#x5355;&#x5143;&#xFF0C;&#x4EE5;&#x5B58;&#x653E;&#x4E0D;&#x540C;&#x7684;&#x7A0B;&#x5E8F;&#x5BF9;&#x8C61;&#xFF08;program object&#xFF09;&#xFF0C;&#x5373;&#x7A0B;&#x5E8F;&#x6570;&#x636E;&#x3001;&#x6307;&#x4EE4;&#x548C;&#x63A7;&#x5236;&#x4FE1;&#x606F;&#x3002;&#x5E76;&#x53EF;&#x4EE5;&#x7528;&#x5404;&#x79CD;&#x673A;&#x5236;&#x6765;&#x5206;&#x914D;&#x548C;&#x7BA1;&#x7406;&#x7A0B;&#x5E8F;&#x4E0D;&#x540C;&#x90E8;&#x5206;&#x7684;&#x5B58;&#x50A8;&#xFF0C;&#x8FD9;&#x79CD;&#x7BA1;&#x7406;&#x5B8C;&#x5168;&#x662F;&#x5728;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x91CC;&#x5B8C;&#x6210;&#x7684;&#x3002; &#x5341;&#x516D;&#x8FDB;&#x5236; &#x5341;&#x8FDB;&#x5236;&#x662F;&#x4F7F;&#x7528; 0 - 9 &#x7684;&#x81EA;&#x7136;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x8868;&#x793A;&#xFF0C;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x7684;&#x5219;&#x662F;&#x4F7F;&#x7528; 0 - 15 &#x7684;&#x7B26;&#x53F7;&#x6765;&#x8868;&#x793A;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x5728;&#x4E8E;&#xFF0C;&#x4E00;&#x4E2A;&#x4F4D;&#x53EA;&#x80FD;&#x5B58;&#x50A8;&#x4E00;&#x4E2A;&#x7B26;&#x53F7;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982; 10 &#x8FD9;&#x6837;&#x7684;&#x5341;&#x8FDB;&#x5236;&#x6570;&#x5B57;&#x9700;&#x8981;&#x4E24;&#x4F4D;&#x6765;&#x5B58;&#x50A8;&#x8868;&#x793A;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x7B26;&#x53F7;&#x66FF;&#x4EE3;&#x4E24;&#x4F4D;&#x6570;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x79D1;&#x5B66;&#x5BB6;&#x4EEC;&#x89C4;&#x5B9A; 10 - 15 &#x5BF9;&#x5E94;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x7684; A - F&#x3002;&#x5728; C &#x8BED;&#x8A00;&#x4E2D;&#x4E00;&#x822C;&#x662F;&#x4F7F;&#x7528;&#x201C;0x&#x201D;&#xFF08;&#x6570;&#x5B57; 0 &#x548C;&#x5B57;&#x6BCD; x )&#x5F00;&#x5934;&#x8868;&#x793A;&#x7684;&#x6570;&#x5B57;&#x4E3A;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x6570;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4F7F;&#x7528;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x5462;&#xFF0C;&#x56E0;&#x4E3A;&#x8BA1;&#x7B97;&#x673A;&#x5728;&#x8BBE;&#x8BA1;&#x4E4B;&#x521D;&#x5C31;&#x662F;&#x4EE5; 8 &#x4F4D;&#x4E3A;&#x4FE1;&#x606F;&#x5B58;&#x50A8;&#x5355;&#x5143;&#xFF0C;&#x4F7F;&#x7528;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x66F4;&#x5C0F;&#x7684;&#x5B58;&#x50A8;&#x5355;&#x4F4D;&#x4E2D;&#x8868;&#x8FBE;&#x66F4;&#x591A;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x4E0B;&#x56FE;&#x4E2D;&#x6BCF;&#x4E2A;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x6570;&#x5B57;&#x90FD;&#x5BF9; 16 &#x4E2A;&#x503C;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x8FDB;&#x884C;&#x4E86;&#x7F16;&#x7801;&#x3002; &#x5B57; &#x6BCF;&#x53F0;&#x8BA1;&#x7B97;&#x673A;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x5B57;&#x957F;&#xFF08;word size&#xFF09;&#xFF0C;&#x6307;&#x660E;&#x6574;&#x6570;&#x548C;&#x6307;&#x9488;&#x6570;&#x636E;&#x7684;&#x6807;&#x79F0;&#x5927;&#x5C0F;&#xFF08;nominal size&#xFF09;&#x3002;&#x56E0;&#x4E3A;&#x865A;&#x62DF;&#x5730;&#x5740;&#x662F;&#x4EE5;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x5B57;&#x6765;&#x7F16;&#x7801;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x5B57;&#x957F;&#x51B3;&#x5B9A;&#x4E86;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7684;&#x6700;&#x5927;&#x5927;&#x5C0F;&#x3002; &#x4E09;&#x3001;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x548C;&#x5927;&#x5C0F;&#x8BB2;&#x8FF0;&#x4E86;&#x4E8C;&#x8FDB;&#x5236;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x6574;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x8BA1;&#x7B97;&#x673A;&#x64CD;&#x4F5C;&#x5C0F;&#x6570;&#x64CD;&#x4F5C;&#x6216;&#x8005;&#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x5C0F;&#x6570;&#xFF0C;&#x9700;&#x8981;&#x5982;&#x4F55;&#x8868;&#x793A;&#x662F;&#x4E00;&#x4E2A;&#x9700;&#x8981;&#x503C;&#x5F97;&#x7814;&#x7A76;&#x7684;&#xFF0C;&#x540C;&#x65F6;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x90FD;&#x662F; 0 &#x548C; 1 &#x7684;&#x4F4D;&#x4FE1;&#x606F;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x4ECE;&#x54EA;&#x91CC;&#x5F00;&#x59CB;&#x5230;&#x54EA;&#x91CC;&#x7ED3;&#x675F;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x5462;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x5F15;&#x51FA;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x548C;&#x5BF9;&#x5E94;&#x7684;&#x6240;&#x5360;&#x4F4D;&#x6570;&#x5927;&#x5C0F;&#x3002; &#x56DB;&#x3001;&#x5BFB;&#x5740;&#x548C;&#x5B57;&#x8282;&#x987A;&#x5E8F;&#x4E0A;&#x8FF0;&#x5DF2;&#x7ECF;&#x5F97;&#x77E5;&#xFF0C;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x7531;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5206;&#x914D;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x4F9B;&#x81EA;&#x5DF1;&#x81EA;&#x7531;&#x4F7F;&#x7528;&#xFF0C;&#x90A3;&#x4E48;&#x7A0B;&#x5E8F;&#x603B;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x6765;&#x7EF4;&#x62A4;&#x6240;&#x6709;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E14;&#x80FD;&#x591F;&#x6309;&#x7167;&#x4E0E;&#x9884;&#x671F;&#x6548;&#x679C;&#x4E00;&#x81F4;&#x7684;&#x987A;&#x5E8F;&#x8BFB;&#x53D6;&#x5B57;&#x8282;&#x4FE1;&#x606F;&#x3002; &#x5BF9;&#x4E8E;&#x8DE8;&#x8D8A;&#x591A;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x7A0B;&#x5E8F;&#x5BF9;&#x8C61;&#xFF08;&#x7A0B;&#x5E8F;&#x5BF9;&#x8C61;&#x6307;&#x6307;&#x4EE4;&#x3001;&#x6570;&#x636E;&#x6216;&#x8005;&#x63A7;&#x5236;&#x4FE1;&#x606F;&#x7B49;&#xFF0C;&#x662F;&#x7A0B;&#x5E8F;&#x5F53;&#x4E2D;&#x5BF9;&#x8C61;&#x7684;&#x7EDF;&#x79F0;&#xFF09;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5236;&#x5B9A;&#x4E24;&#x4E2A;&#x89C4;&#x5219;&#x624D;&#x80FD;&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x5BF9;&#x8C61;&#x7684;&#x503C;&#xFF1A;&#x5BF9;&#x8C61;&#x7684;&#x5730;&#x5740;&#x548C;&#x5BF9;&#x8C61;&#x8868;&#x793A;&#x7684;&#x5B57;&#x8282;&#x987A;&#x5E8F;&#x3002; &#x5BF9;&#x8C61;&#x5730;&#x5740; &#x5728;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;&#x673A;&#x5668;&#x4E0A;&#xFF0C;&#x591A;&#x5B57;&#x8282;&#x5BF9;&#x8C61;&#x90FD;&#x88AB;&#x5B58;&#x50A8;&#x4E3A;&#x8FDE;&#x7EED;&#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#xFF0C;&#x5BF9;&#x8C61;&#x7684;&#x5730;&#x5740;&#x4E3A;&#x6240;&#x4F7F;&#x7528;&#x5B57;&#x8282;&#x4E2D;&#x6700;&#x5C0F;&#x7684;&#x5730;&#x5740;&#x3002;&#x5047;&#x8BBE;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A; int &#x7684;&#x53D8;&#x91CF; a &#x7684;&#x5730;&#x5740;&#x4E3A; 0x100&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5730;&#x5740;&#x8868;&#x8FBE;&#x5F0F; &amp;a &#x7684;&#x503C;&#x4E3A; 0x100&#x3002;&#x90A3;&#x4E48;&#xFF0C;a &#x7684; 4 &#x4E2A;&#x5B57;&#x8282;&#x5C06;&#x88AB;&#x5B58;&#x50A8;&#x5728;&#x5B58;&#x50A8;&#x5668;&#x7684; 0x100&#x3001;0x101&#x3001;0x102 &#x548C; 0x103 &#x4F4D;&#x7F6E;&#x3002; &#x5B57;&#x8282;&#x987A;&#x5E8F; &#x67D0;&#x4E9B;&#x673A;&#x5668;&#x9009;&#x62E9;&#x5728;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#x6309;&#x7167;&#x4ECE;&#x6700;&#x4F4E;&#x6709;&#x6548;&#x5B57;&#x8282;&#x5230;&#x6700;&#x9AD8;&#x6709;&#x6548;&#x5B57;&#x8282;&#x7684;&#x987A;&#x5E8F;&#x5B58;&#x50A8;&#x5BF9;&#x8C61;&#xFF0C;&#x5373;&#x6700;&#x4F4E;&#x6709;&#x6548;&#x5B57;&#x8282;&#x5728;&#x6700;&#x524D;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x79F0;&#x4E3A;&#x5C0F;&#x7AEF;&#x6CD5;&#xFF08;little endian&#xFF09;&#x3002; &#x800C;&#x53E6;&#x4E00;&#x4E9B;&#x673A;&#x5668;&#x5219;&#x6309;&#x7167;&#x4ECE;&#x6700;&#x9AD8;&#x6709;&#x6548;&#x5B57;&#x8282;&#x5230;&#x6700;&#x4F4E;&#x6709;&#x6548;&#x5B57;&#x8282;&#x7684;&#x987A;&#x5E8F;&#x5B58;&#x50A8;&#xFF0C;&#x6700;&#x9AD8;&#x6709;&#x6548;&#x5B57;&#x8282;&#x5728;&#x6700;&#x524D;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x79F0;&#x4E3A;&#x5927;&#x7AEF;&#x6CD5;&#xFF08;big endian&#xFF09;&#x3002; &#x6709;&#x4E9B;&#x673A;&#x5668;&#x6216;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x652F;&#x6301;&#x5927;&#x7AEF;&#x6CD5;&#xFF0C;&#x6709;&#x4E9B;&#x652F;&#x6301;&#x5C0F;&#x7AEF;&#x6CD5;&#xFF0C;&#x8FD8;&#x6709;&#x4E9B;&#x5904;&#x7406;&#x5668;&#x80FD;&#x591F;&#x652F;&#x6301;&#x53CC;&#x7AEF;&#x8868;&#x793A;&#xFF0C;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5728;&#x4E0D;&#x540C;&#x8BA1;&#x7B97;&#x673A;&#x4E4B;&#x95F4;&#x8FDB;&#x884C;&#x4FE1;&#x606F;&#x4F20;&#x9012;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5728;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x6570;&#x636E;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5FC5;&#x987B;&#x9075;&#x5FAA;&#x5168;&#x7403;&#x901A;&#x7528;&#x7684;&#x5B57;&#x8282;&#x987A;&#x5E8F;&#x6807;&#x51C6;&#xFF0C;&#x624D;&#x80FD;&#x4F7F;&#x5F97;&#x4FE1;&#x606F;&#x4E92;&#x8054;&#xFF0C;&#x4F46;&#x662F;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x4E0D;&#x9700;&#x8981;&#x8003;&#x8651;&#x5927;&#x5C0F;&#x7AEF;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;&#x7F16;&#x8BD1;&#x5668;&#x5DF2;&#x7ECF;&#x5E2E;&#x6211;&#x4EEC;&#x505A;&#x4E86;&#x5B57;&#x8282;&#x987A;&#x5E8F;&#x81EA;&#x9002;&#x5E94;&#x3002; &#x53C2;&#x6570; 12345 &#x7684;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x4E3A; 0x00003039&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5728; Linux 32&#x3001;Windows &#x548C; Linux 64 &#x4E0A;&#xFF0C;&#x6700;&#x4F4E;&#x6709;&#x6548;&#x5B57;&#x8282;&#x503C; 0x39 &#x6700;&#x5148;&#x8F93;&#x51FA;&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;&#x5B83;&#x4EEC;&#x662F;&#x5C0F;&#x7AEF;&#x6CD5;&#x673A;&#x5668;&#xFF1B;&#x800C;&#x5728; Sun &#x4E0A;&#x5374;&#x6700;&#x540E;&#x8F93;&#x51FA;&#xFF0C;&#x8FD9;&#x8BF4;&#x660E; Sun &#x662F;&#x5927;&#x7AEF;&#x6CD5;&#x673A;&#x5668;&#x3002; &#x4E94;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x4EE3;&#x7801;&#x8868;&#x793A;&#x8BA1;&#x7B97;&#x673A;&#x5982;&#x4F55;&#x901A;&#x8FC7;&#x4F4D;&#x4FE1;&#x606F;&#x6765;&#x8868;&#x793A;&#x5B57;&#x7B26;&#x4E32;&#x4E5F;&#x662F;&#x503C;&#x5F97;&#x7814;&#x7A76;&#xFF0C;&#x5728; C &#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x7F16;&#x7801;&#x662F;&#x4EE5; NULL &#x5B57;&#x7B26;&#x7ED3;&#x5C3E;&#x7684;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#xFF0C;&#x56E0;&#x6B64;&#x5176;&#x5B57;&#x7B26;&#x4E32;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x8868;&#x793A;&#x7684;&#x672C;&#x8D28;&#x5C31;&#x662F;&#x4EE5; 0 &#x7ED3;&#x5C3E;&#x7684;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x3002;&#x5982;&#x4F55;&#x5C06;&#x6570;&#x5B57;&#x7F16;&#x7801;&#x6210;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x5B57;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x56FD;&#x9645;&#x6807;&#x51C6;&#xFF0C;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x5C31;&#x662F; ASCII &#x7801;&#x7F16;&#x7801;&#x89C4;&#x5219;&#x3002; &#x4EE5;&#x5B57;&#x7B26;&#x4E32;&quot;123456&quot;&#x4E3A;&#x4F8B;&#xFF0C;&#x901A;&#x8FC7; C &#x8BED;&#x8A00;&#x8F6C;&#x7801;&#x5F97;&#x5230;&#xFF1A; 131 32 33 34 35 36 00 &#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5305;&#x542B;&#x7684;&#x6570;&#x5B57; x &#x5728;&#x7ECF;&#x8FC7; C &#x8BED;&#x8A00;&#x7A0B;&#x5E8F;&#x8F6C;&#x6362;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x6570;&#x4E3A;&#xFF1A;0x3x&#xFF0C;&#x5E76;&#x4E14;&#x6700;&#x7EC8;&#x7ED3;&#x5C3E;&#x662F;&#xFF1A;0x00&#x3002; &#x5728;&#x4F7F;&#x7528; ASCII &#x7801;&#x4F5C;&#x4E3A;&#x5B57;&#x7B26;&#x7801;&#x7684;&#x4EFB;&#x4F55;&#x7CFB;&#x7EDF;&#x4E0A;&#x90FD;&#x5C06;&#x5F97;&#x5230;&#x76F8;&#x540C;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x4E0E;&#x5B57;&#x8282;&#x987A;&#x5E8F;&#x548C;&#x5B57;&#x5927;&#x5C0F;&#x89C4;&#x5219;&#x65E0;&#x5173;&#x3002; &#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E0A;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#x4E0D;&#x4E00;&#x6837;&#xFF1A; 123int sum(int x, int y) { return x + y;} &#x5728;&#x4E0D;&#x540C;&#x673A;&#x5668;&#x4E0A;&#x7F16;&#x8BD1;&#x540E;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x673A;&#x5668;&#x4EE3;&#x7801;&#x4E0D;&#x4E00;&#x6837;&#xFF1A; 1234Linux 32: 55 89 e5 8b 45 0c 03 45 08 c9 c3Windows: 55 89 e5 8b 45 0c 03 45 08 5d c3Sun: 81 c3 e0 08 90 02 00 09Linux 64: 55 48 89 e5 89 7d fc 89 75 f8 03 45 fc c9 c3 &#x56E0;&#x6B64;&#xFF0C;&#x6E90;&#x4EE3;&#x7801;&#x4E00;&#x6837;&#x7684;&#x6587;&#x4EF6;&#x5728;&#x4E0D;&#x540C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E0A;&#x7F16;&#x8BD1;&#x4E4B;&#x540E;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x4EE3;&#x7801;&#x662F;&#x4E0D;&#x517C;&#x5BB9;&#x7684;&#x3002; &#x516D;&#x3001;&#x5C0F;&#x7ED3;&#x8BA1;&#x7B97;&#x673A;&#x4E0E;&#x786C;&#x4EF6;&#x4EA4;&#x4E92;&#x662F;&#x7528;&#x8FC7;&#x4E8C;&#x8FDB;&#x5236;&#x4FE1;&#x606F;&#x5B8C;&#x6210;&#x4EA4;&#x4E92;&#xFF0C;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x7BA1;&#x7406;&#x3001;&#x63D0;&#x5347;&#x7CFB;&#x7EDF;&#x6027;&#x80FD;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x4E8E;&#x6570;&#x636E;&#x64CD;&#x4F5C;&#x5355;&#x5143;&#x7684;&#x4F4D;&#x6570;&#x9009;&#x53D6;&#x4E0D;&#x540C;&#xFF0C;&#x7531;&#x4E8E; 32 &#x4F4D;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x4E8E;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x5BFC;&#x81F4;&#x76EE;&#x524D;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x9010;&#x6E10;&#x8FC1;&#x79FB;&#x5230;&#x4E86; 64 &#x4F4D;&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x4E8E;&#x5B57;&#x8282;&#x7684;&#x987A;&#x5E8F;&#x8868;&#x793A;&#x548C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5360;&#x7528;&#x4F4D;&#x5927;&#x5C0F;&#x4E5F;&#x4E0D;&#x540C;&#xFF0C;&#x6709;&#x5927;&#x7AEF;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x4E5F;&#x6709;&#x5C0F;&#x7AEF;&#x8868;&#x793A;&#x7684;&#x3002;&#x8FD9;&#x79CD;&#x5355;&#x673A;&#x7684;&#x72EC;&#x7279;&#x6027;&#x5BFC;&#x81F4;&#x8BA1;&#x7B97;&#x673A;&#x5728;&#x7F51;&#x7EDC;&#x4E2D;&#x4F20;&#x8F93;&#x7684;&#x5B57;&#x8282;&#x987A;&#x5E8F;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x56E0;&#x6B64;&#x4FE1;&#x606F;&#x6570;&#x636E;&#x5728;&#x7F51;&#x7EDC;&#x4EA4;&#x4E92;&#x8FC7;&#x7A0B;&#x4E2D;&#x9700;&#x8981;&#x9075;&#x5FAA;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x6807;&#x51C6;&#x3002; &#x6240;&#x4EE5;&#x8BA1;&#x7B97;&#x673A;&#x90FD;&#x9075;&#x5FAA; ASCII &#x7801;&#x7F16;&#x7801;&#x6807;&#x51C6;&#xFF0C;&#x4F7F;&#x5F97;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x4EE3;&#x7801;&#xFF08;&#x5B57;&#x7B26;&#x4E32;&#x7F16;&#x5199;&#x7684;&#x6587;&#x672C;&#x6587;&#x4EF6;&#xFF09;&#x7684;&#x7F16;&#x7801;&#x548C;&#x89E3;&#x7801;&#x64CD;&#x4F5C;&#x53D8;&#x5F97;&#x53EF;&#x4EE5;&#x4E0D;&#x4F9D;&#x8D56;&#x5E73;&#x53F0;&#x8FDB;&#x884C;&#x79FB;&#x690D;&#x3002;&#x5F53;&#x7136;&#x4EE3;&#x7801;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x6570;&#x5B57;&#x4FE1;&#x606F;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x4F9D;&#x8D56;&#x7F16;&#x8BD1;&#x5668;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#x6210;&#x9002;&#x5408;&#x672C;&#x7CFB;&#x7EDF;&#x7684;&#x673A;&#x5668;&#x4EE3;&#x7801;&#xFF08;&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#xFF09;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>深入理解计算机系统</category>
      </categories>
      <tags>
        <tag>基础原理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深入理解计算机系统 | 学习笔记（三）]]></title>
    <url>%2F2018%2F10%2F19%2F012%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x786C;&#x4EF6;&#x65E0;&#x8BBA;&#x662F;&#x7B80;&#x5355;&#x7684; hello &#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x8FD8;&#x662F; shell &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x5B83;&#x4EEC;&#x4E4B;&#x6240;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x952E;&#x76D8;&#x3001;&#x663E;&#x793A;&#x5668;&#x3001;&#x78C1;&#x76D8;&#x6216;&#x8005;&#x4E3B;&#x5B58;&#xFF0C;&#x800C;&#x662F;&#x4F9D;&#x9760;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x7684;&#x670D;&#x52A1;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x770B;&#x6210;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x548C;&#x786C;&#x4EF6;&#x4E4B;&#x95F4;&#x63D2;&#x5165;&#x7684;&#x4E00;&#x5C42;&#x8F6F;&#x4EF6;&#x3002; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x4E24;&#x4E2A;&#x6838;&#x5FC3;&#x57FA;&#x672C;&#x529F;&#x80FD;&#xFF1A; 1&#xFF09;&#x9632;&#x6B62;&#x786C;&#x4EF6;&#x88AB;&#x5931;&#x63A7;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6EE5;&#x7528;&#x3002;2&#xFF09;&#x5411;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x63D0;&#x4F9B;&#x7B80;&#x5355;&#x4E00;&#x81F4;&#x7684;&#x673A;&#x5236;&#xFF08;API&#xFF09;&#x6765;&#x63A7;&#x5236;&#x590D;&#x6742;&#x800C;&#x53C8;&#x901A;&#x5E38;&#x5927;&#x76F8;&#x5F84;&#x5EAD;&#x7684;&#x4F4E;&#x7EA7;&#x786C;&#x4EF6;&#x8BBE;&#x5907;&#x3002; &#x9762;&#x5BF9;&#x82B1;&#x6837;&#x767E;&#x51FA;&#x7684;&#x786C;&#x4EF6;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5C31;&#x50CF;&#x662F;&#x4FDD;&#x59C6;&#xFF0C;&#x6240;&#x6709;&#x810F;&#x6D3B;&#x7D2F;&#x6D3B;&#x90FD;&#x81EA;&#x5DF1;&#x5927;&#x5305;&#x5927;&#x63FD;&#xFF0C;&#x53EA;&#x7ED9;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684; API &#x4F9B;&#x7A0B;&#x5E8F;&#x4EEC;&#x5E78;&#x798F;&#x7684;&#x4F7F;&#x7528;&#x3002;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x5728;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x5185;&#xFF0C;&#x5C31;&#x6536;&#x5230;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x7BA1;&#x7406;&#xFF0C;&#x5982;&#x4F55;&#x7EDF;&#x4E00;&#x7BA1;&#x7406;&#x5404;&#x5F0F;&#x5404;&#x6837;&#x7684;&#x5E94;&#x7528;&#x8F6F;&#x4EF6;&#x662F;&#x4E00;&#x5927;&#x770B;&#x70B9;&#x3002; &#x4E09;&#x5927;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#x600E;&#x4E48;&#x5C06;&#x7A0B;&#x5E8F;&#x548C;&#x4E0A;&#x7BC7;&#x6587;&#x7AE0;&#x4E2D;&#x63D0;&#x5230;&#x7684;&#x786C;&#x4EF6;&#x7CFB;&#x7EDF;&#x76F8;&#x5BF9;&#x5E94;&#x8D77;&#x6765;&#xFF0C;&#x662F;&#x503C;&#x5F97;&#x73A9;&#x5473;&#x4E00;&#x756A;&#x3002;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x8005;&#x4EEC;&#x8BBE;&#x8BA1;&#x51FA;&#x4EE5;&#x4E0B;&#x4E09;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#x6765;&#x5B9E;&#x73B0;&#x4E0A;&#x8FF0;&#x7684;&#x6838;&#x5FC3;&#x57FA;&#x7840;&#x529F;&#x80FD;&#xFF1A;&#x8FDB;&#x7A0B;&#x3001;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x548C;&#x6587;&#x4EF6;&#x3002; &#x6587;&#x4EF6;&#x662F;&#x5BF9; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x8868;&#x793A;&#x3002; &#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x662F;&#x5BF9;&#x4E3B;&#x5B58;&#x548C;&#x78C1;&#x76D8; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x8868;&#x793A;&#x3002; &#x8FDB;&#x7A0B;&#x662F;&#x5BF9;&#x5904;&#x7406;&#x5668;&#x3001;&#x4E3B;&#x5B58;&#x548C; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x8868;&#x793A;&#x3002; 1.1 &#x8FDB;&#x7A0B;&#x8FDB;&#x7A0B;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x4E00;&#x4E2A;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x79CD;&#x62BD;&#x8C61;&#x3002;&#x8FDB;&#x7A0B;&#x6982;&#x5FF5;&#x7684;&#x63D0;&#x51FA;&#x4F7F;&#x5F97;&#x6240;&#x6709;&#x8DD1;&#x5728;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E0A;&#x7A0B;&#x5E8F;&#x4E00;&#x4E2A;&#x5F88;&#x903C;&#x771F;&#x7684;&#x5047;&#x8C61;&#xFF1A;&#x770B;&#x4E0A;&#x53BB;&#x53EA;&#x6709;&#x8FD9;&#x4E2A;&#x7A0B;&#x5E8F;&#x5728;&#x4F7F;&#x7528;&#x5904;&#x7406;&#x5668;&#x3001;&#x4E3B;&#x5B58;&#x548C; I/O &#x8BBE;&#x5907;&#xFF0C;&#x5373;&#x8BE5;&#x7A0B;&#x5E8F;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#x662F;&#x7CFB;&#x7EDF;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#x552F;&#x4E00;&#x7684;&#x5BF9;&#x8C61;&#x3002; &#x5373;&#x4F7F;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E0A;&#x6709;&#x591A;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF08;&#x8FDB;&#x7A0B;&#xFF09;&#x5728;&#x8FD0;&#x884C;&#xFF0C;&#x4E5F;&#x8BA9;&#x7528;&#x6237;&#x611F;&#x89C9;&#x5230;&#x6BCF;&#x4E2A;&#x7A0B;&#x5E8F;&#x90FD;&#x662F;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#x7684;&#x5E76;&#x53D1;&#x8FD0;&#x884C;&#xFF1A;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x6307;&#x4EE4;&#x548C;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x6307;&#x4EE4;&#x4EA4;&#x9519;&#x6267;&#x884C;&#x3002;&#x5176;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x8FD9;&#x6837;&#x9AD8;&#x6548;&#x7684;&#x8FD0;&#x884C;&#x673A;&#x5236;&#x662F;&#x56E0;&#x4E3A;&#x786C;&#x4EF6;&#x6280;&#x672F;&#x7684;&#x652F;&#x6301;&#xFF1A;CPU &#x6709;&#x53EF;&#x4EE5;&#x5728;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x6765;&#x56DE;&#x5207;&#x6362;&#x6267;&#x884C;&#x8FDB;&#x7A0B;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5C31;&#x662F;&#x5229;&#x7528;&#x8FD9;&#x4E00;&#x673A;&#x5236;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x79CD;&#x673A;&#x5236;&#xFF0C;&#x53EB;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x3002; &#x5177;&#x4F53;&#x6765;&#x8BF4;&#x6765;&#x8BB2;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x65F6;&#x523B;&#x8BB0;&#x5F55;&#x5E76;&#x8DDF;&#x8E2A;&#x8FDB;&#x7A0B;&#x8FD0;&#x884C;&#x6240;&#x9700;&#x7684;&#x6240;&#x6709;&#x72B6;&#x6001;&#x4FE1;&#x606F;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x4E0A;&#x4E0B;&#x6587;&#xFF09;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x62EC;PC &#x548C;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6;&#x7684;&#x5F53;&#x524D;&#x503C;&#xFF0C;&#x4EE5;&#x53CA;&#x4E3B;&#x5B58;&#x7684;&#x5185;&#x5BB9;&#x7B49;&#xFF0C;&#x4EE5;&#x4FDD;&#x8BC1;&#x80FD;&#x591F;&#x5728;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x6267;&#x884C;&#x5230;&#x4E00;&#x534A;&#x5E76;&#x5C06;&#x5176;&#x6682;&#x505C;&#xFF0C;&#x53BB;&#x6267;&#x884C;&#x4E00;&#x4F1A;&#x513F;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF0C;&#x518D;&#x5F85;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x6267;&#x884C;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5C06;&#x5176;&#x6682;&#x505C;&#xFF0C;&#x518D;&#x56DE;&#x5230;&#x672C;&#x8FDB;&#x7A0B;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x3002; &#x7EBF;&#x7A0B; &#x5728;&#x73B0;&#x4EE3;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x5B9E;&#x9645;&#x4E0A;&#x53EF;&#x4EE5;&#x7531;&#x591A;&#x4E2A;&#x79F0;&#x4E3A;&#x7EBF;&#x7A0B;&#x7684;&#x6267;&#x884C;&#x5355;&#x5143;&#x7EC4;&#x6210;&#xFF0C;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x90FD;&#x8FD0;&#x884C;&#x5728;&#x8FDB;&#x7A0B;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x5E76;&#x5171;&#x4EAB;&#x540C;&#x6837;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x5168;&#x5C40;&#x6570;&#x636E;&#x3002; &#x7EBF;&#x7A0B;&#x548C;&#x8FDB;&#x7A0B;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x4F5C;&#x7528;&#x57DF;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x8FDB;&#x7A0B;&#x662F;&#x5728;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5C42;&#x9762;&#xFF0C;&#x8FDB;&#x7A0B;&#x662F;&#x5728;&#x67D0;&#x4E2A;&#x8FDB;&#x7A0B;&#x5C42;&#x9762;&#x3002; 1.2 &#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#xFF0C;&#x5B83;&#x4E3A;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5047;&#x8C61;&#xFF0C;&#x5373;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x5728;&#x72EC;&#x5360;&#x5730;&#x4F7F;&#x7528;&#x4E3B;&#x5B58;&#x3002;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x770B;&#x5230;&#x7684;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x5B58;&#x50A8;&#x5668;&#xFF0C;&#x79F0;&#x4E3A;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002; &#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x770B;&#x5230;&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7531;&#x5927;&#x91CF;&#x51C6;&#x786E;&#x5B9A;&#x4E49;&#x7684;&#x533A;&#x6784;&#x6210;&#xFF0C;&#x6BCF;&#x4E2A;&#x533A;&#x90FD;&#x6709;&#x4E13;&#x95E8;&#x7684;&#x529F;&#x80FD;&#x3002;&#x56FE;&#x4E2D;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7684;&#x5E95;&#x90E8;&#x533A;&#x57DF;&#x5B58;&#x653E;&#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x5B9A;&#x4E49;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#xFF0C;&#x5730;&#x5740;&#x4ECE;&#x4E0B;&#x5F80;&#x4E0A;&#x9010;&#x6E10;&#x589E;&#x5927;&#x3002; &#x7A0B;&#x5E8F;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E; &#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x7684;&#x8FDB;&#x7A0B;&#x6765;&#x8BF4;&#xFF0C;&#x4EE3;&#x7801;&#x662F;&#x4ECE;&#x540C;&#x4E00;&#x56FA;&#x5B9A;&#x5730;&#x5740;&#x5F00;&#x59CB;&#x5E76;&#x4E14;&#x53EA;&#x8BFB;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x7D27;&#x63A5;&#x7740;&#x662F;&#x6570;&#x636E;&#x4F4D;&#x7F6E;&#xFF08;&#x548C; C &#x5168;&#x5C40;&#x53D8;&#x91CF;&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x4F4D;&#x7F6E;&#xFF09;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#x533A;&#x662F;&#x5728;&#x8FDB;&#x7A0B;&#x4E00;&#x5F00;&#x59CB;&#x8FD0;&#x884C;&#x65F6;&#x5C31;&#x88AB;&#x89C4;&#x5B9A;&#x4E86;&#x5927;&#x5C0F;&#x3002; &#x5806; &#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#x533A;&#x540E;&#x7D27;&#x968F;&#x7740;&#x7684;&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x5806;&#xFF0C;&#x5806;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x52A8;&#x6001;&#x5730;&#x6269;&#x5C55;&#x548C;&#x6536;&#x7F29;&#x3002; &#x5171;&#x4EAB;&#x5E93; &#x5927;&#x7EA6;&#x5728;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7684;&#x4E2D;&#x95F4;&#x90E8;&#x5206;&#x662F;&#x4E00;&#x5757;&#x7528;&#x6765;&#x5B58;&#x653E;&#x50CF; C &#x6807;&#x51C6;&#x5E93;&#x548C;&#x6570;&#x5B66;&#x5E93;&#x8FD9;&#x6837;&#x5171;&#x4EAB;&#x5E93;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#x7684;&#x533A;&#x57DF;&#x3002; &#x6808; &#x4F4D;&#x4E8E;&#x7528;&#x6237;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x9876;&#x90E8;&#x7684;&#x662F;&#x7528;&#x6237;&#x6808;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x7528;&#x5B83;&#x6765;&#x5B9E;&#x73B0;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x3002;&#x548C;&#x5806;&#x4E00;&#x6837;&#xFF0C;&#x7528;&#x6237;&#x6808;&#x5728;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x671F;&#x95F4;&#x53EF;&#x4EE5;&#x52A8;&#x6001;&#x5730;&#x6269;&#x5C55;&#x548C;&#x6536;&#x7F29;&#x3002;&#x8C03;&#x7528;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x6808;&#x5C31;&#x4F1A;&#x589E;&#x957F; &#xFF1B;&#x4ECE;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x65F6;&#xFF0C;&#x6808;&#x5C31;&#x4F1A;&#x6536;&#x7F29;&#x3002; &#x5185;&#x6838;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668; &#x5185;&#x6838;&#x603B;&#x662F;&#x9A7B;&#x7559;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x9876;&#x90E8;&#x7684;&#x533A;&#x57DF;&#x662F;&#x4E3A;&#x5185;&#x6838;&#x4FDD;&#x7559;&#x7684;&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8BFB;&#x5199;&#x8FD9;&#x4E2A;&#x533A;&#x57DF;&#x7684;&#x5185;&#x5BB9;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x5185;&#x6838;&#x4EE3;&#x7801;&#x5B9A;&#x4E49;&#x7684;&#x51FD;&#x6570;&#x3002; &#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x8FD9;&#x6837;&#x7ED3;&#x6784;&#x7684;&#x8BBE;&#x8BA1;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x786C;&#x4EF6;&#x7684;&#x4FE1;&#x606F;&#x4EA4;&#x4E92;&#xFF0C;&#x786C;&#x4EF6;&#x4E2D;&#x7684;&#x7535;&#x538B;&#x4FE1;&#x606F;&#x80FD;&#x591F;&#x88AB;&#x89E3;&#x91CA;&#x8F6C;&#x6362;&#x4E3A;&#x8BA1;&#x7B97;&#x673A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x4F4D;&#xFF08;bit&#xFF09;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E0E;&#x4E4B;&#x5728;&#x8F6F;&#x4EF6;&#x5C42;&#x9762;&#x8FDB;&#x884C;&#x66F4;&#x5E7F;&#x6CDB;&#x7684;&#x4EA4;&#x4E92;&#x3002; &#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x8FD0;&#x4F5C;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x662F;&#x628A;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x5185;&#x5BB9;&#x5B58;&#x50A8;&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x4E3B;&#x5B58;&#x4F5C;&#x4E3A;&#x78C1;&#x76D8;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x3002; 1.3 &#x6587;&#x4EF6;&#x6587;&#x4EF6;&#x5C31;&#x662F;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#xFF0C;&#x4EC5;&#x6B64;&#x800C;&#x5DF2;&#x3002;&#x6BCF;&#x4E2A; I/O &#x8BBE;&#x5907;&#xFF0C;&#x5305;&#x62EC;&#x78C1;&#x76D8;&#x3001;&#x952E;&#x76D8;&#x3001;&#x663E;&#x793A;&#x5668;&#xFF0C;&#x751A;&#x81F3;&#x7F51;&#x7EDC;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x89C6;&#x4E3A;&#x6587;&#x4EF6;&#x3002;&#x5B83;&#x5411;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x7EDF;&#x4E00;&#x7684;&#x89C6;&#x89D2;&#xFF0C;&#x6765;&#x770B;&#x5F85;&#x7CFB;&#x7EDF;&#x4E2D;&#x53EF;&#x80FD;&#x542B;&#x6709;&#x7684;&#x6240;&#x6709;&#x5404;&#x5F0F;&#x5404;&#x6837;&#x7684; I/O &#x8BBE;&#x5907;&#x3002; &#x4E8C;&#x3001;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x5229;&#x7528;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x73B0;&#x5728;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x5DF2;&#x7ECF;&#x4E0D;&#x662F;&#x5355;&#x5175;&#x4F5C;&#x6218;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x7740;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x5E94;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4EEC;&#x5728;&#x786C;&#x4EF6;&#x548C;&#x7CFB;&#x7EDF;&#x8F6F;&#x4EF6;&#x5C42;&#x9762;&#x90FD;&#x6709;&#x7740;&#x76F8;&#x540C;&#x7684;&#x7ED3;&#x6784;&#x8BBE;&#x8BA1;&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x5F97;&#x5168;&#x4E16;&#x754C;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x80FD;&#x591F;&#x4E92;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x5F62;&#x6210;&#x4FE1;&#x606F;&#x5DE8;&#x5927;&#x7684;&#x4E92;&#x8054;&#x7F51;&#x3002; &#x4ECE;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x7CFB;&#x7EDF;&#x6765;&#x770B;&#xFF0C;&#x7F51;&#x7EDC;&#x53EF;&#x89C6;&#x4E3A;&#x4E00;&#x4E2A; I/O &#x8BBE;&#x5907;&#x3002;&#x5F53;&#x7CFB;&#x7EDF;&#x4ECE;&#x4E3B;&#x5B58;&#x5C06;&#x4E00;&#x4E32;&#x5B57;&#x8282;&#x590D;&#x5236;&#x5230;&#x7F51;&#x7EDC;&#x9002;&#x914D;&#x5668;&#x65F6;&#xFF0C;&#x6570;&#x636E;&#x6D41;&#x7ECF;&#x8FC7;&#x7F51;&#x7EDC;&#x5230;&#x8FBE;&#x53E6;&#x4E00;&#x53F0;&#x673A;&#x5668;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#xFF0C;&#x4F8B;&#x5982;&#x672C;&#x5730;&#x78C1;&#x76D8;&#x9A71;&#x52A8;&#x5668;&#x3002;&#x76F8;&#x4F3C;&#x5730;&#xFF0C;&#x7CFB;&#x7EDF;&#x53EF;&#x4EE5;&#x8BFB;&#x53D6;&#x4ECE;&#x5176;&#x4ED6;&#x673A;&#x5668;&#x53D1;&#x9001;&#x6765;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x628A;&#x6570;&#x636E;&#x590D;&#x5236;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x4E3B;&#x5B58;&#x3002; &#x4E09;&#x3001;&#x5E76;&#x53D1;&#x4E0E;&#x5E76;&#x884C;&#x5E76;&#x53D1;&#xFF08;concurrency&#xFF09;&#x662F;&#x6307;&#x4E00;&#x4E2A;&#x540C;&#x65F6;&#x5177;&#x6709;&#x591A;&#x4E2A;&#x6D3B;&#x52A8;&#x7684;&#x7CFB;&#x7EDF;&#x3002;&#x5E76;&#x884C;&#xFF08;parallelism&#xFF09;&#x6307;&#x7684;&#x662F;&#x7528;&#x5E76;&#x53D1;&#x4F7F;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x8FD0;&#x884C;&#x5F97;&#x66F4;&#x5FEB;&#x3002; &#x5E76;&#x884C;&#x53EF;&#x4EE5;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x7684;&#x591A;&#x4E2A;&#x62BD;&#x8C61;&#x5C42;&#x6B21;&#x4E0A;&#x8FD0;&#x7528;&#x3002;&#x6309;&#x7167;&#x7CFB;&#x7EDF;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x4E2D;&#x7531;&#x9AD8;&#x5230;&#x4F4E;&#x7684;&#x987A;&#x5E8F;&#x5206;&#x4E3A;&#x4E09;&#x5C42;&#x6B21;&#xFF1A; 3.1 &#x7EBF;&#x7A0B;&#x7EA7;&#x5E76;&#x53D1;&#x5728;&#x8FDB;&#x7A0B;&#x7684;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#x4E0B;&#x5F15;&#x5165;&#x4E86;&#x7EBF;&#x7A0B;&#xFF0C;&#x800C;&#x7EBF;&#x7A0B;&#x7EA7;&#x5E76;&#x53D1;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5C31;&#x662F;&#x6307;&#x7684;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5728;&#x540C;&#x4E00;&#x65F6;&#x95F4;&#xFF08;&#x5E76;&#x975E;&#x662F;&#x7EDD;&#x5BF9;&#x540C;&#x65F6;&#x7684;&#xFF09;&#x6D3B;&#x52A8;&#xFF0C;&#x5373;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x591A;&#x4E2A;&#x63A7;&#x5236;&#x6D41;&#x3002; &#x7531;&#x4E00;&#x4E2A;&#x5904;&#x7406;&#x5668;&#x5728;&#x591A;&#x4E2A;&#x4EFB;&#x52A1;&#x4E4B;&#x95F4;&#x6765;&#x56DE;&#x5207;&#x6362;&#x7684;&#x65E9;&#x671F;&#x8BA1;&#x7B97;&#x673A;&#x53EB;&#x5355;&#x5904;&#x7406;&#x5668;&#x7CFB;&#x7EDF;&#x3002; &#x5F53;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x7531;&#x5355;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5185;&#x6838;&#x63A7;&#x5236;&#x7684;&#x591A;&#x5904;&#x7406;&#x5668;&#x7EC4;&#x6210;&#x7684;&#x7CFB;&#x7EDF;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x591A;&#x5904;&#x7406;&#x5668;&#x7CFB;&#x7EDF;&#x3002;&#x5176;&#x4E2D;&#x591A;&#x6838;&#x5904;&#x7406;&#x5668;&#x662F;&#x5C06;&#x591A;&#x4E2A; CPU&#xFF08;&#x79F0;&#x4E3A;&#x201C;&#x6838;&#x201D;&#xFF09;&#x96C6;&#x6210;&#x5230;&#x4E00;&#x4E2A;&#x96C6;&#x6210;&#x7535;&#x8DEF;&#x82AF;&#x7247;&#x4E0A;&#x3002; &#x8D85;&#x7EBF;&#x7A0B;&#xFF0C;&#x6709;&#x65F6;&#x79F0;&#x4E3A;&#x540C;&#x65F6;&#x591A;&#x7EBF;&#x7A0B;&#xFF08;simultaneous multi-threading&#xFF09;&#xFF0C;&#x662F;&#x4E00;&#x9879;&#x5141;&#x8BB8;&#x4E00;&#x4E2A; CPU &#x6267;&#x884C;&#x591A;&#x4E2A;&#x63A7;&#x5236;&#x6D41;&#x7684;&#x6280;&#x672F;&#x3002;&#x5B83;&#x6D89;&#x53CA; CPU &#x67D0;&#x4E9B;&#x786C;&#x4EF6;&#x6709;&#x591A;&#x4E2A;&#x5907;&#x4EFD;&#xFF0C;&#x6BD4;&#x5982;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#x548C;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6; &#xFF1B;&#x800C;&#x5176;&#x4ED6;&#x7684;&#x786C;&#x4EF6;&#x90E8;&#x5206;&#x53EA;&#x6709;&#x4E00;&#x4EFD;&#xFF0C;&#x6BD4;&#x5982;&#x6267;&#x884C;&#x6D6E;&#x70B9;&#x7B97;&#x672F;&#x8FD0;&#x7B97;&#x7684;&#x5355;&#x5143;&#x3002; 3.2 &#x6307;&#x4EE4;&#x7EA7;&#x5E76;&#x884C;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x6267;&#x884C;&#x591A;&#x6761;&#x6307;&#x4EE4;&#x7684;&#x5C5E;&#x6027;&#x79F0;&#x4E3A;&#x6307;&#x4EE4;&#x7EA7;&#x5E76;&#x884C;&#x3002;&#x8BA1;&#x7B97;&#x673A;&#x4F7F;&#x7528;&#x4E86;&#x6D41;&#x6C34;&#x7EBF;&#xFF08;pipelining&#xFF09;&#x6280;&#x672F;&#xFF0C;&#x5C06;&#x6267;&#x884C;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#x6240;&#x9700;&#x8981;&#x7684;&#x6D3B;&#x52A8;&#x5212;&#x5206;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x5C06;&#x5904;&#x7406;&#x5668;&#x7684;&#x786C;&#x4EF6;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x9636;&#x6BB5;&#xFF0C;&#x6BCF;&#x4E2A;&#x9636;&#x6BB5;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x6B65;&#x9AA4;&#x3002;&#x8FD9;&#x4E9B;&#x9636;&#x6BB5;&#x53EF;&#x4EE5;&#x5E76;&#x884C;&#x5730;&#x64CD;&#x4F5C;&#xFF0C;&#x7528;&#x6765;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x6307;&#x4EE4;&#x7684;&#x4E0D;&#x540C;&#x90E8;&#x5206;&#x3002; &#x5982;&#x679C;&#x5904;&#x7406;&#x5668;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x6BD4;&#x4E00;&#x4E2A;&#x5468;&#x671F;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#x66F4;&#x5FEB;&#x7684;&#x6267;&#x884C;&#x901F;&#x7387;&#xFF0C;&#x5C31;&#x79F0;&#x4E4B;&#x4E3A;&#x8D85;&#x6807;&#x91CF;&#xFF08;superscalar&#xFF09;&#x5904;&#x7406;&#x5668;&#x3002;&#x5927;&#x591A;&#x6570;&#x73B0;&#x4EE3;&#x5904;&#x7406;&#x5668;&#x90FD;&#x652F;&#x6301;&#x8D85;&#x6807;&#x91CF;&#x64CD;&#x4F5C;&#x3002; 3.3 &#x5355;&#x6307;&#x4EE4;&#x3001;&#x591A;&#x6570;&#x636E;&#x5E76;&#x884C;&#x73B0;&#x5728;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x786C;&#x4EF6;&#x51E0;&#x4E4E;&#x90FD;&#x5141;&#x8BB8;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#x4EA7;&#x751F;&#x591A;&#x4E2A;&#x53EF;&#x4EE5;&#x5E76;&#x884C;&#x6267;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x79F0;&#x4E3A;&#x5355;&#x6307;&#x4EE4;&#x3001;&#x591A;&#x6570;&#x636E;&#xFF0C;&#x5373; SIMD &#x5E76;&#x884C;&#x3002;&#x901A;&#x4FD7;&#x7684;&#x8BB2;&#x4E5F;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#xFF0C;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#x64CD;&#x4F5C;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x3002;&#x6BD4;&#x5982;&#x4E66;&#x4E2D;&#x6240;&#x63D0;&#x5230;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x4E00;&#x4E9B;&#x5904;&#x7406;&#x5668;&#x5177;&#x6709;&#x5E76;&#x884C;&#x5730;&#x5BF9;4&#x5BF9;&#x5355;&#x7CBE;&#x5EA6;&#x6D6E;&#x70B9;&#x6570;&#x505A;&#x52A0;&#x6CD5;&#x7684;&#x6307;&#x4EE4;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x4E4B;&#x6240;&#x4EE5;&#x8D8A;&#x6765;&#x8D8A;&#x5FEB;&#xFF0C;&#x8FD9;&#x5F97;&#x76CA;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x786C;&#x4EF6;&#x6280;&#x672F;&#x7684;&#x53D1;&#x5C55;&#xFF0C;&#x5B83;&#x4ECE;&#x7269;&#x7406;&#x903B;&#x8F91;&#x4E0A;&#x5B9E;&#x73B0;&#x4E86;&#x5177;&#x6709; SIMD &#x5E76;&#x884C;&#x3001;&#x8D85;&#x6807;&#x91CF;&#x7684;&#x591A;&#x6838;&#x5904;&#x7406;&#x5668;&#x3002; &#x56DB;&#x3001;&#x62BD;&#x8C61;&#x4E0D;&#x7B80;&#x5355;&#x5728;&#x5904;&#x7406;&#x5668;&#x91CC;&#xFF0C;&#x6307;&#x4EE4;&#x96C6;&#x7ED3;&#x6784;&#x63D0;&#x4F9B;&#x4E86;&#x5BF9;&#x5B9E;&#x9645;&#x5904;&#x7406;&#x5668;&#x786C;&#x4EF6;&#x7684;&#x62BD;&#x8C61;&#x3002;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#xFF0C;&#x673A;&#x5668;&#x4EE3;&#x7801;&#x7A0B;&#x5E8F;&#x8868;&#x73B0;&#x5F97;&#x5C31;&#x597D;&#x50CF;&#x5B83;&#x662F;&#x8FD0;&#x884C;&#x5728;&#x4E00;&#x4E2A;&#x4E00;&#x6B21;&#x53EA;&#x6267;&#x884C;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#x7684;&#x5904;&#x7406;&#x5668;&#x4E0A;&#x3002;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x5927;&#x4E3B;&#x9898;&#x5C31;&#x662F;&#x63D0;&#x4F9B;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x7684;&#x62BD;&#x8C61;&#x8868;&#x793A;&#xFF0C;&#x6765;&#x9690;&#x85CF;&#x5B9E;&#x9645;&#x5B9E;&#x73B0;&#x7684;&#x590D;&#x6742;&#x6027;&#x3002; &#x9664;&#x4E86;&#x4E0A;&#x9762;&#x7684;&#x4E09;&#x4E2A;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x4E0A;&#x4E16;&#x7EAA; 60 &#x5E74;&#x4EE3;&#x63D0;&#x51FA;&#x7684;&#x91CD;&#x8981;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#xFF1A;&#x865A;&#x62DF;&#x673A;&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x5BF9;&#x6574;&#x4E2A;&#x8BA1;&#x7B97;&#x673A;&#xFF08;&#x5305;&#x62EC;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x3001;&#x5904;&#x7406;&#x5668;&#x548C;&#x7A0B;&#x5E8F;&#xFF09;&#x7684;&#x62BD;&#x8C61;&#x3002; &#x4E94;&#x3001;&#x5C0F;&#x7ED3;&#x62BD;&#x8C61;&#x7684;&#x6982;&#x5FF5;&#x6210;&#x4E3A;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x4E16;&#x7CFB;&#x7EDF;&#x76F8;&#x4E92;&#x4E92;&#x8054;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x4ECE;&#x5355;&#x53F0;&#x8BA1;&#x7B97;&#x673A;&#x4E0A;&#x786C;&#x4EF6;&#x4E0E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x7684;&#x4FE1;&#x606F;&#x4EA4;&#x4E92;&#xFF0C;&#x5230;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E0E;&#x672C;&#x5730;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#xFF0C;&#x518D;&#x5230;&#x8BA1;&#x7B97;&#x673A;&#x548C;&#x7F51;&#x7EDC;&#x7AEF;&#x7684;&#x53E6;&#x4E00;&#x53F0;&#x8BA1;&#x7B97;&#x673A;&#xFF0C;&#x90FD;&#x9075;&#x5FAA;&#x7740;&#x540C;&#x6837;&#x7684;&#x8F6F;&#x786C;&#x4EF6;&#x7ED3;&#x5408;&#x6807;&#x51C6;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x5728;&#x6BCF;&#x53F0;&#x8BA1;&#x7B97;&#x673A;&#x4E4B;&#x95F4;&#x4EA4;&#x6D41;&#x4F20;&#x9012;&#x3002; &#x5904;&#x7406;&#x5668;&#x8BFB;&#x53D6;&#x5E76;&#x89E3;&#x91CA;&#x5B58;&#x653E;&#x5728;&#x4E3B;&#x5B58;&#x91CC;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6307;&#x4EE4;&#x3002;&#x56E0;&#x4E3A;&#x8BA1;&#x7B97;&#x673A;&#x628A;&#x5927;&#x91CF;&#x7684;&#x65F6;&#x95F4;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x5668;&#x3001;I/O&#x8BBE;&#x5907;&#x548C; CPU &#x5BC4;&#x5B58;&#x5668;&#x4E4B;&#x95F4;&#x590D;&#x5236;&#x6570;&#x636E;&#xFF0C;&#x6240;&#x4EE5;&#x5C06;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x5212;&#x5206;&#x6210;&#x5C42;&#x6B21;&#x7ED3;&#x6784; &#x2014;&#x2014; CPU &#x5BC4;&#x5B58;&#x5668;&#x5728;&#x9876;&#x90E8;&#xFF0C;&#x63A5;&#x7740;&#x662F;&#x591A;&#x5C42;&#x7684;&#x786C;&#x4EF6;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x5B58;&#x50A8;&#x5668;&#x3001;DRAM &#x4E3B;&#x5B58;&#x548C;&#x78C1;&#x76D8;&#x5B58;&#x50A8;&#x5668;&#x3002; &#x4E3A;&#x4E86;&#x63D0;&#x5347;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x8FD0;&#x884C;&#x6027;&#x80FD;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x786C;&#x4EF6;&#x4E2D;&#x7684;&#x8BBE;&#x5907;&#x8FDB;&#x884C;&#x62BD;&#x8C61;&#xFF1A;1&#xFF09;&#x6587;&#x4EF6;&#x662F;&#x5BF9; I/O&#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61; &#xFF1B;2&#xFF09;&#x865A;&#x62DF;&#x5B58;&#x50A8;&#x5668;&#x662F;&#x5BF9;&#x4E3B;&#x5B58;&#x548C;&#x78C1;&#x76D8;&#x7684;&#x62BD;&#x8C61; &#xFF1B;3&#xFF09;&#x8FDB;&#x7A0B;&#x662F;&#x5BF9;&#x5904;&#x7406;&#x5668;&#x3001;&#x4E3B;&#x5B58;&#x548C; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>深入理解计算机系统</category>
      </categories>
      <tags>
        <tag>基础原理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深入理解计算机系统 | 学习笔记（二）]]></title>
    <url>%2F2018%2F10%2F17%2F011%2F</url>
    <content type="text"><![CDATA[&#x5728; Unix &#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; shell &#x7A97;&#x53E3;&#xFF08;windows &#x7CFB;&#x7EDF;&#x91CC;&#x662F; dos &#x7A97;&#x53E3;&#xFF09;&#x6267;&#x884C;&#x5DF2;&#x7ECF;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6; hello&#xFF1A; 123unix&gt; ./hellohello, worldunix&gt; shell &#x662F;&#x4E00;&#x4E2A;&#x547D;&#x4EE4;&#x884C;&#x89E3;&#x91CA;&#x5668;&#xFF0C;&#x5B83;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x63D0;&#x793A;&#x7B26;&#xFF0C;&#x7B49;&#x5F85;&#x4F60;&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x547D;&#x4EE4;&#x884C;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x3002;&#x5982;&#x679C;&#x8BE5;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5185;&#x7F6E;&#x7684;&#x5916;&#x58F3;&#x547D;&#x4EE4;&#xFF0C;&#x90A3;&#x4E48;&#x5916;&#x58F3;&#x5C31;&#x4F1A;&#x5047;&#x8BBE;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x5B83;&#x5C06;&#x52A0;&#x8F7D;&#x5E76;&#x8FD0;&#x884C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x3002; &#x8BF4;&#x767D;&#x4E86;&#xFF0C;shell &#x89E3;&#x91CA;&#x5668;&#x5C31;&#x662F;&#x5BF9;&#x547D;&#x4EE4;&#x884C;&#x8FDB;&#x884C;&#x89E3;&#x91CA;&#x8FD0;&#x884C;&#xFF0C;&#x5373;&#x4F7F;&#x662F;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x662F;&#x7531;&#x53EF;&#x8FD0;&#x884C;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x7EC4;&#x6210;&#x3002; &#x5728;&#x7B2C;&#x4E00;&#x7BC7;&#x7B14;&#x8BB0;&#x4E2D;&#x63D0;&#x5230;&#xFF1A;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x5C31;&#x662F;&#x7531;&#x786C;&#x4EF6;&#x548C;&#x7CFB;&#x7EDF;&#x8F6F;&#x4EF6;&#x7EC4;&#x6210;&#xFF0C;&#x56E0;&#x6B64;&#x60F3;&#x8981;&#x4E86;&#x89E3;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x5982;&#x4F55;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x77E5;&#x9053;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x5230;&#x5E95;&#x6709;&#x90A3;&#x4E9B;&#x786C;&#x4EF6;&#x548C;&#x8F6F;&#x4EF6;&#x3002; &#x4E00;&#x3001;&#x7CFB;&#x7EDF;&#x7684;&#x786C;&#x4EF6;&#x7EC4;&#x6210;&#x4E0B;&#x56FE;&#x5C55;&#x793A;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x5177;&#x5907;&#x7684;&#x786C;&#x4EF6;&#x7ED3;&#x6784;&#xFF1A; &#x56FE;&#x4E2D;&#xFF1A;CPU &#x662F;&#x4E2D;&#x592E;&#x5904;&#x7406;&#x5355;&#x5143; &#xFF1B;ALU &#x662F;&#x7B97;&#x672F; / &#x903B;&#x8F91;&#x5355;&#x5143; &#xFF1B;PC &#x662F;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668; &#xFF1B;USB &#x662F;&#x901A;&#x7528;&#x4E32;&#x884C;&#x603B;&#x7EBF;&#x3002; 1. &#x603B;&#x7EBF; &#x8D2F;&#x7A7F;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;&#x7684;&#x662F;&#x4E00;&#x7EC4;&#x7535;&#x5B50;&#x7BA1;&#x9053;&#xFF0C;&#x79F0;&#x505A;&#x603B;&#x7EBF;&#xFF0C;&#x5B83;&#x643A;&#x5E26;&#x4FE1;&#x606F;&#x5B57;&#x8282;&#x5E76;&#x8D1F;&#x8D23;&#x5728;&#x5404;&#x4E2A;&#x90E8;&#x4EF6;&#x95F4;&#x4F20;&#x9012;&#x3002; &#x786C;&#x4EF6;&#x4E4B;&#x95F4;&#x8FDB;&#x884C;&#x4FE1;&#x606F;&#x4EA4;&#x6D41;&#x9700;&#x8981;&#x6709;&#x4E00;&#x4E2A;&#x7EDF;&#x4E00;&#x7684;&#x6807;&#x51C6;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x4FE1;&#x606F;&#x4F20;&#x9012;&#x89C4;&#x5219;&#xFF0C;&#x4E3A;&#x4E86;&#x9AD8;&#x6548;&#x8003;&#x8651;&#xFF0C;&#x901A;&#x5E38;&#x603B;&#x7EBF;&#x88AB;&#x8BBE;&#x8BA1;&#x6210;&#x4F20;&#x9001;&#x5B9A;&#x957F;&#x7684;&#x5B57;&#x8282;&#x5757;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5B57;&#xFF08;word&#xFF09;&#x3002;&#x5B57;&#x4E2D;&#x7684;&#x5B57;&#x8282;&#x6570;&#xFF08;&#x5373;&#x5B57;&#x957F;&#xFF09;&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x7684;&#x7CFB;&#x7EDF;&#x53C2;&#x6570;&#xFF0C;&#x5728;&#x5404;&#x4E2A;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x60C5;&#x51B5;&#x90FD;&#x4E0D;&#x5C3D;&#x76F8;&#x540C;&#x3002; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684; 32 &#x4F4D;&#xFF08;4 &#x4E2A;&#x5B57;&#x8282;&#xFF09;&#x6216; 64 &#xFF08;8 &#x4E2A;&#x5B57;&#x8282;&#xFF09;&#x4F4D;&#x5C31;&#x53EB;&#x603B;&#x7EBF;&#x7684;&#x5B57;&#x957F;&#x5355;&#x4F4D;&#x3002; 2. I/O &#x8BBE;&#x5907; &#x8F93;&#x5165; / &#x8F93;&#x51FA;&#xFF08;I/O&#xFF09;&#x8BBE;&#x5907;&#x662F;&#x7CFB;&#x7EDF;&#x4E0E;&#x5916;&#x90E8;&#x4E16;&#x754C;&#x7684;&#x8054;&#x7CFB;&#x901A;&#x9053;&#x3002;&#x6BCF;&#x4E2A; I/O &#x8BBE;&#x5907;&#x90FD;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x5668;&#x6216;&#x9002;&#x914D;&#x5668;&#x4E0E; I/O &#x603B;&#x7EBF;&#x76F8;&#x8FDE;&#x3002; 3. &#x4E3B;&#x5B58; &#x4E3B;&#x5B58;&#x662F;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#xFF0C;&#x5728;&#x5904;&#x7406;&#x5668;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C;&#x7528;&#x6765;&#x5B58;&#x653E;&#x7A0B;&#x5E8F;&#x548C;&#x7A0B;&#x5E8F;&#x5904;&#x7406;&#x7684;&#x6570;&#x636E;&#x3002;&#x4ECE;&#x7269;&#x7406;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x4E3B;&#x5B58;&#x662F;&#x7531;&#x4E00;&#x7EC4;&#x52A8;&#x6001;&#x968F;&#x673A;&#x5B58;&#x53D6;&#x5B58;&#x50A8;&#x5668;&#xFF08;DRAM&#xFF09;&#x82AF;&#x7247;&#x7EC4;&#x6210;&#x7684;&#x3002;&#x4ECE;&#x903B;&#x8F91;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x5B58;&#x50A8;&#x5668;&#x662F;&#x4E00;&#x4E2A;&#x7EBF;&#x6027;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x90FD;&#x6709;&#x5176;&#x552F;&#x4E00;&#x7684;&#x5730;&#x5740;&#xFF08;&#x5373;&#x6570;&#x7EC4;&#x7D22;&#x5F15;&#xFF09;&#xFF0C;&#x8FD9;&#x4E9B;&#x5730;&#x5740;&#x662F;&#x4ECE;&#x96F6;&#x5F00;&#x59CB;&#x7684;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x786C;&#x4EF6;&#x4E16;&#x754C;&#x91CC;&#x7684;&#x5185;&#x5B58;&#x6761;&#x5C31;&#x662F;&#x4E3B;&#x5B58;&#x3002; 4. &#x5904;&#x7406;&#x5668; &#x4E2D;&#x592E;&#x5904;&#x7406;&#x5355;&#x5143;&#xFF08;CPU&#xFF09;&#xFF0C;&#x7B80;&#x79F0;&#x5904;&#x7406;&#x5668;&#xFF0C;&#x662F;&#x89E3;&#x91CA;&#xFF08;&#x6216;&#x6267;&#x884C;&#xFF09;&#x5B58;&#x50A8;&#x5728;&#x4E3B;&#x5B58;&#x4E2D;&#x6307;&#x4EE4;&#x7684;&#x5F15;&#x64CE;&#x3002;&#x5904;&#x7406;&#x5668;&#x7684;&#x6838;&#x5FC3;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x957F;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#xFF08;&#x6216;&#x5BC4;&#x5B58;&#x5668;&#xFF09;&#xFF0C;&#x79F0;&#x4E3A;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#xFF08;PC&#xFF09;&#x3002;&#x5728;&#x4EFB;&#x4F55;&#x65F6;&#x523B;&#xFF0C;PC &#x90FD;&#x6307;&#x5411;&#x4E3B;&#x5B58;&#x4E2D;&#x7684;&#x67D0;&#x6761;&#x673A;&#x5668;&#x8BED;&#x8A00;&#x6307;&#x4EE4;&#xFF08;&#x5373;&#x542B;&#x6709;&#x8BE5;&#x6761;&#x6307;&#x4EE4;&#x7684;&#x5730;&#x5740;&#xFF09;&#x3002; &#x672F;&#x4E1A;&#x6709;&#x4E13;&#x653B;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x4E16;&#x754C;&#x91CC;&#xFF0C;&#x4F60;&#x505A;&#x4F60;&#x7684;&#xFF0C;&#x5B83;&#x505A;&#x5B83;&#x7684;&#xFF0C;&#x5927;&#x5BB6;&#x5404;&#x53F8;&#x5176;&#x804C;&#x3002; &#x5982;&#x679C;&#x60F3;&#x8981; hello &#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF08;&#x5B58;&#x50A8;&#x5728;&#x4E3B;&#x5B58;&#x4E0A;&#xFF09;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#xFF0C;&#x5C31;&#x8981;&#x8C03;&#x7528;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#x6267;&#x884C;&#x6574;&#x4E2A;&#x7A0B;&#x5E8F;&#x7684;&#x6BCF;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#xFF0C;&#x5E76;&#x6709;&#x4E13;&#x95E8;&#x7684;&#x786C;&#x4EF6;&#x6765;&#x5904;&#x7406;&#x6570;&#x503C;&#x8BA1;&#x7B97;&#x903B;&#x8F91;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x6570;&#x503C;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x4EA7;&#x751F;&#x4E34;&#x65F6;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x6709;&#x4E2A;&#x5730;&#x65B9;&#x5BC4;&#x5B58;&#xFF0C;&#x7B49;&#x5F85;&#x6240;&#x6709;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x5B58;&#x5230;&#x4E3B;&#x5B58;&#x4E0A;&#x3002; &#x5904;&#x7406;&#x5668;&#x4ECE;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#xFF08;PC&#xFF09;&#x6307;&#x5411;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x5904;&#x8BFB;&#x53D6;&#x6307;&#x4EE4;&#xFF0C;&#x89E3;&#x91CA;&#x6307;&#x4EE4;&#x4E2D;&#x7684;&#x4F4D;&#xFF0C;&#x6267;&#x884C;&#x8BE5;&#x6307;&#x4EE4;&#x6307;&#x793A;&#x7684;&#x7B80;&#x5355;&#x64CD;&#x4F5C;&#xFF0C;&#x7136;&#x540E;&#x66F4;&#x65B0; PC&#xFF0C;&#x4F7F;&#x5176;&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x6761;&#x6307;&#x4EE4;&#xFF0C;&#x800C;&#x8FD9;&#x6761;&#x6307;&#x4EE4;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x4E0E;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#x521A;&#x521A;&#x6267;&#x884C;&#x7684;&#x6307;&#x4EE4;&#x76F8;&#x90BB;&#x3002; &#x7136;&#x800C;&#x64CD;&#x4F5C;&#x662F;&#x56F4;&#x7ED5;&#x7740;&#x4E3B;&#x5B58;&#x3001;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6;&#xFF08;register file&#xFF09;&#x548C;&#x7B97;&#x672F; / &#x903B;&#x8F91;&#x5355;&#x5143;&#xFF08;ALU&#xFF09;&#x8FDB;&#x884C;&#x7684;&#x3002;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6;&#x662F;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#xFF0C;&#x7531;&#x4E00;&#x4E9B; 1 &#x5B57;&#x957F;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x7EC4;&#x6210;&#xFF0C;&#x6BCF;&#x4E2A;&#x5BC4;&#x5B58;&#x5668;&#x90FD;&#x6709;&#x552F;&#x4E00;&#x7684;&#x540D;&#x5B57;&#x3002;ALU &#x8BA1;&#x7B97;&#x65B0;&#x7684;&#x6570;&#x636E;&#x548C;&#x5730;&#x5740;&#x503C;&#x3002; &#x4E0B;&#x9762;&#x5217;&#x4E3E;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x64CD;&#x4F5C;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;CPU &#x5728;&#x6307;&#x4EE4;&#x7684;&#x8981;&#x6C42;&#x4E0B;&#x53EF;&#x80FD;&#x4F1A;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x64CD;&#x4F5C; &#xFF1A; &#x52A0;&#x8F7D; &#xFF1A;&#x628A;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x5B57;&#x4ECE;&#x4E3B;&#x5B58;&#x590D;&#x5236;&#x5230;&#x5BC4;&#x5B58;&#x5668;&#xFF0C;&#x4EE5;&#x8986;&#x76D6;&#x5BC4;&#x5B58;&#x5668;&#x539F;&#x6765;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x5B58;&#x50A8; &#xFF1A;&#x628A;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x5B57;&#x4ECE;&#x5BC4;&#x5B58;&#x5668;&#x590D;&#x5236;&#x5230;&#x4E3B;&#x5B58;&#x7684;&#x67D0;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x4EE5;&#x8986;&#x76D6;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x4E0A;&#x539F;&#x6765;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x64CD;&#x4F5C; &#xFF1A;&#x628A;&#x4E24;&#x4E2A;&#x5BC4;&#x5B58;&#x5668;&#x7684;&#x5185;&#x5BB9;&#x590D;&#x5236;&#x5230; ALU&#xFF0C;ALU &#x5BF9;&#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x505A;&#x7B97;&#x672F;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x5C06;&#x7ED3;&#x679C;&#x5B58;&#x653E;&#x5230;&#x4E00;&#x4E2A;&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#xFF0C;&#x4EE5;&#x8986;&#x76D6;&#x8BE5;&#x5BC4;&#x5B58;&#x5668;&#x4E2D;&#x539F;&#x6765;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x8DF3;&#x8F6C; &#xFF1A;&#x4ECE;&#x6307;&#x4EE4;&#x672C;&#x8EAB;&#x4E2D;&#x62BD;&#x53D6;&#x4E00;&#x4E2A;&#x5B57;&#xFF0C;&#x5E76;&#x5C06;&#x8FD9;&#x4E2A;&#x5B57;&#x590D;&#x5236;&#x5230;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#xFF08;PC&#xFF09;&#x4E2D;&#xFF0C;&#x4EE5;&#x8986;&#x76D6; PC &#x4E2D;&#x539F;&#x6765;&#x7684;&#x503C;&#x3002; &#x4E8C;&#x3001;&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#x8FC7;&#x7A0B;2.1 &#x4ECE;&#x952E;&#x76D8;&#x4E0A;&#x8BFB;&#x53D6; hello &#x547D;&#x4EE4;&#x5F53;&#x5728; Unix &#x7CFB;&#x7EDF;&#x7684; shell &#x7A0B;&#x5E8F;&#x547D;&#x4EE4;&#x884C;&#x91CC;&#x8F93;&#x5165;&#x201D;./hello&#x201D;&#x7684;&#x65F6;&#x5019;&#xFF0C; shell &#x7A0B;&#x5E8F;&#x4F1A;&#x5C06;&#x7528;&#x6237;&#x8F93;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x9010;&#x4E2A;&#x52A0;&#x8F7D;&#x5230;&#x5BC4;&#x5B58;&#x5668;&#x91CC;&#xFF0C;&#x518D;&#x628A;&#x5B83;&#x5B58;&#x50A8;&#x5230;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#xFF0C;&#x6B64;&#x65F6; shell &#x5E72;&#x7684;&#x4E8B;&#x60C5;&#x5C31;&#x662F;&#x5C06;&#x6572;&#x6253;&#x51FA;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x7B26;&#x53F7;&#x663E;&#x793A;&#x5728;&#x663E;&#x793A;&#x5668;&#x4E0A;&#xFF0C;&#x8FD8;&#x6CA1;&#x6709;&#x6267;&#x884C;&#x8FD9;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C; &#x76F4;&#x5230;&#x7528;&#x6237;&#x6572;&#x51FB;&#x56DE;&#x8F66;&#x952E;&#xFF0C;&#x5219; shell &#x7A0B;&#x5E8F;&#x5C31;&#x5F00;&#x59CB;&#x5C06;&#x8FD9;&#x4E2A; hello &#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#xFF1A; &#x4ECE;&#x78C1;&#x76D8;&#x52A0;&#x8F7D;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x5230;&#x4E3B;&#x5B58; &#x8BA1;&#x7B97;&#x673A;&#x8FD8;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x76F4;&#x63A5;&#x5B58;&#x50A8;&#x5668;&#x5B58;&#x53D6;&#xFF08;DMA&#xFF09;&#x7684;&#x6280;&#x672F;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x6570;&#x636E;&#x76F4;&#x63A5;&#x4ECE;&#x78C1;&#x76D8;&#x5230;&#x8FBE;&#x4E3B;&#x5B58;&#xFF08;&#x4E0D;&#x901A;&#x8FC7;&#x5904;&#x7406;&#x5668;&#xFF09;&#xFF1A; 2.2 &#x5C06;&#x8F93;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#x4ECE;&#x5185;&#x5B58;&#x5199;&#x5230;&#x663E;&#x793A;&#x5668; &#x660E;&#x786E;&#x4E00;&#x70B9;&#xFF1A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6; hello &#x6267;&#x884C;&#x7684;&#x6700;&#x7EC8;&#x76EE;&#x7684;&#x662F;&#x6253;&#x5370;&quot;hello, world\n&quot;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x662F;&#x6570;&#x636E;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x5B57;&#x7B26;&#x7B26;&#x53F7;&#x5747;&#x662F;&#x6570;&#x636E;&#x4E4B;&#x5916;&#x7684;&#x7A7A;&#x683C;&#x7B26;&#x53F7;&#x53CA;&#x673A;&#x5668;&#x8BED;&#x8A00;&#x6307;&#x4EE4;&#x3002; &#x9996;&#x5148;&#x5C06; hello &#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#xFF08;&#x6570;&#x636E;&#x5C31;&#x5305;&#x62EC;&quot;hello, world\n&quot;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF09;&#x4ECE;&#x78C1;&#x76D8;&#x590D;&#x5236;&#x5230;&#x4E3B;&#x5B58;&#xFF0C;&#x5F53;&#x4E3B;&#x5B58;&#x91CC;&#x52A0;&#x8F7D;&#x597D;&#x4E86; hello &#x6587;&#x4EF6;&#x7684;&#x5168;&#x90E8;&#x4FE1;&#x606F;&#xFF0C;&#x5904;&#x7406;&#x5668;&#x5C31;&#x5904;&#x7406;&#x5668;&#x5C31;&#x5F00;&#x59CB;&#x6267;&#x884C; hello &#x7A0B;&#x5E8F;&#x7684;main &#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x673A;&#x5668;&#x8BED;&#x8A00;&#x6307;&#x4EE4;&#xFF0C;&#x8FD9;&#x4E9B;&#x6307;&#x4EE4;&#x5728; PC &#x4E2D;&#x9010;&#x884C;&#x6267;&#x884C;&#xFF0C;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x5C06;&quot;hello, world\n&quot;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x5B57;&#x8282;&#x4FE1;&#x606F;&#x4ECE;&#x4E3B;&#x5B58;&#x590D;&#x5236;&#x5230;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6;&#xFF0C;&#x518D;&#x4ECE;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6;&#x4E2D;&#x590D;&#x5236;&#x5230;&#x663E;&#x793A;&#x8BBE;&#x5907;&#xFF0C;&#x6700;&#x7EC8;&#x663E;&#x793A;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#xFF1A; &#x4E09;&#x3001;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x6839;&#x636E;&#x673A;&#x68B0;&#x539F;&#x7406;&#xFF0C;&#x8F83;&#x5927;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x8981;&#x6BD4;&#x8F83;&#x5C0F;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x8FD0;&#x884C;&#x5F97;&#x6162;&#xFF0C;&#x800C;&#x5FEB;&#x901F;&#x8BBE;&#x5907;&#x7684;&#x9020;&#x4EF7;&#x8FDC;&#x9AD8;&#x4E8E;&#x540C;&#x7C7B;&#x7684;&#x4F4E;&#x901F;&#x8BBE;&#x5907;&#x3002;&#x7C7B;&#x4F3C;&#x5730;&#xFF0C;&#x5904;&#x7406;&#x5668;&#x4ECE;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6;&#x4E2D;&#x8BFB;&#x6570;&#x636E;&#x7684;&#x901F;&#x5EA6;&#x6BD4;&#x4ECE;&#x4E3B;&#x5B58;&#x4E2D;&#x8BFB;&#x53D6;&#x51E0;&#x4E4E;&#x8981;&#x5FEB; 100 &#x500D;+&#x3002; &#x9488;&#x5BF9;&#x8FD9;&#x79CD;&#x5904;&#x7406;&#x5668;&#x4E0E;&#x4E3B;&#x5B58;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x8005;&#x91C7;&#x7528;&#x4E86;&#x66F4;&#x5C0F;&#x3001;&#x66F4;&#x5FEB;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#xFF0C;&#x5373;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x5B58;&#x50A8;&#x5668;&#xFF08;&#x7B80;&#x79F0;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#xFF09;&#xFF0C;&#x4F5C;&#x4E3A;&#x6682;&#x65F6;&#x7684;&#x96C6;&#x7ED3;&#x533A;&#x57DF;&#xFF0C;&#x7528;&#x6765;&#x5B58;&#x653E;&#x5904;&#x7406;&#x5668;&#x8FD1;&#x671F;&#x53EF;&#x80FD;&#x4F1A;&#x9700;&#x8981;&#x7684;&#x4FE1;&#x606F;&#xFF1A; &#x4E0A;&#x56FE;&#x4E2D;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x5B58;&#x50A8;&#x5668;&#x4F4D;&#x4E8E;&#x5904;&#x7406;&#x5668;&#x82AF;&#x7247;&#x4E0A;&#xFF0C;&#x73B0;&#x4EE3;&#x786C;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E00;&#x822C;&#x5305;&#x542B;&#x7740;&#x4E09;&#x7EA7;&#x9AD8;&#x901F;&#x7F13;&#x5B58; &#xFF1A;L1&#x3001;L2 &#x548C; L3&#x3002;&#x5176;&#x4E2D;&#xFF1A;L1 &#x548C; L2 &#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x662F;&#x7528;&#x4E00;&#x79CD;&#x53EB;&#x505A;&#x9759;&#x6001;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x5B58;&#x50A8;&#x5668;&#xFF08;SRAM&#xFF09;&#x7684;&#x786C;&#x4EF6;&#x6280;&#x672F;&#x5B9E;&#x73B0;&#x7684;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x901A;&#x8FC7;&#x8BA9;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x91CC;&#x5B58;&#x653E;&#x53EF;&#x80FD;&#x7ECF;&#x5E38;&#x8BBF;&#x95EE;&#x7684;&#x6570;&#x636E;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x64CD;&#x4F5C;&#x90FD;&#x80FD;&#x5728;&#x5FEB;&#x901F;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x4E2D;&#x5B8C;&#x6210;&#xFF0C;&#x56E0;&#x6B64;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x7684;&#x76EE;&#x7684;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#xFF1A;&#x5FEB;&#x901F;&#x3001;&#x9AD8;&#x6548;&#x7387;&#xFF0C;&#x672C;&#x4E66;&#x6709;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x7ED3;&#x8BBA;&#x4E4B;&#x4E00;&#xFF0C;&#x5C31;&#x662F;&#x610F;&#x8BC6;&#x5230;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x5B58;&#x5728;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5458;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x5C06;&#x4ED6;&#x4EEC;&#x7A0B;&#x5E8F;&#x7684;&#x6027;&#x80FD;&#x63D0;&#x9AD8;&#x4E00;&#x4E2A;&#x6570;&#x91CF;&#x7EA7;&#x3002; &#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x5F62;&#x6210;&#x5C42;&#x6B21;&#x7ED3;&#x6784; &#x5728;&#x5C0F;&#x5FEB;&#x9AD8;&#x4EF7;&#x7684;&#x5904;&#x7406;&#x5668;&#x548C;&#x5927;&#x6162;&#x5EC9;&#x4EF7;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x4F7F;&#x5F97;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x5728;&#x8BBE;&#x8BA1;&#x5B58;&#x50A8;&#x7CFB;&#x7EDF;&#x7ED3;&#x6784;&#x4E4B;&#x521D;&#x5C31;&#x9075;&#x5FAA;&#x4E00;&#x4E2A;&#x5F88;&#x91CD;&#x8981;&#x5F88;&#x666E;&#x904D;&#x7684;&#x89C2;&#x5FF5;&#xFF1A;&#x6BCF;&#x4E2A;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x90FD;&#x88AB;&#x7EC4;&#x7EC7;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x5B58;&#x50A8;&#x5668;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x3002; &#x5728;&#x8FD9;&#x4E2A;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x4E2D;&#xFF0C;&#x4ECE;&#x4E0A;&#x81F3;&#x4E0B;&#xFF0C;&#x8BBE;&#x5907;&#x53D8;&#x5F97;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x8D8A;&#x6765;&#x8D8A;&#x6162;&#x3001;&#x5BB9;&#x91CF;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x5E76;&#x4E14;&#x6BCF;&#x5B57;&#x8282;&#x7684;&#x9020;&#x4EF7;&#x4E5F;&#x8D8A;&#x6765;&#x8D8A;&#x4FBF;&#x5B9C;&#x3002;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6;&#x5728;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x4E2D;&#x4F4D;&#x4E8E;&#x6700;&#x9876;&#x90E8;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7B2C; 0 &#x7EA7;&#x6216;&#x8BB0;&#x4E3A; L0&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x7684;&#x662F;&#x4E09;&#x5C42;&#x9AD8;&#x901F;&#x7F13;&#x5B58; L1 &#x5230; L3&#xFF0C;&#x5360;&#x636E;&#x5B58;&#x50A8;&#x5668;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x7684;&#x7B2C; 1 &#x5C42;&#x5230;&#x7B2C; 3 &#x5C42;&#x3002;&#x4E3B;&#x5B58;&#x5728;&#x7B2C; 4 &#x5C42;&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002; &#x5B58;&#x50A8;&#x5668;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x7684;&#x4E3B;&#x8981;&#x601D;&#x60F3;&#x662F;&#x4E00;&#x5C42;&#x4E0A;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x4F5C;&#x4E3A;&#x4F4E;&#x4E00;&#x5C42;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5BC4;&#x5B58;&#x5668;&#x6587;&#x4EF6;&#x5C31;&#x662F; L1 &#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#xFF0C;L1 &#x662F; L2 &#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#xFF0C;L2 &#x662F; L3 &#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#xFF0C;L3 &#x662F;&#x4E3B;&#x5B58;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#xFF0C;&#x800C;&#x4E3B;&#x5B58;&#x53C8;&#x662F;&#x78C1;&#x76D8;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x3002;&#x5728;&#x67D0;&#x4E9B;&#x5177;&#x6709;&#x5206;&#x5E03;&#x5F0F;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x7F51;&#x7EDC;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x672C;&#x5730;&#x78C1;&#x76D8;&#x5C31;&#x662F;&#x5B58;&#x50A8;&#x5728;&#x5176;&#x4ED6;&#x7CFB;&#x7EDF;&#x4E2D;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x3002; &#x6B63;&#x5982;&#x53EF;&#x4EE5;&#x8FD0;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x7684;&#x77E5;&#x8BC6;&#x6765;&#x63D0;&#x9AD8;&#x7A0B;&#x5E8F;&#x6027;&#x80FD;&#x4E00;&#x6837;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x5BF9;&#x6574;&#x4E2A;&#x5B58;&#x50A8;&#x5668;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x7684;&#x7406;&#x89E3;&#x6765;&#x63D0;&#x9AD8;&#x7A0B;&#x5E8F;&#x6027;&#x80FD;&#x3002; &#x56DB;&#x3001;&#x5C0F;&#x7ED3;&#x59CB;&#x7EC8;&#x7262;&#x8BB0;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x662F;&#x7531;&#x786C;&#x4EF6;&#x548C;&#x7A0B;&#x5E8F;&#x8F6F;&#x4EF6;&#x7EC4;&#x6210;&#xFF0C;&#x800C;&#x4E24;&#x8005;&#x5F52;&#x6839;&#x5230;&#x5E95;&#x5747;&#x4E3A;&#x4E86;&#x5B58;&#x50A8;&#x4FE1;&#x606F;&#x800C;&#x670D;&#x52A1;&#xFF0C;&#x5373;&#x4F7F;&#x662F;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x8BA1;&#x7B97;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x4EA7;&#x751F;&#x4E34;&#x65F6;&#x7684;&#x201C;&#x591A;&#x4F59;&#x4FE1;&#x606F;&#x201D;&#xFF0C;&#x4E5F;&#x9700;&#x8981;&#x6709;&#x4E00;&#x4E2A;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#x7528;&#x6765;&#x5BC4;&#x5B58;&#x4EE5;&#x5907;&#x540E;&#x7528;&#x3002; &#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x8981;&#x60F3;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#x5E76;&#x4E0D;&#x662F;&#x60F3;&#x6211;&#x4EEC;&#x7B80;&#x5355;&#x60F3;&#x8C61;&#x90A3;&#x6837;&#x4E00;&#x773C;&#x5C31;&#x80FD;&#x8BC6;&#x522B;&#x5E76;&#x201C;&#x8DD1;&#x8D77;&#x6765;&#x201D;&#xFF0C;&#x800C;&#x7ECF;&#x8FC7;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x5404;&#x53F8;&#x5176;&#x804C;&#x7684;&#x5404;&#x4E2A;&#x7EC4;&#x4EF6;&#x8FDB;&#x884C;&#x76F8;&#x4E92;&#x5408;&#x4F5C;&#xFF0C;&#x4ECE;&#x800C;&#x5B8C;&#x7F8E;&#x5730;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x8981;&#x60F3;&#x8BA1;&#x7B97;&#x673A;&#x505A;&#x51FA;&#x7684;&#x7ED3;&#x679C;&#x3002; &#x786C;&#x4EF6;&#x4E2D;&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#xFF1A;&#x603B;&#x7EBF;&#x662F;&#x4EBA;&#x4EEC;&#x5E38;&#x8BF4;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x4F4D;&#x6570;&#xFF1B;&#x4E3B;&#x5B58;&#x662F;&#x5B58;&#x50A8;&#x9A71;&#x52A8;&#x5668;&#xFF08;&#x78C1;&#x76D8;&#xFF09;&#xFF1B;I/O&#x8BBE;&#x5907;&#x4E00;&#x822C;&#x5305;&#x62EC;&#x9F20;&#x6807;&#x3001;&#x952E;&#x76D8;&#x3001;&#x663E;&#x793A;&#x5668;&#xFF0C;&#x8FD8;&#x6709;&#x66F4;&#x72ED;&#x4E49;&#x7684;&#x7F51;&#x7EDC;&#xFF1B;&#x5904;&#x7406;&#x5668;&#x5219;&#x662F;&#x7684;&#x6574;&#x4E2A;&#x8BA1;&#x7B97;&#x673A;&#x8FD0;&#x7B97;&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x5B83;&#x4E0E;&#x524D;&#x4E24;&#x8005;&#x5728;&#x603B;&#x7EBF;&#x7684;&#x57FA;&#x7840;&#x4E4B;&#x4E0A;&#x627F;&#x8F7D;&#x7740;&#x201C;&#x63A7;&#x5236;&#x4E3B;&#x6743;&#x201D;&#xFF0C;&#x5B83;&#x662F;&#x89E3;&#x91CA;&#xFF08;&#x6216;&#x6267;&#x884C;&#xFF09;&#x5B58;&#x50A8;&#x5728;&#x4E3B;&#x5B58;&#x4E2D;&#x6307;&#x4EE4;&#x7684;&#x5F15;&#x64CE;&#xFF0C;&#x5176;&#x4E2D;&#x8BB0;&#x5F55;&#x7740;&#x4E00;&#x884C;&#x884C;&#x6307;&#x4EE4;&#x7684;&#x53EB;PC&#xFF08;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#xFF09;&#xFF0C;&#x7B97;&#x672F; / &#x903B;&#x8F91;&#x5355;&#x5143;&#xFF08;ALU&#xFF09;&#x8D1F;&#x8D23;&#x5BF9;&#x6570;&#x503C;&#x8FDB;&#x884C;&#x7B97;&#x672F;&#x6216;&#x903B;&#x8F91;&#x64CD;&#x4F5C;&#xFF0C;&#x64CD;&#x4F5C;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x8D77;&#x59CB;&#x548C;&#x7EC8;&#x6B62;&#x4FE1;&#x606F;&#x5728;&#x5BC4;&#x5B58;&#x5668;&#x91CC;&#x53CD;&#x590D;&#x7684;&#x66F4;&#x65B0;&#x5B58;&#x50A8;&#xFF0C;&#x5F53;&#x5904;&#x7406;&#x5668;&#x6267;&#x884C;&#x89E3;&#x91CA;&#x5B8C;&#x6240;&#x6709;&#x7684;&#x6307;&#x4EE4;&#x4E4B;&#x540E;&#xFF0C;&#x5C06;&#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x7ED3;&#x679C;&#x5728;&#x5B58;&#x50A8;&#x5230;&#x4E3B;&#x5B58;&#x4E2D;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>深入理解计算机系统</category>
      </categories>
      <tags>
        <tag>基础原理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深入理解计算机系统 | 学习笔记（一）]]></title>
    <url>%2F2018%2F10%2F16%2F010%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x4FE1;&#x606F;&#x5C31;&#x662F;&#x4F4D; + &#x4E0A;&#x4E0B;&#x6587; &#x4F5C;&#x8005;&#x4F7F;&#x7528;&#x7684;&#x6807;&#x9898;&#x662F;&#xFF1A;&#x4FE1;&#x606F;&#x5C31;&#x662F;&#x4F4D; + &#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x90A3;&#x4E48;&#x95EE;&#x9898;&#x6765;&#x4E86;&#xFF1A;&#x4EC0;&#x4E48;&#x662F;&#x4F4D;&#xFF1F;&#x4EC0;&#x4E48;&#x662F;&#x4E0A;&#x4E0B;&#x6587;&#xFF1F; &#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x662F;&#x7531;&#x786C;&#x4EF6;&#x548C;&#x7CFB;&#x7EDF;&#x8F6F;&#x4EF6;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x5B83;&#x4EEC;&#x5171;&#x540C;&#x5DE5;&#x4F5C;&#x6765;&#x8FD0;&#x884C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x6240;&#x6709;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x90FD;&#x6709;&#x76F8;&#x4F3C;&#x7684;&#x786C;&#x4EF6;&#x548C;&#x8F6F;&#x4EF6;&#x7EC4;&#x4EF6;&#xFF0C;&#x5B83;&#x4EEC;&#x6267;&#x884C;&#x7740;&#x76F8;&#x4F3C;&#x7684;&#x529F;&#x80FD;&#x3002; &#x4ECE;&#x67D0;&#x79CD;&#x610F;&#x4E49;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x672C;&#x4E66;&#x7684;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x8981;&#x5E2E;&#x52A9;&#x4F60;&#x4E86;&#x89E3;&#x5F53;&#x4F60;&#x5728;&#x7CFB;&#x7EDF;&#x4E0A;&#x6267;&#x884C; hello &#x7A0B;&#x5E8F;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x53D1;&#x751F;&#x4E86;&#x4EC0;&#x4E48;&#x4EE5;&#x53CA;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x8FD9;&#x6837;&#x3002; 1234567// hello &#x7A0B;&#x5E8F;#include &lt;stdio.h&gt;int main(){ printf(&quot;hello, world\n&quot;);} hello &#x7A0B;&#x5E8F;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x662F;&#x4ECE;&#x4E00;&#x4E2A;&#x6E90;&#x7A0B;&#x5E8F;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x6E90;&#x6587;&#x4EF6;&#xFF09;&#x5F00;&#x59CB;&#x7684;&#xFF0C;&#x5373;&#x7A0B;&#x5E8F;&#x5458;&#x5229;&#x7528;&#x7F16;&#x8F91;&#x5668;&#x521B;&#x5EFA;&#x5E76;&#x4FDD;&#x5B58;&#x7684;&#x6587;&#x672C;&#x6587;&#x4EF6;&#xFF0C;&#x6587;&#x4EF6;&#x540D;&#x662F; hello.c&#x3002;&#x6E90;&#x7A0B;&#x5E8F;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x7531;&#x503C; 0 &#x548C; 1 &#x7EC4;&#x6210;&#x7684;&#x4F4D;&#xFF08;bit&#xFF09;&#x5E8F;&#x5217;&#xFF0C;8 &#x4E2A;&#x4F4D;&#x88AB;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x7EC4;&#xFF0C;&#x79F0;&#x4E3A;&#x5B57;&#x8282;&#x3002;&#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x8868;&#x793A;&#x7A0B;&#x5E8F;&#x4E2D;&#x67D0;&#x4E2A;&#x6587;&#x672C;&#x5B57;&#x7B26;&#x3002; hello &#x6E90;&#x7A0B;&#x5E8F;&#x662F;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x7F16;&#x5199;&#x7684;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528; HxD &#xFF08;&#x514D;&#x8D39;&#x7684;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x548C;&#x78C1;&#x76D8;&#x6570;&#x636E;&#x7F16;&#x8F91;&#x5668;&#xFF09;&#x5BF9;&#x6E90;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x6E90;&#x7801;&#x67E5;&#x770B;&#xFF1A; &#x4ECE;&#x4E0A;&#x56FE;&#x53EF;&#x4EE5;&#x770B;&#x89C1;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x6E90;&#x7801;&#x5B57;&#x7B26;&#x6700;&#x7EC8;&#x90FD;&#x4F1A;&#x88AB;&#x8F6C;&#x4E3A;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x5B57;&#x3002;&#x50CF; hello.c &#x8FD9;&#x6837;&#x53EA;&#x7531; ASCII &#x5B57;&#x7B26;&#x6784;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x79F0;&#x4E3A;&#x6587;&#x672C;&#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x6587;&#x4EF6;&#x90FD;&#x79F0;&#x4E3A;&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#x3002;hello.c &#x7684;&#x8868;&#x793A;&#x65B9;&#x6CD5;&#x8BF4;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x7684;&#x601D;&#x60F3; &#xFF1A;&#x7CFB;&#x7EDF;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x4FE1;&#x606F;&#xFF08;&#x5305;&#x62EC;&#x78C1;&#x76D8;&#x6587;&#x4EF6;&#x3001;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#x7684;&#x7A0B;&#x5E8F;&#x3001;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#x5B58;&#x653E;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;&#x4EE5;&#x53CA;&#x7F51;&#x7EDC;&#x4E0A;&#x4F20;&#x9001;&#x7684;&#x6570;&#x636E;&#xFF09;&#xFF0C;&#x90FD;&#x662F;&#x7531;&#x4E00;&#x4E32;&#x4F4D;&#x8868;&#x793A;&#x7684;&#x3002;&#x533A;&#x5206;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x7684;&#x552F;&#x4E00;&#x65B9;&#x6CD5;&#x662F;&#x6211;&#x4EEC;&#x8BFB;&#x5230;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x65F6;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;&#x540C;&#x6837;&#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x53EF;&#x80FD;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#x3001;&#x6D6E;&#x70B9;&#x6570;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x6216;&#x8005;&#x673A;&#x5668;&#x6307;&#x4EE4;&#x3002; &#x6784;&#x6210;&#x8BA1;&#x7B97;&#x673A;&#x4FE1;&#x606F;&#x5B58;&#x50A8;&#x5355;&#x5143;&#x662F; bit&#xFF08;&#x4F4D;&#xFF09;&#xFF0C;&#x5982;&#x679C;&#x4EE5; 1 &#x4F4D;&#x4E3A;&#x5355;&#x4F4D;&#x8BB0;&#x5F55;&#x4FE1;&#x606F;&#xFF0C;&#x672A;&#x514D;&#x6709;&#x70B9;&#x4F4E;&#x6548;&#x3002;&#x5982;&#x679C;&#x91C7;&#x7528; 8 &#x4E2A;&#x4F4D;&#x4E3A;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x5355;&#x4F4D;&#xFF0C;&#x53EF;&#x4EE5;&#x7EC4;&#x5408;&#x51FA; 256 &#x79CD;&#x4E0D;&#x540C;&#x7684;&#x7B26;&#x53F7;&#x8868;&#x793A;&#xFF0C;&#x8FD9;&#x6837;&#x4F20;&#x8F93;&#x4E5F;&#x65B9;&#x4FBF;&#xFF0C;&#x4E5F;&#x4FBF;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x5B58;&#x50A8;&#x4FE1;&#x606F;&#x3002;&#x77E5;&#x9053;&#x4F4D;&#x7684;&#x6982;&#x5FF5;&#x8FD8;&#x4E0D;&#x591F;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x5BF9;&#x5F53;&#x524D;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x4F4D;&#x4E2D;&#x7684;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B57;&#x7B26;&#x7F16;&#x7801;&#x89C4;&#x5219;&#x5F97;&#x77E5;&#xFF0C;&#x4F46;&#x662F;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x9664;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x7EAF;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x6587;&#x4EF6;&#xFF08;&#x56FE;&#x7247;&#x3001;&#x97F3;&#x89C6;&#x9891;&#xFF09;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x5982;&#x4F55;&#x5F97;&#x77E5;&#x67D0;&#x51E0;&#x4E2A;&#x4F4D;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x662F;&#x4E00;&#x4E32;&#x6709;&#x610F;&#x4E49;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x77E5;&#x9053;&#x4ECE;&#x54EA;&#x91CC;&#x622A;&#x53D6;&#x5F00;&#x59CB;&#x5230;&#x54EA;&#x91CC;&#x7ED3;&#x675F;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x4E0A;&#x4E0B;&#x6587;&#x6765;&#x5F97;&#x77E5;&#x3002; &#x4E8C;&#x3001;ASCII &#x7801;ASCII&#xFF08;American Standard Code for Information Interchange&#xFF0C;&#x7F8E;&#x56FD;&#x6807;&#x51C6;&#x4FE1;&#x606F;&#x4EA4;&#x6362;&#x4EE3;&#x7801;&#xFF09;&#x662F;&#x57FA;&#x4E8E;&#x62C9;&#x4E01;&#x5B57;&#x6BCD;&#x7684;&#x4E00;&#x5957;&#x7535;&#x8111;&#x7F16;&#x7801;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x663E;&#x793A;&#x73B0;&#x4EE3;&#x82F1;&#x8BED;&#x548C;&#x5176;&#x4ED6;&#x897F;&#x6B27;&#x8BED;&#x8A00;&#x3002;&#x5B83;&#x662F;&#x73B0;&#x4ECA;&#x6700;&#x901A;&#x7528;&#x7684;&#x5355;&#x5B57;&#x8282;&#x7F16;&#x7801;&#x7CFB;&#x7EDF;&#xFF0C;&#x5E76;&#x7B49;&#x540C;&#x4E8E;&#x56FD;&#x9645;&#x6807;&#x51C6;ISO/IEC 646&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x91CC;&#xFF0C;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6709; 8 &#x4E2A; bit&#xFF08;&#x4F4D;&#xFF09;&#xFF0C;&#x7528;&#x4E8C;&#x8FDB;&#x5236;&#xFF08;1 &#x548C; 0&#xFF09;&#x7EC4;&#x5408;&#x8868;&#x793A;&#xFF0C;&#x5219;&#x6709; 2 &#x7684; 8 &#x6B21;&#x65B9;&#x79CD;&#x53EF;&#x80FD;&#x6570;&#x5B57;&#xFF0C;&#x4ECE;&#x96F6;&#x5F00;&#x59CB;&#x8BA1;&#x6570;&#xFF0C;&#x5219;&#x4E3A; 0 - 255&#xFF0C;&#x65E9;&#x671F;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x5BB6;&#x4EEC;&#x4EE5;&#x4E3A;&#x8FD9; 256 &#x79CD;&#x6570;&#x5B57;&#x591F;&#x8868;&#x793A;&#x65E5;&#x5E38;&#x4F7F;&#x7528;&#x7684;&#x7B26;&#x53F7;&#x4FE1;&#x606F;&#x4E86;&#xFF08;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#xFF0C;&#x963F;&#x62C9;&#x4F2F;&#x6570;&#x5B57;&#xFF0C;&#x63A7;&#x5236;&#x5B57;&#x7B26;&#x7B49;&#xFF09;&#x3002; &#x7B2C;&#x4E00;&#x90E8;&#x5206;&#xFF1A;ASCII &#x975E;&#x6253;&#x5370;&#x63A7;&#x5236;&#x5B57;&#x7B26;&#x8868; ASCII &#x8868;&#x4E0A;&#x7684;&#x6570;&#x5B57; 0&#x2013;31 &#x5206;&#x914D;&#x7ED9;&#x4E86;&#x63A7;&#x5236;&#x5B57;&#x7B26;&#xFF0C;&#x7528;&#x4E8E;&#x63A7;&#x5236;&#x50CF;&#x6253;&#x5370;&#x673A;&#x7B49;&#x4E00;&#x4E9B;&#x5916;&#x56F4;&#x8BBE;&#x5907;&#x3002;&#x4F8B;&#x5982;&#xFF0C;12 &#x4EE3;&#x8868;&#x6362;&#x9875;/&#x65B0;&#x9875;&#x529F;&#x80FD;&#x3002;&#x6B64;&#x547D;&#x4EE4;&#x6307;&#x793A;&#x6253;&#x5370;&#x673A;&#x8DF3;&#x5230;&#x4E0B;&#x4E00;&#x9875;&#x7684;&#x5F00;&#x5934;&#x3002; &#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#xFF1A;ASCII &#x6253;&#x5370;&#x5B57;&#x7B26; &#x6570;&#x5B57; 32&#x2013;126 &#x5206;&#x914D;&#x7ED9;&#x4E86;&#x80FD;&#x5728;&#x952E;&#x76D8;&#x4E0A;&#x627E;&#x5230;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5F53;&#x60A8;&#x67E5;&#x770B;&#x6216;&#x6253;&#x5370;&#x6587;&#x6863;&#x65F6;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x3002;&#x6570;&#x5B57; 127 &#x4EE3;&#x8868; DELETE &#x547D;&#x4EE4;&#x3002; &#x7B2C;&#x4E09;&#x90E8;&#x5206;&#xFF1A;&#x6269;&#x5C55; ASCII &#x6253;&#x5370;&#x5B57;&#x7B26; &#x6269;&#x5C55;&#x7684; ASCII &#x5B57;&#x7B26;&#x6EE1;&#x8DB3;&#x4E86;&#x5BF9;&#x66F4;&#x591A;&#x5B57;&#x7B26;&#x7684;&#x9700;&#x6C42;&#x3002;&#x6269;&#x5C55;&#x7684; ASCII &#x5305;&#x542B; ASCII &#x4E2D;&#x5DF2;&#x6709;&#x7684; 128 &#x4E2A;&#x5B57;&#x7B26;&#xFF08;&#x6570;&#x5B57; 0&#x2013;32 &#x663E;&#x793A;&#x5728;&#x4E0B;&#x56FE;&#x4E2D;&#xFF09;&#xFF0C;&#x53C8;&#x589E;&#x52A0;&#x4E86; 128 &#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x603B;&#x5171;&#x662F; 256 &#x4E2A;&#x3002; ASCII &#x7801;&#x8868;&#x6709;&#x5B83;&#x7684;&#x5C40;&#x9650;&#x6027;&#xFF1A;&#x968F;&#x7740;&#x5168;&#x4E16;&#x754C;&#x4EBA;&#x90FD;&#x5728;&#x4F7F;&#x7528;&#x8BA1;&#x7B97;&#x673A;&#xFF0C;&#x800C;&#x5168;&#x4E16;&#x754C;&#x4F7F;&#x7528;&#x7B26;&#x53F7;&#x7684;&#x79CD;&#x7C7B;&#x8FDC;&#x8D85;&#x8FC7;&#x4E86; 256 &#x79CD;&#xFF0C;&#x56E0;&#x6B64; ASCII &#x7801;&#x8868;&#x5DF2;&#x7ECF;&#x88C5;&#x4E0D;&#x4E0B;&#x66F4;&#x591A;&#x7684;&#x7B26;&#x53F7;&#x4FE1;&#x606F;&#xFF08;&#x975E;&#x82F1;&#x8BED;&#x56FD;&#x5BB6;&#x7684;&#x6587;&#x5B57;&#x7B26;&#x53F7;&#x4FE1;&#x606F;&#xFF1A;&#x62C9;&#x4E01;&#x6587;&#x3001;&#x4E2D;&#x6587;&#x3001;&#x65E5;&#x97E9;&#x6587;&#x7B49;&#xFF09;&#xFF0C;&#x4E8E;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x5BB6;&#x4EEC;&#x53C8;&#x89C4;&#x5B9A;&#x51FA;&#x4E86; Unicode&#xFF08;&#x4E2D;&#x6587;&#x8BD1;&#x4E3A;&#xFF1A;&#x4E07;&#x56FD;&#x7801;&#x3001;&#x56FD;&#x9645;&#x7801;&#x3001;&#x7EDF;&#x4E00;&#x7801;&#x3001;&#x5355;&#x4E00;&#x7801;&#xFF09;&#xFF0C;&#x5373;&#x5168;&#x7403;&#x901A;&#x7528;&#x5B57;&#x7B26;&#x96C6;&#x7684;&#x6807;&#x51C6;&#x3002; Unicode &#x6807;&#x51C6;&#x89C4;&#x5B9A;&#xFF1A;&#x4F7F;&#x7528;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#x5355;&#x4F4D;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x7B26;&#x53F7;&#x7684;&#x79CD;&#x7C7B;&#x4E3A; 2 &#x7684;16 &#x6B21;&#x65B9;&#xFF0C;&#x4E5F;&#x5C31;&#x662F; 65536 &#x79CD;&#xFF0C;&#x8FD9;&#x6837;&#x5168;&#x4E16;&#x754C;&#x4EBA;&#x4F7F;&#x7528;&#x7684;&#x7B26;&#x53F7;&#x4FE1;&#x606F;&#x90FD;&#x53EF;&#x4EE5;&#x56CA;&#x62EC;&#x3002; &#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F; Unicode &#x662F;&#x4E00;&#x79CD;&#x8BA1;&#x7B97;&#x673A;&#x5DE5;&#x4E1A;&#x6807;&#x51C6;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6307;&#x5B9A;&#x662F;&#x4EC0;&#x4E48;&#x5B57;&#x7B26;&#x96C6;&#x5B9E;&#x73B0;&#xFF0C;&#x5B83;&#x6DB5;&#x517C;&#x5BB9;&#x4E86; ASCII &#x7801;&#x8868;&#x89C4;&#x5219;&#xFF0C;&#x56E0;&#x6B64;&#x76EE;&#x524D;&#x6240;&#x6709;&#x7684;&#x8BA1;&#x7B97;&#x90FD;&#x4F1A;&#x81F3;&#x5C11;&#x8BA4;&#x8BC6; ASCII &#x7801;&#x8868;&#x89C4;&#x5219;&#x3002; &#x73B0;&#x5728;&#x56FD;&#x9645;&#x5E38;&#x7528;&#x7684;UTF-8 &#x7F16;&#x7801;&#x5C31;&#x662F;&#x9075;&#x5FAA;&#x4E86; Unicode &#x6807;&#x51C6;&#x7684;&#x4E00;&#x79CD;&#x5B57;&#x7B26;&#x96C6;&#x5B9E;&#x73B0;&#x3002; &#x4E09;&#x3001;&#x7A0B;&#x5E8F;&#x88AB;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x7FFB;&#x8BD1;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x683C;&#x5F0F;hello.c &#x662F;&#x8089;&#x773C;&#x53EF;&#x76F4;&#x63A5;&#x8BC6;&#x522B;&#x7684;&#x6587;&#x672C;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x4F5C;&#x4E3A;&#x673A;&#x5668;&#x6765;&#x8BF4;&#xFF0C;&#x5B83;&#x53EA;&#x8BA4;&#x8BC6;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x5B57;&#xFF08;&#x7269;&#x7406;&#x903B;&#x8F91;&#x4E0A;&#x5BF9;&#x5E94;&#x7684;&#x662F;&#xFF1A;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7535;&#x6D41;&#x6216;&#x9AD8;&#x4F4E;&#x7684;&#x7535;&#x538B;&#xFF09;&#xFF0C;&#x6587;&#x4EF6;&#x5747;&#x9644;&#x751F;&#x5728;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x4E0A;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x5957;&#x5B8C;&#x6574;&#x7684;&#x6D41;&#x7A0B;&#x5C06;&#x6E90;&#x6587;&#x4EF6;&#x7FFB;&#x8BD1;&#x6210;&#x673A;&#x5668;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x770B;&#x61C2;&#x5E76;&#x6267;&#x884C;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x6267;&#x884C;&#x8FD9;&#x56DB;&#x4E2A;&#x9636;&#x6BB5;&#x7684;&#x7A0B;&#x5E8F;&#xFF08;&#x9884;&#x5904;&#x7406;&#x5668;&#x3001;&#x7F16;&#x8BD1;&#x5668;&#x3001;&#x6C47;&#x7F16;&#x5668;&#x548C;&#x94FE;&#x63A5;&#x5668;&#xFF09;&#x4E00;&#x8D77;&#x6784;&#x6210;&#x4E86;&#x7F16;&#x8BD1;&#x7CFB;&#x7EDF;&#xFF08;compilation system&#xFF09;&#x3002; &#x4F7F;&#x7528; gcc++ &#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x7F16;&#x8BD1; hello.c &#x6E90;&#x6587;&#x4EF6;&#xFF1A; gcc &#x5E38;&#x7528;&#x7F16;&#x8BD1;&#x547D;&#x4EE4; &#x65E0;&#x9009;&#x9879;&#x7F16;&#x8BD1;&#x94FE;&#x63A5;&#x7528;&#x6CD5;&#xFF1A;gcc hello.c&#x4F5C;&#x7528;&#xFF1A;&#x5C06; hello.c &#x9884;&#x5904;&#x7406;&#x3001;&#x6C47;&#x7F16;&#x3001;&#x7F16;&#x8BD1;&#x5E76;&#x94FE;&#x63A5;&#x5F62;&#x6210;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x91CC;&#x672A;&#x6307;&#x5B9A;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#xFF0C;&#x9ED8;&#x8BA4;&#x8F93;&#x51FA;&#x4E3A; a.out&#x3002; &#x9009;&#x9879; -o&#x7528;&#x6CD5;&#xFF1A;gcc hello.c -o hello&#x4F5C;&#x7528;&#xFF1A;&#x5C06; hello.c &#x9884;&#x5904;&#x7406;&#x3001;&#x6C47;&#x7F16;&#x3001;&#x7F16;&#x8BD1;&#x5E76;&#x94FE;&#x63A5;&#x5F62;&#x6210;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6; hello&#x3002;-o &#x9009;&#x9879;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x3002; &#x9009;&#x9879; -E&#x7528;&#x6CD5;&#xFF1A;gcc -E hello.c -o hello.i&#x4F5C;&#x7528;&#xFF1A;&#x5C06; hello.c &#x9884;&#x5904;&#x7406;&#x8F93;&#x51FA; hello.i &#x6587;&#x4EF6;&#x3002; &#x9009;&#x9879; -S&#x7528;&#x6CD5;&#xFF1A;gcc -S hello.i&#x4F5C;&#x7528;&#xFF1A;&#x5C06;&#x9884;&#x5904;&#x7406;&#x8F93;&#x51FA;&#x6587;&#x4EF6; hello.i &#x6C47;&#x7F16;&#x6210; hello.s &#x6587;&#x4EF6;&#x3002; &#x9009;&#x9879; -c&#x7528;&#x6CD5;&#xFF1A;gcc -c hello.s&#x4F5C;&#x7528;&#xFF1A;&#x5C06;&#x6C47;&#x7F16;&#x8F93;&#x51FA;&#x6587;&#x4EF6; hello.s &#x7F16;&#x8BD1;&#x8F93;&#x51FA; hello.o &#x6587;&#x4EF6;&#x3002; &#x65E0;&#x9009;&#x9879;&#x94FE;&#x63A5;&#x7528;&#x6CD5;&#xFF1A;gcc hello.o -o hello&#x4F5C;&#x7528;&#xFF1A;&#x5C06;&#x7F16;&#x8BD1;&#x8F93;&#x51FA;&#x6587;&#x4EF6;test.o&#x94FE;&#x63A5;&#x6210;&#x6700;&#x7EC8;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;test&#x3002; &#x9009;&#x9879; -O&#x7528;&#x6CD5;&#xFF1A;gcc -O1 hello.c -o hello&#x4F5C;&#x7528;&#xFF1A;&#x4F7F;&#x7528;&#x7F16;&#x8BD1;&#x4F18;&#x5316;&#x7EA7;&#x522B;1&#x7F16;&#x8BD1;&#x7A0B;&#x5E8F;&#x3002;&#x7EA7;&#x522B;&#x4E3A;1~3&#xFF0C;&#x7EA7;&#x522B;&#x8D8A;&#x5927;&#x4F18;&#x5316;&#x6548;&#x679C;&#x8D8A;&#x597D;&#xFF0C;&#x4F46;&#x7F16;&#x8BD1;&#x65F6;&#x95F4;&#x8D8A;&#x957F;&#x3002; &#x9884;&#x5904;&#x7406;&#x9636;&#x6BB5;&#x3002;&#x9884;&#x5904;&#x7406;&#x5668;&#xFF08;cpp&#xFF09;&#x6839;&#x636E;&#x4EE5;&#x5B57;&#x7B26; # &#x5F00;&#x5934;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x4FEE;&#x6539;&#x539F;&#x59CB;&#x7684; C &#x7A0B;&#x5E8F;&#x3002;&#x6BD4;&#x5982; hello.c &#x4E2D;&#x7B2C; 1 &#x884C;&#x7684; #include &#x547D;&#x4EE4;&#x544A;&#x8BC9;&#x9884;&#x5904;&#x7406;&#x5668;&#x8BFB;&#x53D6;&#x7CFB;&#x7EDF;&#x5934;&#x6587;&#x4EF6; stdio.h &#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x628A;&#x5B83;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x5230;&#x7A0B;&#x5E8F;&#x6587;&#x672C;&#x4E2D;&#x3002;&#x7ED3;&#x679C;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x53E6;&#x4E00;&#x4E2A; C &#x7A0B;&#x5E8F;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x4EE5; .i &#x4F5C;&#x4E3A;&#x6587;&#x4EF6;&#x6269;&#x5C55;&#x540D;&#x3002; &#x7F16;&#x8BD1;&#x9636;&#x6BB5;&#x3002;&#x7F16;&#x8BD1;&#x5668;&#xFF08;cc1&#xFF09;&#x5C06;&#x6587;&#x672C;&#x6587;&#x4EF6; hello.i &#x7FFB;&#x8BD1;&#x6210;&#x6587;&#x672C;&#x6587;&#x4EF6; hello.s&#xFF0C;&#x5B83;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x7A0B;&#x5E8F;&#x3002;&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x6BCF;&#x6761;&#x8BED;&#x53E5;&#x90FD;&#x4EE5;&#x4E00;&#x79CD;&#x6807;&#x51C6;&#x7684;&#x6587;&#x672C;&#x683C;&#x5F0F;&#x786E;&#x5207;&#x5730;&#x63CF;&#x8FF0;&#x4E86;&#x4E00;&#x6761;&#x4F4E;&#x7EA7;&#x673A;&#x5668;&#x8BED;&#x8A00;&#x6307;&#x4EE4;&#x3002;&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x662F;&#x975E;&#x5E38;&#x6709;&#x7528;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4E3A;&#x4E0D;&#x540C;&#x9AD8;&#x7EA7;&#x8BED;&#x8A00;&#x7684;&#x4E0D;&#x540C;&#x7F16;&#x8BD1;&#x5668;&#x63D0;&#x4F9B;&#x4E86;&#x901A;&#x7528;&#x7684;&#x8F93;&#x51FA;&#x8BED;&#x8A00;&#x3002;&#x4F8B;&#x5982;&#xFF0C;C &#x7F16;&#x8BD1;&#x5668;&#x548C; Fortran &#x7F16;&#x8BD1;&#x5668;&#x4EA7;&#x751F;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x7528;&#x7684;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x3002; &#x6C47;&#x7F16;&#x9636;&#x6BB5;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6C47;&#x7F16;&#x5668;&#xFF08;as&#xFF09;&#x5C06; hello.s &#x7FFB;&#x8BD1;&#x6210;&#x673A;&#x5668;&#x8BED;&#x8A00;&#x6307;&#x4EE4;&#xFF0C;&#x628A;&#x8FD9;&#x4E9B;&#x6307;&#x4EE4;&#x6253;&#x5305;&#x6210;&#x4E00;&#x79CD;&#x53EB;&#x505A;&#x53EF;&#x91CD;&#x5B9A;&#x4F4D;&#x76EE;&#x6807;&#x7A0B;&#x5E8F;&#xFF08;relocatable object program&#xFF09;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x5E76;&#x5C06;&#x7ED3;&#x679C;&#x4FDD;&#x5B58;&#x5728;&#x76EE;&#x6807;&#x6587;&#x4EF6; hello.o &#x4E2D;&#x3002;hello.o &#x6587;&#x4EF6;&#x662F;&#x4E00;&#x4E2A;&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x7684;&#x5B57;&#x8282;&#x7F16;&#x7801;&#x662F;&#x673A;&#x5668;&#x8BED;&#x8A00;&#x6307;&#x4EE4;&#x800C;&#x4E0D;&#x662F;&#x5B57;&#x7B26;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5728;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x6253;&#x5F00; hello.o &#x6587;&#x4EF6;&#xFF0C;&#x770B;&#x5230;&#x7684;&#x5C06;&#x662F;&#x4E00;&#x5806;&#x4E71;&#x7801;&#x3002; &#x94FE;&#x63A5;&#x9636;&#x6BB5;&#x3002;&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;hello &#x7A0B;&#x5E8F;&#x8C03;&#x7528;&#x4E86; printf &#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x662F;&#x6BCF;&#x4E2A; C &#x7F16;&#x8BD1;&#x5668;&#x90FD;&#x4F1A;&#x63D0;&#x4F9B;&#x7684;&#x6807;&#x51C6; C &#x5E93;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x3002;printf &#x51FD;&#x6570;&#x5B58;&#x5728;&#x4E8E;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; printf.o &#x7684;&#x5355;&#x72EC;&#x7684;&#x9884;&#x7F16;&#x8BD1;&#x597D;&#x4E86;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5FC5;&#x987B;&#x4EE5;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x5408;&#x5E76;&#x5230;&#x6211;&#x4EEC;&#x7684; hello.o &#x7A0B;&#x5E8F;&#x4E2D;&#x3002;&#x94FE;&#x63A5;&#x5668;&#xFF08;ld&#xFF09;&#x5C31;&#x8D1F;&#x8D23;&#x5904;&#x7406;&#x8FD9;&#x79CD;&#x5408;&#x5E76;&#x3002;&#x7ED3;&#x679C;&#x5C31;&#x5F97;&#x5230; hello &#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#xFF08;&#x6216;&#x8005;&#x7B80;&#x79F0;&#x4E3A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x7531;&#x7CFB;&#x7EDF;&#x6267;&#x884C;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>深入理解计算机系统</category>
      </categories>
      <tags>
        <tag>基础原理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生苦短，转行程序员要趁早(中)]]></title>
    <url>%2F2018%2F08%2F13%2F019%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;&#x4E0D;&#x5C11;&#x670B;&#x53CB;&#x8868;&#x793A;&#x5BF9;&#x73B0;&#x5728;&#x7684;&#x81EA;&#x5DF1;&#x5F88;&#x4E0D;&#x6EE1;&#x610F;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5DE5;&#x4F5C;&#x524D;&#x666F;&#x548C;&#x6536;&#x5165;&#x4E0A;&#x6765;&#x770B;&#xFF0C;&#x611F;&#x89C9;&#x518D;&#x8FD9;&#x6837;&#x6301;&#x7EED;&#x4E0B;&#x53BB;&#xFF0C;&#x4E00;&#x8F88;&#x5B50;&#x5C31;&#x771F;&#x7684;&#x5E9F;&#x6389;&#x4E86;&#x3002;&#x5F97;&#x77E5;&#x6211;&#x5DF2;&#x7ECF;&#x6210;&#x529F;&#x8F6C;&#x884C;&#x505A;&#x4E86;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x4E8E;&#x662F;&#x60F3;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;&#x505A;&#x7A0B;&#x5E8F;&#x5458;&#x611F;&#x89C9;&#x5982;&#x4F55;&#xFF0C;&#x81EA;&#x5DF1;&#x4E5F;&#x6253;&#x7B97;&#x8F6C;&#x884C;&#x505A;&#x4E00;&#x679A;&#x7A0B;&#x5E8F;&#x5458;&#x3002; &#x5728;&#x548C;&#x670B;&#x53CB;&#x4EEC;&#x4EA4;&#x6D41;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5F53;&#x4ED6;&#x4EEC;&#x5410;&#x5608;&#x81EA;&#x5DF1;&#x7684;&#x73B0;&#x72B6;&#x548C;&#x56F0;&#x60D1;&#x65F6;&#xFF0C;&#x4E0D;&#x7981;&#x60F3;&#x8D77;&#x66FE;&#x7ECF;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x4E5F;&#x9047;&#x5230;&#x8FC7;&#x540C;&#x6837;&#x7684;&#x7126;&#x8651;&#x8FF7;&#x832B;&#x3002;&#x5728;&#x548C;&#x670B;&#x53CB;&#x4EEC;&#x4EA4;&#x6D41;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4E5F;&#x5728;&#x53CD;&#x601D;&#x81EA;&#x5DF1;&#x5728;&#x4EA4;&#x6D41;&#x8FC7;&#x7A0B;&#x4E2D;&#x8868;&#x8FBE;&#x7684;&#x60F3;&#x6CD5;&#x89C2;&#x70B9;&#x662F;&#x4E0D;&#x662F;&#x771F;&#x7684;&#x80FD;&#x5BF9;&#x81EA;&#x5DF1;&#x548C;&#x522B;&#x4EBA;&#x6709;&#x542F;&#x53D1;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4E5F;&#x66FE;&#x6E34;&#x671B;&#x6709;&#x4F4D;&#x8FC7;&#x6765;&#x4EBA;&#x80FD;&#x53EF;&#x4EE5;&#x70B9;&#x9192;&#x4E00;&#x4E0B;&#x81EA;&#x5DF1;&#x3002; &#x751F;&#x547D;&#x4E0D;&#x606F;&#xFF0C;&#x9020;&#x7CAA;&#x4E0D;&#x6B62;&#x3002;&#x7236;&#x6BCD;&#x4EEC;&#x6CA1;&#x6709;&#x7ECF;&#x8FC7;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x540C;&#x610F;&#xFF0C;&#x5F3A;&#x884C;&#x4E00;&#x6CE2;&#xFF0C;&#x5C06;&#x6211;&#x4EEC;&#x5E26;&#x4ED6;&#x4EEC;&#x7684;&#x5BB6;&#x5EAD;&#xFF0C;&#x4E8E;&#x662F;&#x5728;&#x6211;&#x4EEC;&#x5495;&#x5495;&#x5760;&#x5730;&#x7684;&#x90A3;&#x4E00;&#x523B;&#x8D77;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x6210;&#x957F;&#x5C31;&#x548C;&#x8FD9;&#x4E2A;&#x5BB6;&#x5EAD;&#x7ED1;&#x5B9A;&#x5728;&#x4E86;&#x4E00;&#x8D77;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x6027;&#x683C;&#x4EBA;&#x54C1;&#x548C;&#x6559;&#x80B2;&#x601D;&#x60F3;&#x90FD;&#x4F1A;&#x6F5C;&#x79FB;&#x9ED8;&#x5316;&#x5730;&#x5F71;&#x54CD;&#x7740;&#x6211;&#x4EEC;&#x7684;&#x6210;&#x957F;&#xFF0C;&#x672A;&#x6210;&#x5E74;&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x6C11;&#x4E8B;&#x884C;&#x4E3A;&#x80FD;&#x529B;&#xFF0C;&#x4ED6;&#x4EEC;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x552F;&#x4E00;&#x76D1;&#x62A4;&#x4EBA;&#xFF0C;&#x627F;&#x62C5;&#x7740;&#x6211;&#x4EEC;&#x7684;&#x4E00;&#x5207;&#x793E;&#x4F1A;&#x98CE;&#x9669;&#xFF0C;&#x5403;&#x559D;&#x62C9;&#x6492;&#x5747;&#x7531;&#x4ED6;&#x4EEC;&#x6765;&#x652F;&#x6301;&#x3002; &#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x6DF1;&#x77E5;&#xFF0C;&#x4EE5;&#x81EA;&#x5DF1;&#x7684;&#x80FD;&#x529B;&#x662F;&#x6559;&#x80B2;&#x4E0D;&#x4E86;&#x6211;&#x4EEC;&#x66F4;&#x591A;&#x7684;&#x79D1;&#x5B66;&#x77E5;&#x8BC6;&#xFF0C;&#x4E5F;&#x7ED9;&#x4E88;&#x4E0D;&#x4E86;&#x6211;&#x4EEC;&#x66F4;&#x591A;&#x7684;&#x53CB;&#x8C0A;&#x4E4B;&#x4E50;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x63A5;&#x53D7;&#x79D1;&#x5B66;&#x77E5;&#x8BC6;&#x6559;&#x80B2;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x4E5F;&#x5728;&#x6162;&#x6162;&#x5F62;&#x6210;&#x81EA;&#x5DF1;&#x7684;&#x4E16;&#x754C;&#x89C2;&#x548C;&#x4EBA;&#x751F;&#x89C2;&#x3002;&#x4E8E;&#x662F;&#x4ED6;&#x4EEC;&#x8FDE;&#x54C4;&#x5E26;&#x9A97;&#x5730;&#x628A;&#x54ED;&#x7740;&#x9F3B;&#x5B50;&#x4E0D;&#x53BB;&#x5B66;&#x6821;&#x7684;&#x6211;&#x4EEC;&#x9001;&#x53BB;&#x4E86;&#x5E7C;&#x513F;&#x56ED;&#xFF0C;&#x4ECE;&#x6B64;&#x6211;&#x4EEC;&#x8D70;&#x4E0A;&#x4E86;&#x6F2B;&#x957F;&#x7684;&#x5B66;&#x751F;&#xFF08;&#x5B66;&#x751F; = &#x5B66;&#x4E60; + &#x751F;&#x6D3B;&#xFF09;&#x751F;&#x6DAF;&#x3002; &#x9752;&#x6625;&#x671F;&#x7684;&#x6211;&#x4EEC;&#xFF0C;&#x6027;&#x8377;&#x5C14;&#x8499;&#x7684;&#x8086;&#x610F;&#x5206;&#x6CCC;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x5728;&#x751F;&#x7406;&#x4E0A;&#x663E;&#x5F97;&#x66F4;&#x52A0;&#x6210;&#x719F;&#xFF0C;&#x5E76;&#x6E10;&#x6E10;&#x8BA4;&#x4E3A;&#x81EA;&#x5DF1;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x72EC;&#x7ACB;&#x601D;&#x8003;&#x548C;&#x505A;&#x4E3B;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x4ED6;&#x4EEC;&#x53EF;&#x4EE5;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x628A;&#x81EA;&#x5DF1;&#x5F53;&#x4F5C;&#x5C0F;&#x5B69;&#x5B50;&#x517B;&#x80B2;&#x4E86;&#xFF0C;&#x4ECE;&#x6CD5;&#x5F8B;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5FEB;&#x6709;&#x5B8C;&#x5168;&#x6C11;&#x4E8B;&#x884C;&#x4E3A;&#x80FD;&#x529B;&#x4E86;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x627F;&#x62C5;&#x4E00;&#x5207;&#x793E;&#x4F1A;&#x98CE;&#x9669;&#x4E86;&#xFF0C;&#x7136;&#x800C;&#xFF0C;&#x6B64;&#x523B;&#x7684;&#x5403;&#x559D;&#x62C9;&#x6492;&#x8FD8;&#x662F;&#x7531;&#x4ED6;&#x4EEC;&#x6765;&#x652F;&#x6301;&#x3002; &#x5DF2;&#x7ECF;&#x8FC7;&#x4E86;&#x53DB;&#x9006;&#x671F;&#x7684;&#x6211;&#x4EEC;&#xFF0C;&#x6B64;&#x65F6;&#x7684;&#x6211;&#x4EEC;&#x7EDD;&#x5927;&#x591A;&#x6570;&#x90FD;&#x5DF2;&#x7ECF;&#x4E0A;&#x4E86;&#x9AD8;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x77E5;&#x9053;&#x4E0A;&#x9AD8;&#x4E2D;&#x5B8C;&#x4E86;&#x8981;&#x9AD8;&#x8003;&#xFF0C;&#x9AD8;&#x8003;&#x5B8C;&#x4E86;&#x53EF;&#x4EE5;&#x4E0A;&#x5927;&#x5B66;&#x3002;&#x5728;&#x7236;&#x6BCD;&#x3001;&#x8001;&#x5E08;&#x53CA;&#x4EB2;&#x670B;&#x597D;&#x53CB;&#x4EEC;&#x8FDE;&#x54C4;&#x5E26;&#x9A97;&#x5730;&#x63CF;&#x7ED8;&#x5927;&#x5B66;&#x7684;&#x81EA;&#x7531;&#x7F8E;&#x597D;&#xFF0C;&#x6211;&#x4EEC;&#x65E0;&#x65F6;&#x65E0;&#x523B;&#x4E0D;&#x5728;&#x7528;&#x610F;&#x6DEB;&#x4E0A;&#x5927;&#x5B66;&#x4E4B;&#x540E;&#x7684;&#x751F;&#x6D3B;&#x6765;&#x652F;&#x6491;&#x575A;&#x6301;&#x4E0B;&#x53BB;&#x7684;&#x4FE1;&#x5FF5;&#xFF0C;&#x6BCF;&#x5929;&#x5199;&#x7740;&#x5199;&#x4E0D;&#x5B8C;&#x7684;&#x4F5C;&#x4E1A;&#xFF0C;&#x505A;&#x7740;&#x505A;&#x4E0D;&#x5B8C;&#x7684;&#x5377;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x98CE;&#x96E8;&#x517C;&#x7A0B;&#x3001;&#x6311;&#x706F;&#x591C;&#x6218;&#xFF0C;&#x65E0;&#x65F6;&#x65E0;&#x523B;&#x4E0D;&#x60F3;&#x9003;&#x79BB;&#x5230;&#x66F4;&#x7F8E;&#x597D;&#x66F4;&#x52A0;&#x53EF;&#x4EE5;&#x8BA9;&#x201C;&#x81EA;&#x5DF1;&#x505A;&#x4E3B;&#x201D;&#x7684;&#x5730;&#x65B9;&#x3002; &#x6B64;&#x523B;&#xFF0C;&#x4EBA;&#x751F;&#x7B2C;&#x4E00;&#x6B21;&#x6709;&#x4E86;&#x70B9;&#x70B9;&#x4E3B;&#x52A8;&#x63A7;&#x5236;&#x6743;&#xFF0C;&#x53EF;&#x4EE5;&#x6311;&#x9009;&#x73B0;&#x5728;&#x5F00;&#x5FC3;&#x548C;&#x672A;&#x6765;&#x518D;&#x5F00;&#x5FC3;&#x3002; &#x5728;&#x9AD8;&#x8003;&#x7ED3;&#x675F;&#xFF0C;&#x51C6;&#x5907;&#x9009;&#x62E9;&#x5FD7;&#x613F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x4EBA;&#x751F;&#x8DEF;&#x53E3;&#xFF0C;&#x63E1;&#x7740;&#x62A5;&#x8003;&#x6307;&#x5357;&#xFF0C;&#x7FFB;&#x6765;&#x8986;&#x53BB;&#x7684;&#x6743;&#x8861;&#xFF0C;&#x5728;&#x540D;&#x5B57;&#x597D;&#x542C;&#x53C8;&#x597D;&#x770B;&#x7684;&#x9662;&#x6821;&#x548C;&#x9738;&#x6C14;&#x4FA7;&#x6F0F;&#x7684;&#x4E13;&#x4E1A;&#x540D;&#x79F0;&#x4E4B;&#x95F4;&#x5DE6;&#x53F3;&#x5BF9;&#x6BD4;&#x3001;&#x8C28;&#x614E;&#x9009;&#x62E9;&#xFF0C;&#x62C5;&#x5FC3;&#x81EA;&#x5DF1;&#x201C;&#x4E00;&#x5931;&#x8DB3;&#x6210;&#xFF0C;&#x6210;&#x5343;&#x53E4;&#x6068;&#x751F;&#x201D;&#x3002;&#x903C;&#x5230;&#x4EFD;&#x4E0A;&#xFF0C;&#x4E0D;&#x7BA1;&#x7684;&#x6068;&#x90FD;&#x5F97;&#x5FCD;&#x7740;&#x63A5;&#x53D7;&#x3002; &#x6709;&#x4E9B;&#x4EBA;&#x62CE;&#x7740;&#x884C;&#x674E;&#x8FDB;&#x4E86;&#x66FE;&#x7ECF;&#x610F;&#x6DEB;&#x7684;&#x5927;&#x5B66;&#xFF0C;&#x6709;&#x4E9B;&#x4EBA;&#x4E5F;&#x80CC;&#x7740;&#x884C;&#x674E;&#x8FDB;&#x4E86;&#x8C28;&#x614E;&#x9009;&#x62E9;&#x7684;&#x9662;&#x6821;&#xFF0C;&#x6709;&#x4E9B;&#x4EBA;&#x4E5F;&#x9A7C;&#x7740;&#x884C;&#x674E;&#x95EF;&#x8361;&#x793E;&#x4F1A;&#x53BB;&#x4E86;&#x3002; &#x66FE;&#x7ECF;&#x5728;&#x540C;&#x5C4B;&#x6A90;&#x4E0B;&#x4E00;&#x8D77;&#x610F;&#x6DEB;&#x3001;&#x594B;&#x6597;&#x7684;&#x5C0F;&#x4F19;&#x4F34;&#x4EEC;&#xFF0C;&#x5404;&#x81EA;&#x98DE;&#x7FD4;&#xFF0C;&#x4ECE;&#x6B64;&#x76F8;&#x671B;&#x4E8E;&#x6C5F;&#x6E56;&#xFF0C;&#x5373;&#x4FBF;&#x591A;&#x5E74;&#x4E4B;&#x540E;&#x518D;&#x805A;&#xFF0C;&#x6211;&#x8FD8;&#x662F;&#x6211;&#xFF0C;&#x4ED6;&#x8FD8;&#x662F;&#x4ED6;&#xFF0C;&#x5373;&#x4FBF;&#x6211;&#x8FC7;&#x5F97;&#x4E00;&#x8D2B;&#x5982;&#x6D17;&#xFF0C;&#x6211;&#x4F9D;&#x65E7;&#x5728;&#x8FD9;&#x4E2A;&#x4E16;&#x754C;&#x7684;&#x67D0;&#x4E2A;&#x89D2;&#x843D;&#xFF0C;&#x4ED6;&#x5373;&#x4FBF;&#x8FC7;&#x5F97;&#x518D;&#x98DE;&#x9EC4;&#x817E;&#x8FBE;&#xFF0C;&#x4E5F;&#x4F9D;&#x65E7;&#x5728;&#x4E16;&#x754C;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x89D2;&#x843D;&#x3002; &#x73B0;&#x5728;&#x957F;&#x5927;&#x4E86;&#xFF0C;&#x6709;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x60F3;&#x6CD5;&#xFF0C;&#x4E5F;&#x4EA7;&#x751F;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x68A6;&#x60F3;&#xFF0C;&#x4F46;&#x662F;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x53EF;&#x8FBE;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x70E6;&#x607C;&#xFF0C;&#x70E6;&#x607C;&#x4E8E;&#x81EA;&#x5DF1;&#x65E0;&#x6CD5;&#x6539;&#x53D8;&#x73B0;&#x72B6;&#xFF0C;&#x5E76;&#x5BF9;&#x81EA;&#x5DF1;&#x73B0;&#x5728;&#x6781;&#x5176;&#x4E0D;&#x6EE1;&#x610F;&#x3002;&#x4F46;&#x662F;&#x4E0D;&#x6EE1;&#x5F52;&#x4E0D;&#x6EE1;&#xFF0C;&#x65F6;&#x95F4;&#x603B;&#x5728;&#x5411;&#x524D;&#x8D70;&#xFF0C;&#x6301;&#x7EED;&#x7684;&#x70E6;&#x607C;&#x8BA9;&#x6DF1;&#x77E5;&#x4E0D;&#x5BF9;&#x73B0;&#x72B6;&#x505A;&#x51FA;&#x6539;&#x53D8;&#xFF0C;&#x5982;&#x6B64;&#x53CD;&#x590D;&#x4E0D;&#x53D8;&#xFF0C;&#x5341;&#x5E74;&#x540E;&#x7684;&#x4ECA;&#x5929;&#xFF0C;&#x4E0D;&#x662F;&#x672A;&#x6765;&#xFF0C;&#x8FD8;&#x662F;&#x4ECA;&#x5929;&#x3002; &#x8D8A;&#x662F;&#x70E6;&#x607C;&#xFF0C;&#x8D8A;&#x662F;&#x7126;&#x8651;&#x3002; &#x7126;&#x8651;&#x5F52;&#x7126;&#x8651;&#xFF0C;&#x5373;&#x4FBF;&#x4F60;&#x6211;&#x6D3B;&#x5F97;&#x5343;&#x5DEE;&#x4E07;&#x522B;&#xFF0C;&#x6211;&#x6D3B;&#x5F97;&#x50CF;&#x4E00;&#x6761;&#x65E0;&#x5904;&#x627E;&#x5B89;&#x8EAB;&#x4E4B;&#x5730;&#x7684;&#x6D41;&#x6D6A;&#x72D7;&#xFF0C;&#x4F60;&#x6D3B;&#x6210;&#x4E86;&#x7CBE;&#x81F4;&#x6F47;&#x6D12;&#x7684;&#x4EBA;&#x751F;&#x8D62;&#x5BB6;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x8089;&#x8EAB;&#x4F9D;&#x65E7;&#x82DF;&#x6D3B;&#x4E8E;&#x4E16;&#xFF0C;&#x90FD;&#x662F;&#x5927;&#x81EA;&#x7136;&#x4E2D;&#x4E00;&#x79CD;&#x53EB;&#x4EBA;&#x7C7B;&#x7684;&#x7269;&#x79CD;&#xFF0C;&#x603B;&#x8981;&#x4E09;&#x9910;&#x89C5;&#x98DF;&#xFF0C;&#x603B;&#x4F1A;&#x9020;&#x51FA;&#x540C;&#x8425;&#x517B;&#x4EF7;&#x503C;&#x7684;&#x6709;&#x673A;&#x80A5;&#x6599;&#x3002; &#x9020;&#x7CAA;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x80FD;&#x5E72;&#x561B;&#xFF1F;&#x6211;&#x4EEC;&#x4F5C;&#x4E3A;&#x4EBA;&#x7C7B;&#x7269;&#x79CD;&#xFF0C;&#x533A;&#x522B;&#x4E8E;&#x5176;&#x4ED6;&#x751F;&#x7269;&#x7269;&#x79CD;&#xFF0C;&#x591A;&#x4E86;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x667A;&#x80FD;&#x3002; &#x6700;&#x63A5;&#x8FD1;&#x4EBA;&#x7C7B;&#x57FA;&#x56E0;&#x7684;&#x5927;&#x7329;&#x7329;&#xFF0C;&#x5B83;&#x4EEC;&#x5929;&#x751F;&#x4F1A;&#x6361;&#x8D77;&#x5730;&#x4E0A;&#x7684;&#x6811;&#x679D;&#x5E76;&#x6298;&#x65AD;&#x6210;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x63D2;&#x8FDB;&#x8682;&#x8681;&#x6D1E;&#x91CC;&#x6349;&#x8682;&#x8681;&#x5403;&#xFF0C;&#x800C;&#x4EBA;&#x66F4;&#x9AD8;&#x7EA7;&#xFF0C;&#x6709;&#x7740;&#x5929;&#x751F;&#x7684;&#x667A;&#x529B;&#x4F18;&#x52BF;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x957F;&#x5EA6;&#x7C97;&#x7EC6;&#x5408;&#x9002;&#x7684;&#x6811;&#x679D;&#x505A;&#x6210;&#x624B;&#x67C4;&#xFF0C;&#x627E;&#x5230;&#x575A;&#x786C;&#x6241;&#x5E73;&#x5408;&#x9002;&#x7684;&#x77F3;&#x5934;&#x78E8;&#x6210;&#x94F2;&#x5B50;&#xFF0C;&#x518D;&#x4F7F;&#x7528;&#x85E4;&#x6761;&#x628A;&#x4E24;&#x8005;&#x7EC4;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x5236;&#x4F5C;&#x51FA;&#x4E00;&#x628A;&#x94F2;&#x5B50;&#x3002; &#x4EBA;&#x7C7B;&#x4E00;&#x5207;&#x53D1;&#x660E;&#x5F52;&#x6839;&#x7ED3;&#x5E95;&#x5C31;&#x662F;&#x5728;&#x81EA;&#x6211;&#x6EE1;&#x8DB3;&#xFF0C;&#x5373;&#x4FBF;&#x67D0;&#x4EBA;&#x521B;&#x9020;&#x51FA;&#x5BF9;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5B9E;&#x9645;&#x4EF7;&#x503C;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x521B;&#x9020;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E5F;&#x662F;&#x81EA;&#x5DF1;&#x5728;&#x6EE1;&#x8DB3;&#x81EA;&#x5DF1;&#x7684;&#x521B;&#x9020;&#x6B32;&#x671B;&#xFF0C;&#x4EAB;&#x53D7;&#x8EAB;&#x4F53;&#x4E2D;&#x4EA7;&#x751F;&#x7684;&#x591A;&#x5DF4;&#x80FA;&#x3002;&#x56E0;&#x6B64;&#x4F5C;&#x4E3A;&#x4EBA;&#x7C7B;&#x9664;&#x4EA7;&#x80A5;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x667A;&#x80FD;&#x4F18;&#x52BF;&#xFF0C;&#x4E3B;&#x52A8;&#x201C;&#x641E;&#x4E8B;&#x60C5;&#x201D;&#x4EE5;&#x8FBE;&#x5230;&#x751F;&#x7406;&#x6216;&#x5FC3;&#x7406;&#x4E0A;&#x7684;&#x81EA;&#x6211;&#x6EE1;&#x8DB3;&#x611F;&#xFF0C;&#x6240;&#x4EE5;&#x6EE1;&#x8DB3;&#x79C1;&#x6B32;&#x5E76;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x597D;&#x3002; &#x6C83;&#x7EB3;&#xB7;&#x51AF;&#xB7;&#x5E03;&#x52B3;&#x6069;&#x5C0F;&#x65F6;&#x5019;&#x5C31;&#x559C;&#x6B22;&#x5728;&#x8857;&#x5934;&#x770B;&#x522B;&#x4EBA;&#x5F00;&#x7740;&#x81EA;&#x5236;&#x7684;&#x201D;&#x706B;&#x7BAD;&#x56DB;&#x8F6E;&#x8F66;&#x201D;&#x5728;&#x6A2A;&#x51B2;&#x76F4;&#x649E;&#xFF0C;&#x8FD9;&#x79CD;&#x524D;&#x6240;&#x672A;&#x6709;&#x7684;&#x5FEB;&#x4E50;&#x611F;&#x548C;&#x6EE1;&#x8DB3;&#x611F;&#x4FC3;&#x4F7F;&#x4ED6;&#x5BF9;&#x706B;&#x7BAD;&#x7684;&#x7814;&#x7A76;&#x4EA7;&#x751F;&#x4E86;&#x5174;&#x8DA3;&#xFF0C;&#x56E0;&#x7814;&#x7A76;&#x5982;&#x4F55;&#x628A;&#x5BFC;&#x5F39;&#x5347;&#x4E0A;&#x5929;&#x7A7A;&#x5E26;&#x6765;&#x6E90;&#x6E90;&#x4E0D;&#x65AD;&#x7684;&#x6109;&#x60A6;&#x611F;&#xFF0C;&#x4F7F;&#x4ED6;&#x4E0D;&#x65AD;&#x6DF1;&#x5165;&#x5176;&#x4E2D;&#xFF0C;&#x5E74;&#x7EAA;&#x8F7B;&#x8F7B;&#x5C31;&#x88AB;&#x4EBA;&#x79F0;&#x8D5E;&#x4E3A;&#x771F;&#x6B63;&#x7684;&#x79D1;&#x5B66;&#x5BB6;&#xFF0C;&#x6210;&#x529F;&#x5E2E;&#x52A9;&#x5E0C;&#x7279;&#x52D2;&#x5236;&#x9020;&#x51FA;&#x4E86;&#x5A01;&#x9707;&#x516B;&#x65B9;&#x7684; V-2 &#x5BFC;&#x5F39;&#xFF0C;&#x4F7F;&#x4E16;&#x754C;&#x683C;&#x5C40;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x6DF7;&#x4E71;&#x3002; &#x5728;&#x8FD9;&#x671F;&#x95F4;&#xFF0C;&#x6548;&#x529B;&#x7EB3;&#x7CB9;&#x7684;&#x79D1;&#x5B66;&#x5BB6;&#x4E5F;&#x4E0D;&#x4E4F;&#x5176;&#x4ED6;&#x9886;&#x57DF;&#x7684;&#x4E16;&#x754C;&#x7EA7;&#x4F7C;&#x4F7C;&#x8005;&#xFF0C;&#x4ED6;&#x4EEC;&#x4E0D;&#x662F;&#x6218;&#x4E89;&#x72C2;&#xFF0C;&#x800C;&#x662F;&#x9009;&#x62E9;&#x4E86;&#x7ED9;&#x4ED6;&#x4EEC;&#x7814;&#x7A76;&#x63A2;&#x7D22;&#x7684;&#x571F;&#x58E4;&#xFF0C;&#x7814;&#x7A76;&#x4E50;&#x8DA3;&#x5927;&#x4E8E;&#x7EB3;&#x7CB9;&#x90AA;&#x6076;&#x7684;&#x75DB;&#x6068;&#x3002; &#x5F53;&#x7EB3;&#x7CB9;&#x5B8C;&#x5168;&#x6218;&#x8D25;&#x65F6;&#xFF0C;&#x4EE5;&#x7F8E;&#x56FD;&#x4E3A;&#x9996;&#x7684;&#x6218;&#x80DC;&#x56FD;&#xFF0C;&#x8981;&#x631F;&#x8FD9;&#x4E9B;&#x79D1;&#x5B66;&#x5BB6;&#x6765;&#x672C;&#x56FD;&#x6548;&#x529B;&#xFF0C;&#x5982;&#x679C;&#x81EA;&#x613F;&#x5E2E;&#x52A9;&#x7F8E;&#x56FD;&#x7EE7;&#x7EED;&#x7814;&#x7A76;&#x63A2;&#x7D22;&#xFF0C;&#x9664;&#x672C;&#x4EBA;&#x4EAB;&#x53D7;&#x56FD;&#x5BB6;&#x7ED9;&#x4E88;&#x7684;&#x9876;&#x5C16;&#x7814;&#x7A76;&#x8D44;&#x6E90;&#x548C;&#x73AF;&#x5883;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x4E00;&#x5BB6;&#x8001;&#x5C0F;&#x7684;&#x4F4F;&#x623F;&#x548C;&#x6237;&#x53E3;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x7B54;&#x5E94;&#xFF0C;&#x5C31;&#x89C6;&#x4E3A;&#x4ED6;&#x4EEC;&#x662F;&#x7EB3;&#x7CB9;&#x5171;&#x72AF;&#xFF0C;&#x5FC5;&#x987B;&#x53D7;&#x5230;&#x56FD;&#x9645;&#x6CD5;&#x5F8B;&#x5236;&#x88C1;&#x3002; &#x89C1;&#x5230;&#x5982;&#x6B64;&#x8BF1;&#x4EBA;&#x7684;&#x201C;&#x8BF1;&#x60D1;&#x201D;&#xFF0C;&#x79D1;&#x5B66;&#x5BB6;&#x4EEC;&#x5F53;&#x7136;&#x662F;&#x9009;&#x62E9;&#x6295;&#x5165;&#x5927;&#x7F8E;&#x5E1D;&#x56FD;&#x7684;&#x6000;&#x62B1;&#xFF0C;&#x8086;&#x65E0;&#x5FCC;&#x60EE;&#x5730;&#x4EAB;&#x53D7;&#x7740;&#x7814;&#x7A76;&#x8D44;&#x6E90;&#x4EE5;&#x6EE1;&#x8DB3;&#x81EA;&#x6211;&#x6109;&#x60A6;&#x611F;&#xFF0C;&#x53EF;&#x4EE5;&#x9A6C;&#x540E;&#x70AE;&#x5730;&#x8BA4;&#x4E3A;&#xFF0C;&#x8FD9;&#x79CD;&#x79C1;&#x6B32;&#x7684;&#x6EE1;&#x8DB3;&#x4FC3;&#x8FDB;&#x4E86;&#x4E16;&#x754C;&#x79D1;&#x6280;&#x6587;&#x660E;&#x8FDB;&#x6B65;&#x3002; &#x56DE;&#x5F52;&#x672C;&#x6027;&#xFF0C;&#x505A;&#x4EC0;&#x4E48;&#x53EF;&#x4EE5;&#x8BA9;&#x81EA;&#x5DF1;&#x5FEB;&#x4E50;&#xFF0C;&#x5C31;&#x53BB;&#x5E72;&#x4EC0;&#x4E48;&#x3002; &#x6323;&#x5927;&#x94B1;&#xFF0C;&#x5C31;&#x7279;&#x522B;&#x6109;&#x60A6;&#xFF1F;&#x4EA7;&#x751F;&#x6109;&#x60A6;&#x611F;&#x7684;&#x4E8B;&#x60C5;&#x83AB;&#x8FC7;&#x4E8E;&#x6323;&#x4E86;&#x5927;&#x94B1;&#xFF0C;&#x6709;&#x7740;&#x82B1;&#x4E0D;&#x5B8C;&#x7684;&#x94B1;&#xFF0C;&#x7269;&#x8D28;&#x8D44;&#x6E90;&#x62E5;&#x6709;&#x611F;&#x53D8;&#x5F3A;&#xFF0C;&#x5C11;&#x4E86;&#x5BF9;&#x672A;&#x6765;&#x4E00;&#x8D2B;&#x5982;&#x6D17;&#x7684;&#x7126;&#x8651;&#x611F;&#xFF0C;&#x4E8E;&#x5B9E;&#x73B0;&#x4E86;&#x201C;&#x8D22;&#x52A1;&#x81EA;&#x7531;&#x201D;&#xFF0C;&#x4E5F;&#x53D8;&#x5F97;&#x201C;&#x4E8E;&#x4F17;&#x4E0D;&#x540C;&#x201D;&#xFF0C;&#x4ECE;&#x6B64;&#x79F0;&#x4E3A;&#x522B;&#x4EBA;&#x773C;&#x4E2D;&#x7684;&#x8D62;&#x5BB6;&#x3002;&#x95EE;&#x9898;&#x5728;&#x4E8E;&#xFF0C;&#x8C01;&#x90FD;&#x77E5;&#x9053;&#x62E5;&#x6709;&#x5F88;&#x591A;&#x8D22;&#x5BCC;&#x7684;&#x7F8E;&#x597D;&#xFF0C;&#x53EF;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x5462;&#xFF1F; &#x4F20;&#x8BF4;&#x4E00; &#x4E92;&#x8054;&#x7F51;&#x884C;&#x4E1A;&#x5174;&#x8D77;&#x6709;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x4E86;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x9700;&#x6C42;&#x91CF;&#x8FD8;&#x662F;&#x6CA1;&#x51CF;&#x591A;&#x5C11;&#xFF0C;&#x85AA;&#x8D44;&#x6C34;&#x5E73;&#x8FD8;&#x662F;&#x76F8;&#x5BF9;&#x8F83;&#x9AD8;&#xFF0C;&#x518D;&#x5BF9;&#x6BD4;&#x81EA;&#x5DF1;&#x73B0;&#x5728;&#x6240;&#x5904;&#x7684;&#x884C;&#x4E1A;&#x548C;&#x4F4D;&#x7F6E;&#xFF0C;&#x4EBA;&#x5BB6;&#x67D0;&#x7A0B;&#x5E8F;&#x5458;&#x5E72;&#x4E00;&#x4E2A;&#x6708;&#x80FD;&#x9876;&#x6211;&#x4EEC;&#x5E72;&#x4E24;&#x4E2A;&#x6708;&#xFF0C;&#x540C;&#x6837;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x4EBA;&#x5BB6;&#x505A;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x5B9E;&#x73B0;&#x51C0;&#x79EF;&#x7D2F;&#x5341;&#x4E07;&#x8981;&#x7528;&#x4E00;&#x5E74;&#xFF0C;&#x800C;&#x4EE5;&#x81EA;&#x5DF1;&#x73B0;&#x5728;&#x7684;&#x6C34;&#x5E73;&#xFF0C;&#x5230;&#x8FBE;&#x90A3;&#x4E2A;&#x76EE;&#x6807;&#x7684;&#x5E74;&#x9650;&#x6050;&#x6015;&#x662F;&#x4E2A;&#x672A;&#x77E5;&#x6570;&#x3002; &#x4E0A;&#x9762;&#x8FD9;&#x6BB5;&#x4F20;&#x8BF4;&#xFF0C;&#x5047;&#x8BBE;&#x4E00;&#x70B9;&#x6CA1;&#x9519;&#xFF0C;&#x5BFC;&#x81F4;&#x7684;&#x73B0;&#x8C61;&#x5C31;&#x662F;&#xFF0C;&#x7AD9;&#x5728;&#x5708;&#x5185;&#x7684;&#x5403;&#x5F97;&#x6B63;&#x9999;&#xFF0C;&#x5708;&#x5916;&#x7684;&#x4EBA;&#x770B;&#x5F97;&#x773C;&#x998B;&#xFF0C;&#x8DC3;&#x8DC3;&#x6B32;&#x8BD5;&#x3002;&#x4F46;&#x4F3C;&#x4E4E;&#x54EA;&#x91CC;&#x4E0D;&#x5BF9;&#x52B2;&#xFF0C;&#x85AA;&#x8D44;&#x9AD8;&#x4F4E;&#x771F;&#x7684;&#x548C;&#x804C;&#x4F4D;&#x540D;&#x79F0;&#x6709;&#x7EDD;&#x5BF9;&#x76F8;&#x5173;&#xFF1F; &#x5982;&#x679C;&#x6B63;&#x76F8;&#x5173;&#xFF0C;&#x90A3;&#x662F;&#x4E0D;&#x662F;&#x53EA;&#x8981;&#x6253;&#x7740;&#x662F;&#x4E00;&#x679A;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x65D7;&#x53F7;&#x6765;&#x9762;&#x8BD5;&#xFF0C;&#x6240;&#x6709;&#x4F01;&#x4E1A;&#x8001;&#x677F;&#x4EEC;&#x7684;&#x8111;&#x5B50;&#x90FD;&#x74E6;&#x584C;&#x4F3C;&#x7684;&#xFF0C;&#x542C;&#x7740;&#x6765;&#x8005;&#x53E3;&#x82E5;&#x60AC;&#x6CB3;&#x5730;&#x63CF;&#x7ED8;&#x81EA;&#x5DF1;&#x5982;&#x4F55;&#x719F;&#x7EC3;&#x5730;&#x67D0;&#x67D0;&#x6280;&#x672F;&#xFF0C;&#x8001;&#x677F;&#x89C1;&#x95FB;&#x773C;&#x775B;&#x4E00;&#x4EAE;&#xFF0C;&#x7ACB;&#x9A6C;&#x5F00;&#x9AD8;&#x85AA;&#x7EB3;&#x624D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6709;&#x4E86;&#x4E0A;&#x9762;&#x7684;&#x201C;&#x7A0B;&#x5E8F;&#x5458;&#x9AD8;&#x85AA;&#x8D44;&#x201D;&#x3002; &#x7ECF;&#x6D4E;&#x5B66;&#x5E38;&#x8BC6;&#x91CC;&#x4EBA;&#x529B;&#x8D44;&#x6E90;&#x662F;&#x5546;&#x54C1;&#xFF0C;&#x662F;&#x8D44;&#x6E90;&#xFF0C;&#x53EF;&#x4EE5;&#x7B49;&#x4EF7;&#x4EA4;&#x6613;&#xFF0C;&#x9AD8;&#x85AA;&#x4E0D;&#x5E94;&#x8BE5;&#x662F;&#x521B;&#x9020;&#x4EF7;&#x503C;&#x9AD8;&#x4F4E;&#x51B3;&#x5B9A;&#x5417;&#xFF0C;&#x8C01;&#x8BF4;&#x5E72;&#x7A0B;&#x5E8F;&#x5458;&#x5C31;&#x9AD8;&#x85AA;&#x8D44;&#xFF0C;&#x524D;&#x666F;&#x53D1;&#x5C55;&#x597D;&#x7684;&#xFF0C;&#x8FD9;&#x4E0D;&#x662F;&#x5728;&#x6545;&#x610F;&#x62AC;&#x4E3E;&#x8FD9;&#x4E2A;&#x804C;&#x4E1A;&#x5417;&#x3002; &#x4F20;&#x8BF4;&#x4E8C; &#x542C;&#x8BF4;&#x67D0;&#x67D0;&#x66FE;&#x7ECF;&#x662F;&#x5C4C;&#x4E1D;&#x4E00;&#x4E2A;&#xFF0C;&#x67D0;&#x5E74;&#x8FDB;&#x57F9;&#x8BAD;&#x673A;&#x6784;&#x5446;&#x4E86;&#x4E94;&#x4E2A;&#x6708;&#xFF0C;&#x51FA;&#x6765;&#x5C31;&#x6708;&#x85AA;&#x8FC7;&#x4E07;&#x4E86;&#xFF0C;&#x4ECE;&#x5BCC;&#x88D5;&#x8D77;&#x6765;&#x3002; &#x4E0A;&#x9762;&#x8FD9;&#x6BB5;&#x4F20;&#x8BF4;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x7B97;&#x4F5C;&#x4F20;&#x8BF4;&#xFF0C;&#x6BD5;&#x7ADF;&#x4EBA;&#x5BB6;&#x771F;&#x7684;&#x62FF;&#x4E86;&#x9AD8;&#x85AA;&#xFF0C;&#x771F;&#x7684;&#x6709;&#x90A3;&#x4E2A;&#x5546;&#x54C1;&#x7ECF;&#x6D4E;&#x4EF7;&#x503C;&#x3002;&#x4F46;&#x4E3A;&#x5565;&#x66FE;&#x7ECF;&#x88AB;&#x4F17;&#x4EBA;&#x770B;&#x4E0D;&#x8D77;&#x7684;&#x5C4C;&#x4E1D;&#x9006;&#x88AD;&#x6210;&#x529F;&#x4E86;&#x5462;&#xFF1F; &#x6216;&#x8BB8;&#x662F;&#x56E0;&#x4E3A;&#x4EBA;&#x5BB6;&#x53BB;&#x7684;&#x662F;&#x67D0;&#x77E5;&#x540D;&#x57F9;&#x8BAD;&#x673A;&#x6784;&#xFF0C;&#x8001;&#x5E08;&#x8BB2;&#x5F97;&#x597D;&#x5440;&#xFF0C;&#x5B66;&#x751F;&#x4EEC;&#x5B66;&#x4E60;&#x6C1B;&#x56F4;&#x597D;&#x5440;&#xFF0C;&#x5C31;&#x597D;&#x6BD4;&#x540D;&#x6821;&#x6613;&#x51FA;&#x72B6;&#x5143;&#x4E00;&#x6837;&#x3002;&#x52A0;&#x4E0A;&#x4EBA;&#x5BB6;&#x5B66;&#x7684;&#x5C31;&#x662F;&#x7F16;&#x7A0B;&#xFF0C;&#x5B8C;&#x5168;&#x4ECE;&#x96F6;&#x57FA;&#x7840;&#x5F00;&#x59CB;&#xFF0C;&#x534A;&#x5E74;&#x540E;&#x6210;&#x529F;&#x8F6C;&#x884C;&#x505A;&#x4E86;&#x7A0B;&#x5E8F;&#x5458;&#x3002; &#x76F8;&#x6BD4;&#x81EA;&#x5DF1;&#xFF0C;&#x6BD4;&#x90A3;&#x4F4D;&#x66FE;&#x7ECF;&#x7684;&#x5C4C;&#x4E1D;&#x72B6;&#x6001;&#x597D;&#x4E0D;&#x5C11;&#x5462;&#xFF0C;&#x4E8E;&#x662F;&#x5728;&#x4F20;&#x8BF4;&#x7684;&#x9F13;&#x821E;&#x4E0B;&#xFF0C;&#x6E10;&#x6E10;&#x5F00;&#x59CB;&#x5FC3;&#x52A8;&#x4E86;&#xFF0C;&#x72B9;&#x8C6B;&#x81EA;&#x5DF1;&#x662F;&#x4E0D;&#x662F;&#x4E5F;&#x53EF;&#x4EE5;&#x53BB;&#x4E2A;&#x77E5;&#x540D;&#x57F9;&#x8BAD;&#x673A;&#x6784;&#xFF0C;&#x95ED;&#x5173;&#x4FEE;&#x70BC;&#x534A;&#x5E74;&#xFF0C;&#x51FA;&#x6765;&#x4E5F;&#x662F;&#x6761;&#x597D;&#x6C49;&#xFF0C;&#x62FF;&#x5230;&#x9AD8;&#x85AA;&#x6210;&#x529F;&#x9006;&#x88AD;&#xFF0C;&#x6B63;&#x597D;&#x5927;&#x5927;&#x5730;&#x6EE1;&#x8DB3;&#x4E86;&#x81EA;&#x5DF1;&#x3002; &#x4F20;&#x8BF4;&#x4E09; &#x5728;&#x4E00;&#x4E9B;&#x8BBA;&#x575B;&#x6216;&#x8005;&#x77E5;&#x4E4E;&#x4E0A;&#x53EF;&#x4EE5;&#x770B;&#x89C1;&#x4E00;&#x4E9B;&#x5C0F;&#x4F19;&#x4F34;&#xFF0C;&#x5206;&#x4EAB;&#x6216;&#x5410;&#x5608;&#x4E86;&#x81EA;&#x5DF1;&#x5728;&#x57F9;&#x8BAD;&#x673A;&#x6784;&#x7684;&#x6574;&#x4F53;&#x611F;&#x53D7;&#xFF0C;&#x4ED6;&#x4EEC;&#x666E;&#x904D;&#x8BA4;&#x4E3A;&#xFF0C;&#x57F9;&#x8BAD;&#x673A;&#x6784;&#x6BD5;&#x662F;&#x7684;&#x76C8;&#x5229;&#x673A;&#x6784;&#xFF0C;&#x53EA;&#x8981;&#x62A5;&#x540D;&#x4EA4;&#x4E86;&#x5B66;&#x8D39;&#x6216;&#x8005;&#x8D37;&#x6B3E;&#x4E0A;&#x5B66;&#xFF0C;&#x4F60;&#x5B66;&#x4E0D;&#x5B66;&#x4E0E;&#x5B83;&#x65E0;&#x5173;&#xFF0C;&#x5B83;&#x4F1A;&#x6309;&#x7167;&#x6559;&#x5B66;&#x5927;&#x7EB2;&#x8D70;&#x4E00;&#x904D;&#xFF0C;&#x5B66;&#x4E0D;&#x5B66;&#x5F97;&#x5230;&#x5F97;&#x770B;&#x81EA;&#x5DF1;&#x3002; &#x8FD9;&#x4E2A;&#x4F20;&#x8BF4;&#x4F20;&#x5F97;&#x5F88;&#x4E2D;&#x80AF;&#xFF0C;&#x4F46;&#x548C;&#x524D;&#x4E24;&#x4E2A;&#x4F20;&#x8BF4;&#x76F8;&#x6BD4;&#xFF0C;&#x524D;&#x8005;&#x4EEC;&#x66F4;&#x5177;&#x6709;&#x6545;&#x4E8B;&#x611F;&#x548C;&#x8BF1;&#x60D1;&#x529B;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x7684;&#x9B45;&#x60D1;&#x529B;&#x53EF;&#x4EE5;&#x8BA9;&#x5FC3;&#x5982;&#x6B62;&#x6C34;&#x53D8;&#x6210;&#x5FC3;&#x60C5;&#x6F2A;&#x6D9F;&#xFF0C;&#x5BF9;&#x672A;&#x6765;&#x4E25;&#x91CD;&#x7126;&#x8651;&#x548C;&#x6050;&#x614C;&#x60A3;&#x8005;&#x542C;&#x95FB;&#x4E4B;&#x540E;&#x66F4;&#x52A0;&#x60F6;&#x6050;&#x4E0D;&#x5B89;&#xFF0C;&#x5FC3;&#x4E2D;&#x9690;&#x9690;&#x542C;&#x5230;&#x4E00;&#x79CD;&#x58F0;&#x97F3;&#xFF1A;&#x662F;&#x65F6;&#x5019;&#x8F6C;&#x884C;&#x7A0B;&#x5E8F;&#x5458;&#x4E86;&#xFF0C;&#x8D4C;&#x4E00;&#x628A;&#xFF0C;&#x6CA1;&#x51C6;&#x771F;&#x7684;&#x9006;&#x88AD;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x90A3;&#x4E0D;&#x5C31;&#x8D5A;&#x5927;&#x53D1;&#x4E86;&#x3002; &#x629B;&#x786C;&#x5E01;&#x770B;&#x6B63;&#x53CD;&#x9762;&#xFF0C;&#x524D;&#x4E94;&#x6B21;&#x90FD;&#x662F;&#x6B63;&#xFF0C;&#x7B2C;&#x516D;&#x6B21;&#x4E00;&#x5B9A;&#x662F;&#x6B63;&#x6216;&#x53CD;&#x5417;&#xFF1F; &#x6BCF;&#x60F3;&#x8D77;&#x5728;&#x5927;&#x5B66;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x6BCF;&#x6BCF;&#x8D70;&#x8FDB;&#x56FE;&#x4E66;&#x9986;&#x7684;&#x81EA;&#x7136;&#x79D1;&#x5B66;&#x9605;&#x89C8;&#x5BA4;&#xFF0C;&#x671B;&#x7740;&#x4E66;&#x67B6;&#x4E0A;&#x7433;&#x7405;&#x6EE1;&#x76EE;&#x7684;&#x4E66;&#x7C4D;&#xFF0C;&#x7AD9;&#x5728;&#x539F;&#x5730;&#x5F00;&#x59CB;&#x610F;&#x6DEB;&#x5B66;&#x4F1A; PS &#x53EF;&#x4EE5;&#x5982;&#x4F55;&#x5982;&#x4F55;&#xFF0C;&#x5B66;&#x89C6;&#x9891;&#x540E;&#x671F;&#x5982;&#x4F55;&#x5982;&#x4F55;&#xFF0C;&#x5B66;&#x4F1A; UI &#x8BBE;&#x8BA1;&#x5982;&#x4F55;&#x5982;&#x4F55;&#xFF0C;&#x5B66;&#x4F1A;&#x97F3;&#x9891;&#x5236;&#x4F5C;&#x5982;&#x4F55;&#x5982;&#x4F55;&#xFF0C;&#x7ED3;&#x679C;&#x4EC0;&#x4E48;&#x90FD;&#x6CA1;&#x5B66;&#x6210;&#x3002; &#x751F;&#x547D;&#x6709;&#x9650;&#xFF0C;&#x505C;&#x6B62;&#x610F;&#x6DEB;&#xFF0C;&#x628A;&#x751F;&#x547D;&#x6D6A;&#x8D39;&#x5728;&#x4F7F;&#x81EA;&#x5DF1;&#x5F00;&#x5FC3;&#x7684;&#x4E8B;&#x60C5;&#x4E0A;&#xFF0C;&#x5148;&#x505A;&#x81EA;&#x5DF1;&#x611F;&#x5174;&#x8DA3;&#x548C;&#x81EA;&#x5DF1;&#x5F00;&#x5FC3;&#x7684;&#x4E8B;&#x3002; &#x6D3B;&#x7740;&#xFF0C;&#x5F00;&#x5FC3;&#x5C31;&#x597D;&#x3002; &#x6709;&#x4EBA;&#x6216;&#x8BB8;&#x53CD;&#x95EE;&#xFF0C;&#x4F60;&#x5520;&#x4E86;&#x90A3;&#x4E48;&#x5E9F;&#x8BDD;&#xFF0C;&#x5173;&#x952E;&#x662F;&#x81EA;&#x5DF1;&#x73B0;&#x5728;&#x5BF9;&#x5565;&#x90FD;&#x4E0D;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x8FD9;&#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;&#x6211;&#x6D45;&#x8584;&#x5730;&#x8BA4;&#x4E3A;&#xFF0C;&#x5BF9;&#x5565;&#x90FD;&#x4E0D;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x4EBA;&#x662F;&#x4E0D;&#x4F1A;&#x770B;&#x8FD9;&#x6BB5;&#x6587;&#x5B57;&#xFF0C;&#x56E0;&#x4E3A;&#x5B8C;&#x6574;&#x770B;&#x5230;&#x672C;&#x6BB5;&#x7684;&#xFF0C;&#x8D77;&#x7801;&#x662F;&#x5BF9;&#x672C;&#x6587;&#x6709;&#x70B9;&#x9605;&#x8BFB;&#x4E0B;&#x53BB;&#x7684;&#x5174;&#x8DA3;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x4E0D;&#x5982;&#x5C1D;&#x8BD5;&#x505A;&#x70B9;&#x8BA9;&#x81EA;&#x5DF1;&#x771F;&#x7684;&#x5F00;&#x5FC3;&#x7684;&#x4E8B;&#xFF1F; &#x672C;&#x6587;&#x8FD8;&#x6709;&#x4E2A;&#x526F;&#x6807;&#x9898;&#x4EBA;&#x751F;&#x82E6;&#x77ED;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x8F6C;&#x884C;&#x8981;&#x8D81;&#x65E9;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>随笔杂谈</category>
      </categories>
      <tags>
        <tag>转行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生苦短，转行程序员要趁早(上)]]></title>
    <url>%2F2018%2F06%2F17%2F018%2F</url>
    <content type="text"><![CDATA[&#x628A;&#x751F;&#x547D;&#x6D6A;&#x8D39;&#x5728;&#x7F8E;&#x597D;&#x7684;&#x4E8B;&#x7269;&#x4E0A;&#x65F6;&#x95F4;&#x7BA1;&#x7406;&#x7406;&#x8BBA;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x6982;&#x5FF5;&#xFF1A;&#x56DB;&#x8C61;&#x9650;&#x6CD5;&#x5219;&#xFF0C;&#x4F18;&#x5148;&#x5904;&#x7406;&#x5B8C;&#x91CD;&#x8981;&#x4E14;&#x7D27;&#x6025;&#x7684;&#x4E8B;&#x60C5;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x91CD;&#x70B9;&#x5730;&#x628A;&#x4E3B;&#x8981;&#x7CBE;&#x529B;&#x548C;&#x65F6;&#x95F4;&#x96C6;&#x4E2D;&#x5730;&#x653E;&#x5728;&#x5904;&#x7406;&#x90A3;&#x4E9B;&#x91CD;&#x8981;&#x4F46;&#x4E0D;&#x7D27;&#x6025;&#x7684;&#x5DE5;&#x4F5C;&#x4E0A;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x672A;&#x96E8;&#x7EF8;&#x7F2A;&#xFF0C;&#x9632;&#x60A3;&#x4E8E;&#x672A;&#x7136;&#x3002; &#x65F6;&#x95F4;&#x7BA1;&#x7406;&#x56DB;&#x8C61;&#x9650;&#x6CD5;&#x5219;&#x7406;&#x8BBA;&#x5907;&#x53D7;&#x8FFD;&#x6367;&#xFF0C;&#x5B83;&#x5F88;&#x597D;&#x7684;&#x8BE0;&#x91CA;&#x4E86;&#x5982;&#x4F55;&#x6743;&#x8861;&#x5728;&#x8D44;&#x6E90;&#x6709;&#x9650;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x83B7;&#x5F97;&#x6700;&#x5927;&#x6536;&#x76CA;&#xFF0C;&#x4E16;&#x95F4;&#x4E07;&#x7269;&#x90FD;&#x662F;&#x57FA;&#x4E8E;&#x672C;&#x4E8B;&#x7269;&#x751F;&#x547D;&#x5468;&#x671F;&#x4E4B;&#x5185;&#xFF0C;&#x6709;&#x7740;&#x81EA;&#x5DF1;&#x7684;&#x8D44;&#x6E90;&#x74F6;&#x9888;&#xFF0C;&#x5373;&#x4F7F;&#x4F5C;&#x4E3A;&#x9AD8;&#x667A;&#x80FD;&#x751F;&#x7269;&#x5E76;&#x65E0;&#x9650;&#x63A2;&#x7D22;&#x6B32;&#x671B;&#x80FD;&#x529B;&#x7684;&#x4EBA;&#x7C7B;&#x4E5F;&#x65E0;&#x6CD5;&#x9003;&#x8131;&#x5BA2;&#x89C2;&#x9650;&#x5236;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x65F6;&#x95F4;&#x8D44;&#x6E90;&#xFF0C;&#x5982;&#x4F55;&#x628A;&#x6709;&#x9650;&#x751F;&#x547D;&#x6D3B;&#x5F97;&#x66F4;&#x6709;&#x610F;&#x4E49;&#xFF0C;&#x5373;&#x5982;&#x4F55;&#x6709;&#x6548;&#x5730;&#x5229;&#x7528;&#x6709;&#x9650;&#x8D44;&#x6E90;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x5E76;&#x5B9E;&#x73B0;&#x76EE;&#x6807;&#xFF0C;&#x8BA9;&#x81EA;&#x5DF1;&#x53D1;&#x5149;&#x53D1;&#x4EAE;&#x6210;&#x4E3A;&#x751F;&#x547D;&#x4E4B;&#x8981;&#x4E8B;&#x3002; &#x7B2C;&#x4E00;&#x6B21;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x7406;&#x8BBA;&#x662F;&#x5728;&#x9AD8;&#x4E8C;&#xFF0C;&#x65E0;&#x610F;&#x95F4;&#x77A5;&#x89C1;&#x73ED;&#x957F;&#x628A;&#x56DB;&#x8C61;&#x9650;&#x6CD5;&#x5219;&#x56FE;&#x6587;&#xFF0C;&#x4E00;&#x7B14;&#x4E00;&#x753B;&#x5730;&#x4ECE;&#x6742;&#x5FD7;&#x4E0A;&#x6284;&#x5728;&#x7EB8;&#x6761;&#x4E0A;&#xFF0C;&#x5E76;&#x5C0F;&#x5FC3;&#x7FFC;&#x7FFC;&#x5730;&#x5939;&#x5728;&#x4E66;&#x91CC;&#x3002;&#x5F88;&#x663E;&#x7136;&#x73ED;&#x957F;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x7406;&#x8BBA;&#x5F88;&#x503C;&#x5F97;&#x6536;&#x85CF;&#xFF0C;&#x5F53;&#x65F6;&#x7684;&#x6211;&#x5BF9;&#x6B64;&#x55E4;&#x4E4B;&#x4EE5;&#x9F3B;&#xFF0C;&#x8F7B;&#x6D6E;&#x5730;&#x8BA4;&#x4E3A;&#xFF1A;&#x8FD9;&#x7897;&#x9E21;&#x6C64;&#xFF0C;&#x672C;&#x4EBA;&#x5728;&#x4E2D;&#x5B66;&#x65F6;&#x5019;&#x5C31;&#x77E5;&#x9053;&#x4E86;&#xFF0C;&#x81F3;&#x4E8E;&#x5F53;&#x4E2A;&#x5B9D;&#x561B;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x6709;&#x53E5;&#x8BDD;&#x8BF4;&#x53EB;&#x51FA;&#x6765;&#x6DF7;&#x8FDF;&#x65E9;&#x662F;&#x8981;&#x8FD8;&#x7684;&#xFF0C;&#x73B0;&#x5728;&#x7684;&#x6211;&#x518D;&#x4E5F;&#x4E0D;&#x6562;&#x8F7B;&#x654C;&#x4EFB;&#x4F55;&#x5B66;&#x672F;&#x7406;&#x8BBA;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x300C; &#x8D8A;&#x770B;&#x8D77;&#x6765;&#x7B80;&#x5355;&#x7B80;&#x6D01;&#x7684;&#x7406;&#x8BBA;&#xFF0C;&#x8D8A;&#x662F;&#x8BA9;&#x4EBA;&#x4E0D;&#x8D77;&#x773C;&#xFF0C;&#x4F46;&#x5176;&#x4F5C;&#x7528;&#x53D1;&#x6325;&#x51FA;&#x6765;&#x8D8A;&#x662F;&#x60CA;&#x4EBA; &#x300D;&#xFF0C;&#x6700;&#x8457;&#x540D;&#x7684;&#x83AB;&#x8FC7;&#x4E8E;&#x7231;&#x56E0;&#x65AF;&#x5766;&#x8D28;&#x80FD;&#x65B9;&#x7A0B;&#x3002; &#x5224;&#x65AD;&#x4E8B;&#x60C5;&#x7684;&#x91CD;&#x8981;&#x7A0B;&#x5EA6;&#x56E0;&#x4EBA;&#x800C;&#x5F02;&#xFF0C;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x88AB;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x80FD;&#x8BA9;&#x81EA;&#x5DF1;&#x611F;&#x5230;&#x751F;&#x547D;&#x7684;&#x7F8E;&#x597D;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x4F1A;&#x53D8;&#x5F97;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x518D;&#x5229;&#x7528;&#x56DB;&#x8C61;&#x9650;&#x6CD5;&#x5219;&#x7BA1;&#x7406;&#x5206;&#x914D;&#x81EA;&#x5DF1;&#x7684;&#x7CBE;&#x529B;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x628A;&#x751F;&#x547D;&#x6D6A;&#x8D39;&#x5728;&#x7F8E;&#x597D;&#x7684;&#x4E8B;&#x7269;&#x4E0A;&#x3002; &#x7F8E;&#x597D;&#x9A71;&#x52A8;&#x4EBA;&#x751F;&#x5F53;&#x8981;&#x53CD;&#x611F;&#x4E00;&#x4E2A;&#x4E8B;&#x7269;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x8981;&#x76F4;&#x63A5;&#x8BF4;&#x5B83;&#x5982;&#x4F55;&#x4EE4;&#x4EBA;&#x4E0D;&#x723D;&#xFF0C;&#x800C;&#x8981;&#x53CD;&#x8BF4;&#x5176;&#x4ED6;&#x4E8B;&#x7269;&#x5982;&#x4F55;&#x4EE4;&#x4EBA;&#x7F8E;&#x597D;&#x3002;&#x4E2A;&#x4F53;&#x4E4B;&#x95F4;&#x5B9A;&#x4E49;&#x4E8B;&#x7269;&#x7684;&#x7F8E;&#x597D;&#x7A0B;&#x5EA6;&#x4E0D;&#x540C;&#xFF0C;&#x805A;&#x7126;&#x7F8E;&#x597D;&#x4E8B;&#x7269;&#x7684;&#x9009;&#x62E9;&#x4E5F;&#x5C31;&#x4E0D;&#x540C;&#xFF0C;&#x653E;&#x5F03;&#x4E00;&#x65B9;&#x800C;&#x8FFD;&#x6C42;&#x53E6;&#x4E00;&#x65B9;&#x7684;&#x7406;&#x7531;&#xFF0C;&#x53EF;&#x4EE5;&#x8BF4;&#x6210;&#x88AB;&#x53E6;&#x4E00;&#x65B9;&#x7684;&#x7F8E;&#x597D;&#x6240;&#x5438;&#x5F15;&#x9009;&#x62E9;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF4;&#x6210;&#x88AB;&#x4E00;&#x65B9;&#x7684;&#x4E0D;&#x7F8E;&#x597D;&#x800C;&#x653E;&#x5F03;&#xFF0C;&#x6211;&#x66F4;&#x613F;&#x610F;&#x9009;&#x62E9;&#x524D;&#x8005;&#x8FD9;&#x79CD;&#x7F8E;&#x597D;&#x7684;&#x8BF4;&#x6CD5;&#xFF0C;&#x5E76;&#x4E14;&#x4E00;&#x76F4;&#x662F;&#x8FD9;&#x6837;&#x505A;&#x7740;&#x3002; &#x4EBA;&#x751F;&#x5728;&#x4E16;&#xFF0C;&#x90FD;&#x662F;&#x5728;&#x5012;&#x8BA1;&#x65F6;&#xFF0C;&#x6D3B;&#x7740;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x65AD;&#x8FFD;&#x6C42;&#x3001;&#x65F6;&#x523B;&#x805A;&#x7126;&#x7F8E;&#x597D;&#xFF0C;&#x662F;&#x4EF6;&#x4EE4;&#x4EBA;&#x6109;&#x60A6;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x6BD4;&#x5982;&#x7F16;&#x7A0B;&#x3002; &#x81EA;&#x4EE5;&#x4E3A;&#x7684;&#x7F8E;&#x597D;&#x5927;&#x4E00;&#x4E0B;&#x5B66;&#x671F;&#x6709;&#x4E00;&#x95E8;&#x6570;&#x636E;&#x5E93;&#x5FC5;&#x4FEE;&#x8BFE;&#x7A0B;&#xFF0C;&#x867D;&#x7136;&#x662F;&#x5FC5;&#x4FEE;&#x8BFE;&#x7A0B;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x548C;&#x672C;&#x4E13;&#x4E1A;&#x5173;&#x7CFB;&#x4E0D;&#x5927;&#xFF0C;&#x52A0;&#x4E0A;&#x8BF8;&#x591A;&#x751F;&#x6DA9;&#x96BE;&#x61C2;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x6574;&#x4E2A;&#x8BFE;&#x7A0B;&#x5B66;&#x5B8C;&#x7ED9;&#x6211;&#x4E00;&#x79CD;&#x4E91;&#x91CC;&#x96FE;&#x91CC;&#x7684;&#x611F;&#x89C9;&#xFF0C;&#x76F4;&#x5230;&#x4E34;&#x8FD1;&#x671F;&#x672B;&#xFF0C;&#x5B66;&#x4E60;&#x8FD9;&#x95E8;&#x8BFE;&#x7A0B;&#x7684;&#x5B9E;&#x4E60;&#x8BAD;&#x7EC3;&#xFF0C;&#x4E3A;&#x671F;&#x4E00;&#x5468;&#xFF0C;&#x8001;&#x5E08;&#x8981;&#x6C42;&#x5C0F;&#x7EC4;&#x7EC4;&#x961F;&#x5408;&#x4F5C;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x3002;&#x5F53;&#x770B;&#x5230;&#x5F20;&#x8001;&#x5E08;&#x7EC6;&#x81F4;&#x5730;&#x8BB2;&#x6F14;&#x7CFB;&#x7EDF;&#x6570;&#x636E;&#x7684;&#x589E;&#x5220;&#x6539;&#x67E5;&#x529F;&#x80FD;&#x65F6;&#xFF0C;&#x6211;&#x7684;&#x773C;&#x91CC;&#x5192;&#x7740;&#x7EFF;&#x5149;&#xFF0C;&#x5174;&#x594B;&#x5730;&#x53D1;&#x73B0;&#x5B66;&#x8FD9;&#x95E8;&#x8BFE;&#x7A0B;&#xFF0C;&#x539F;&#x6765;&#x53EF;&#x4EE5;&#x8BA9;&#x8BA1;&#x7B97;&#x673A;&#x5B8C;&#x6210;&#x8FD9;&#x4E48;&#x5389;&#x5BB3;&#x7684;&#x4E8B;&#x60C5;&#xFF01; &#x63E3;&#x7740;&#x597D;&#x5947;&#x5174;&#x594B;&#x7684;&#x5FC3;&#x60C5;&#xFF0C;&#x4ECE;&#x56FE;&#x4E66;&#x9986;&#x501F;&#x4E86;&#x672C;&#x9879;&#x76EE;&#x5B9E;&#x6218;&#x4E66;&#xFF0C;&#x8FEB;&#x4E8E;&#x5F3A;&#x8FEB;&#x75C7;&#x548C;&#x597D;&#x5F3A;&#x5FC3;&#xFF0C;&#x770B;&#x5230;&#x4E66;&#x4E0A;&#x63CF;&#x8FF0;&#x7684;&#x7CFB;&#x7EDF;&#x529F;&#x80FD;&#x5F3A;&#x5927;&#x5B9E;&#x7528;&#xFF0C;&#x4E8E;&#x662F;&#x5FC3;&#x4E2D;&#x6697;&#x4E0B;&#x51B3;&#x5FC3;&#xFF0C;&#x6211;&#x4E5F;&#x8981;&#x505A;&#x4E2A;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x6A21;&#x4EFF;&#x7740;&#x4E66;&#x4E0A;&#x7684;&#x8BB2;&#x89E3;&#x5F00;&#x59CB;&#x4E86;&#x4EBA;&#x751F;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF0C;&#x767D;&#x5929;&#x5E2E;&#x52A9;&#x540C;&#x5B66;&#x4EEC;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x665A;&#x4E0A;&#x81EA;&#x5DF1;&#x5728;&#x4E0D;&#x505C;&#x201C;&#x6A21;&#x4EFF;&#x201D;&#xFF0C;&#x770B;&#x7740;&#x81EA;&#x5DF1;&#x4E00;&#x70B9;&#x70B9;&#x5B9E;&#x73B0;&#x7684;&#x529F;&#x80FD;&#x6D6E;&#x51FA;&#x6C34;&#x9762;&#xFF0C;&#x5FC3;&#x91CC;&#x8D8A;&#x52A0;&#x4EA2;&#x594B;&#xFF0C;&#x4EE5;&#x81F3;&#x4E8E;&#x4ECE;&#x665A;&#x996D;&#x5F00;&#x59CB;&#x9F13;&#x6363;&#x7535;&#x8111;&#x5230;&#x5929;&#x4EAE;&#x90FD;&#x6CA1;&#x6709;&#x4E00;&#x4E1D;&#x56F0;&#x610F;&#xFF0C;&#x90A3;&#x65F6;&#x8FD8;&#x5F88;&#x6D41;&#x884C;&#x7B2C;&#x4E00;&#x5B63;&#x4E2D;&#x56FD;&#x597D;&#x58F0;&#x97F3;&#xFF0C;&#x5F20;&#x4F1F;&#x7FFB;&#x5531;&#x8FC7;&#x4E00;&#x9996;&#x6B4C;&#x300A;&#x4E09;&#x5929;&#x4E09;&#x591C;&#x300B;&#xFF0C;&#x5BF9;&#x4E94;&#x97F3;&#x4E0D;&#x5168;&#x7684;&#x6211;&#x6765;&#x8BF4;&#xFF0C;&#x53EA;&#x4F1A;&#x53CD;&#x590D;&#x54FC;&#x5531;&#x8FD9;&#x9996;&#x6B4C;&#x7684;&#x7B2C;&#x4E00;&#x53E5;&#x300C;&#x4E00;&#x70B9;&#x90FD;&#x4E0D;&#x4F1A;&#x7D2F;~&#x300D;&#xFF0C;&#x771F;&#x7684;&#x662F;&#x4E00;&#x70B9;&#x90FD;&#x4E0D;&#x4F1A;&#x7D2F;&#xFF0C;&#x6574;&#x4E2A;&#x5B9E;&#x8BAD;&#x8FC7;&#x5F97;&#x90A3;&#x53EB;&#x4E00;&#x4E2A;&#x9178;&#x723D;&#x5145;&#x5B9E;&#x3002; &#x5F53;&#x65F6;&#x7684;&#x7535;&#x8111;&#x91CC;&#x8FD8;&#x5B89;&#x88C5;&#x7740;&#x53EB;&#x8FC5;&#x96F7;&#x97F3;&#x5F71;&#x7684;&#x89C6;&#x9891;&#x64AD;&#x653E;&#x5668;&#xFF0C;&#x901A;&#x8FC7;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x53EF;&#x4EE5;&#x53BB;&#x6389;&#x4E00;&#x4E9B;&#x5E7F;&#x544A;&#x4FE1;&#x606F;&#xFF0C;&#x4F46;&#x662F;&#x59CB;&#x7EC8;&#x65E0;&#x6CD5;&#x5B8C;&#x5168;&#x963B;&#x6B62;&#x53EF;&#x6076;&#x7684;&#x5F39;&#x7A97;&#xFF0C;&#x5F3A;&#x70C8;&#x8BA4;&#x4E3A;&#x6CA1;&#x6709;&#x7ECF;&#x8FC7;&#x7528;&#x6237;&#x540C;&#x610F;&#x5C31;&#x786C;&#x63A8;&#x5E7F;&#x544A;&#xFF0C;&#x4E0D;&#x505A;&#x64AD;&#x653E;&#x5668;&#x8BE5;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x8FD9;&#x5B8C;&#x5168;&#x5C5E;&#x4E8E;&#x6B3E;&#x6D41;&#x6C13;&#x8F6F;&#x4EF6;&#x3002;&#x7531;&#x4E8E;&#x5B9E;&#x4E60;&#x9879;&#x76EE;&#x7684;&#x201C;&#x6D17;&#x793C;&#x201D;&#xFF0C;&#x53D1;&#x73B0;&#x5C0F;&#x767D;&#x4E5F;&#x53EF;&#x4EE5;&#x8BBE;&#x8BA1;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x8F6F;&#x4EF6;&#x5E94;&#x8BE5;&#x957F;&#x6210;&#x4EC0;&#x4E48;&#x6837;&#x5B50;&#xFF0C;&#x4E8E;&#x662F;&#x5FC3;&#x60F3;&#x81EA;&#x5DF1;&#x5982;&#x679C;&#x72EC;&#x7ACB;&#x5F00;&#x53D1;&#x4E00;&#x4E2A;&#x5E72;&#x5E72;&#x51C0;&#x51C0;&#x7684;&#x64AD;&#x653E;&#x5668;&#xFF0C;&#x5E76;&#x5206;&#x4EAB;&#x7ED9;&#x5927;&#x4F19;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x4E8B;&#x8BE5;&#x591A;&#x4E48;&#x725B;X&#x3002;&#x4F46;&#x662F;&#x82E6;&#x4E8E;&#x81EA;&#x5DF1;&#x6CA1;&#x6709;&#x57FA;&#x7840;&#xFF0C;&#x4E0D;&#x77E5;&#x4ECE;&#x54EA;&#x91CC;&#x7740;&#x624B;&#x5F00;&#x5E72;&#x3002; &#x591A;&#x5634;&#x7684;&#x4E00;&#x4E2A;&#x95EE;&#x4F5C;&#x4E3A;&#x8BFE;&#x4EE3;&#x8868;&#xFF0C;&#x6765;&#x5230;&#x5F20;&#x8001;&#x5E08;&#x529E;&#x516C;&#x5BA4;&#xFF0C;&#x628A;&#x5B9E;&#x4E60;&#x62A5;&#x544A;&#x5728;&#x684C;&#x4E0A;&#x645E;&#x9F50;&#x540E;&#xFF0C;&#x672C;&#x53EF;&#x4EE5;&#x8F6C;&#x8EAB;&#x5C31;&#x8D70;&#xFF0C;&#x89C1;&#x8001;&#x5E08;&#x8FD8;&#x5C4F;&#x5E55;&#x524D;&#x5FD9;&#x6D3B;&#x7740;&#xFF0C;&#x672C;&#x4E0D;&#x60F3;&#x6253;&#x6270;&#xFF0C;&#x7ED3;&#x679C;&#x5FC3;&#x4E00;&#x72E0;&#xFF0C;&#x8FD8;&#x662F;&#x591A;&#x5634;&#x95EE;&#x4E86;&#x53E5;&#x6700;&#x8FD1;&#x618B;&#x5728;&#x5FC3;&#x91CC;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x5B66;&#x7F16;&#x7A0B;&#x505A;&#x4E2A;&#x8F6F;&#x4EF6;&#xFF0C;&#x8BE5;&#x770B;&#x4E9B;&#x4EC0;&#x4E48;&#x4E66;&#x6BD4;&#x8F83;&#x597D;&#x3002;&#x8001;&#x5E08;&#x89C1;&#x6211;&#x5728;&#x5B9E;&#x4E60;&#x671F;&#x95F4;&#x7684;&#x79EF;&#x6781;&#x8868;&#x73B0;&#xFF0C;&#x505C;&#x987F;&#x4E86;&#x4E00;&#x4E0B;&#xFF1A;&#x4F60;&#x662F;&#x96F6;&#x57FA;&#x7840;&#xFF0C;&#x771F;&#x611F;&#x5174;&#x8DA3;&#x60F3;&#x5B66;&#x7684;&#x8BDD;&#xFF0C;&#x6700;&#x597D;&#x6709;&#x4E2A;&#x8001;&#x5E08;&#x80FD;&#x5E26;&#x7740;&#x4F60;&#x3002;&#x6211;&#x4E00;&#x673A;&#x7075;&#xFF1A;&#x8001;&#x5E08;&#x60A8;&#x4E0D;&#x5C31;&#x53EF;&#x4EE5;&#x5E26;&#x6211;&#x561B;&#x3002;&#x8001;&#x5E08;&#x8F7B;&#x8F7B;&#x6447;&#x5934;&#x5730;&#x8868;&#x793A;&#x6CA1;&#x65F6;&#x95F4;&#xFF1A;&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x5230;&#x65F6;&#x5019;&#x7ED9;&#x4F60;&#x5F15;&#x8350;&#x4F4D;&#x8001;&#x5E08;&#xFF0C;&#x8BA9;&#x4ED6;&#x5E26;&#x7740;&#x4F60;&#x3002;&#x6211;&#x8FDE;&#x5FD9;&#x7B54;&#x8C22;&#xFF0C;&#x5BD2;&#x6684;&#x4E00;&#x756A;&#x5C31;&#x56DE;&#x53BB;&#x4E86;&#x3002; &#x90A3;&#x4E2A;&#x508D;&#x665A;&#xFF0C;&#x5915;&#x9633;&#x659C;&#x7167;&#xFF0C;&#x4F5C;&#x4E3A;&#x975E;&#x79D1;&#x73ED;&#x751F;&#xFF0C;&#x539F;&#x672C;&#x4EE5;&#x4E3A;&#x8FD9;&#x53EA;&#x662F;&#x4E00;&#x591A;&#x5634;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8001;&#x5E08;&#x5E76;&#x4E0D;&#x4F1A;&#x653E;&#x5728;&#x5FC3;&#x4E0A;&#xFF0C;&#x56E0;&#x4E3A;&#x8BA1;&#x7B97;&#x673A;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x53EA;&#x662F;&#x6211;&#x4EEC;&#x4E13;&#x4E1A;&#x7684;&#x9644;&#x5C5E;&#x8BFE;&#x7A0B;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x90FD;&#x6CA1;&#x60F3;&#x8FC7;&#x53EF;&#x4EE5;&#x63A5;&#x89E6;&#x7F16;&#x7A0B;&#x5E76;&#x628A;&#x8FD9;&#x4E2A;&#x5F53;&#x505A;&#x65E5;&#x540E;&#x5DE5;&#x4F5C;&#x4E00;&#x9879;&#x6280;&#x80FD;&#x6765;&#x5B66;&#xFF0C;&#x53EA;&#x662F;&#x5355;&#x7EAF;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x4E00;&#x95EE;&#xFF0C;&#x7136;&#x800C;&#x8001;&#x5E08;&#x653E;&#x5728;&#x5FC3;&#x4E0A;&#xFF0C;&#x56E0;&#x800C;&#x8FD9;&#x591A;&#x5634;&#x7684;&#x4E00;&#x4E2A;&#x95EE;&#x6B63;&#x5411;&#x5730;&#x5F71;&#x54CD;&#x4E86;&#x6211;&#x7684;&#x751F;&#x547D;&#x8F68;&#x8FF9;&#x3002; &#x53D1;&#x73B0;&#x7F16;&#x7A0B;&#x4E4B;&#x7F8E;&#x4E0D;&#x5230;&#x4E00;&#x661F;&#x671F;&#xFF0C;&#x5F20;&#x8001;&#x5E08;&#x7A81;&#x7136;&#x6765;&#x7535;&#xFF1A;&#x201C;&#x73B0;&#x5728;&#x5FD9;&#x4E0D;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5FD9;&#xFF0C;&#x6765;&#x6211;&#x8FD9;&#xFF0C;&#x7ED9;&#x4F60;&#x63A8;&#x8350;&#x4E86;&#x4E00;&#x4F4D;&#x8001;&#x5E08;&#xFF0C;&#x53EF;&#x4EE5;&#x8DDF;&#x7740;&#x8001;&#x5E08;&#x540E;&#x9762;&#x5B8C;&#x6210;&#x7F16;&#x7A0B;&#x9879;&#x76EE;&#x2026;&#x201D;&#x3002;&#x7535;&#x8BDD;&#x8FD9;&#x5934;&#x7684;&#x6211;&#x5174;&#x594B;&#x4E0D;&#x5DF2;&#xFF0C;&#x8FDE;&#x5FD9;&#x6536;&#x62FE;&#x4E66;&#x5305;&#xFF0C;&#x80CC;&#x7740;&#x7B14;&#x8BB0;&#x672C;&#xFF0C;&#x4ECE;&#x5BBF;&#x820D;&#x98DE;&#x5954;&#x5230;&#x6559;&#x5B66;&#x697C;&#xFF0C;&#x6C14;&#x5598;&#x5598;&#x5730;&#x6765;&#x5230;&#x6307;&#x5B9A;&#x7684;&#x529E;&#x516C;&#x5BA4;&#x95E8;&#x524D;&#xFF0C;&#x6574;&#x7406;&#x597D;&#x6C14;&#x606F;&#xFF0C;&#x602F;&#x602F;&#x5730;&#x6572;&#x95E8;&#x8FDB;&#x53BB;&#x4E86;&#x3002; &#x5728;&#x5E26;&#x6211;&#x5165;&#x7F16;&#x7A0B;&#x4E4B;&#x95E8;&#x7684;&#x5019;&#x8001;&#x5E08;&#x9762;&#x524D;&#xFF0C;&#x7ED3;&#x7ED3;&#x5DF4;&#x5DF4;&#x5730;&#x8868;&#x793A;&#x81EA;&#x5DF1;&#x662F;&#x96F6;&#x57FA;&#x7840;&#xFF0C;&#x5FC3;&#x91CC;&#x6CA1;&#x6709;&#x5E95;&#x6C14;&#xFF0C;&#x60A8;&#x786E;&#x5B9A;&#x6211;&#x53EF;&#x4EE5;&#x5728;&#x60A8;&#x7684;&#x6307;&#x5BFC;&#x4E0B;&#x5B8C;&#x6210;&#x9879;&#x76EE;&#x5417;&#xFF0C;&#x5019;&#x8001;&#x5E08;&#x4E0D;&#x5728;&#x610F;&#x5730;&#x8868;&#x793A;&#xFF1A;&#x201C;&#x6CA1;&#x5173;&#x7CFB;&#xFF0C;&#x53EA;&#x8981;&#x6709;&#x5174;&#x8DA3;&#x5C31;&#x597D;&#xFF0C;&#x76F4;&#x63A5;&#x8DDF;&#x6211;&#x4E0A;&#x624B;&#x505A;&#x9879;&#x76EE;&#x5C31;&#x884C;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x6B7B;&#x677F;&#x7684;&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x5B66;&#x4E60;&#xFF0C;&#x4E0D;&#x8FC7;&#x4F60;&#x73B0;&#x5728;&#x8FD8;&#x662F;&#x5F97;&#x81EA;&#x5B66;&#x70B9;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x624D;&#x884C;&#x2026;&#x201D;&#x3002;&#x5728;&#x8001;&#x5E08;&#x7C97;&#x7565;&#x5730;&#x8BB2;&#x89E3;&#x4EC0;&#x4E48;&#x662F;&#x7F51;&#x9875;&#x7F16;&#x7A0B;&#x4E4B;&#x540E;&#xFF0C;&#x7B80;&#x5355;&#x5730;&#x6F14;&#x793A;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x770B;&#x5F97;&#x6211;&#x662F;&#x500D;&#x611F;&#x538B;&#x529B;&#xFF08;&#x5B8C;&#x5168;&#x4E0D;&#x61C2;&#xFF0C;&#x4E00;&#x8138;&#x61F5;&#x903C;&#xFF09;&#xFF0C;&#x8001;&#x5E08;&#x89C1;&#x72B6;&#xFF0C;&#x5C31;&#x7FFB;&#x51FA;&#x4E86;&#x684C;&#x4E0A;&#x7684;&#x4E00;&#x672C;&#x7F51;&#x9875;&#x7F16;&#x7A0B;&#x57FA;&#x7840;&#x6559;&#x7A0B;&#x4E66;&#xFF0C;&#x5B89;&#x6170;&#x9F13;&#x52B1;&#x6211;&#x5148;&#x81EA;&#x5DF1;&#x770B;&#x770B;&#xFF0C;&#x628A;&#x91CC;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x90FD;&#x5F04;&#x61C2;&#x4E4B;&#x540E;&#x518D;&#x6765;&#x3002; &#x8FD9;&#x672C;&#x4E66;&#x5F88;&#x8584;&#xFF0C;&#x5E8F;&#x8A00;&#x5199;&#x7740;&#x9002;&#x5408;&#x96F6;&#x57FA;&#x7840;&#x5165;&#x95E8;&#xFF0C;&#x4F46;&#x662F;&#x4F5C;&#x4E3A;&#x975E;&#x79D1;&#x73ED;&#x51FA;&#x8EAB;&#x7684;&#x6211;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x91CC;&#x9762;&#x8BB2;&#x7684;&#x4EFB;&#x4F55;&#x77E5;&#x8BC6;&#x70B9;&#x90FD;&#x662F;&#x5B8C;&#x5168;&#x964C;&#x751F;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x9002;&#x5408;&#x7EAF;&#x5C0F;&#x767D;&#x5165;&#x95E8;&#xFF0C;&#x6211;&#x8FDE;&#x4E00;&#x4E2A; html &#x7684;&#x8BCD;&#x4E49;&#x89E3;&#x91CA;&#x90FD;&#x9700;&#x8981;&#x53CD;&#x590D;&#x7406;&#x89E3;&#x534A;&#x5929;&#xFF0C;&#x6709;&#x79CD;&#x4ECE;&#x5165;&#x95E8;&#x5230;&#x653E;&#x5F03;&#x7684;&#x611F;&#x89C9;&#x3002;&#x4E3A;&#x4E86;&#x4E0D;&#x8F9C;&#x8D1F;&#x5019;&#x8001;&#x5E08;&#x7684;&#x671F;&#x671B;&#x548C;&#x81EA;&#x5DF1;&#x7684;&#x521D;&#x5FC3;&#xFF0C;&#x5F53;&#x65F6;&#x7684;&#x81EA;&#x5DF1;&#x4E0D;&#x4F1A;&#x5229;&#x7528;&#x7F51;&#x7EDC;&#x627E;&#x5B66;&#x4E60;&#x8D44;&#x6599;&#x8F85;&#x52A9;&#x81EA;&#x5B66;&#xFF0C;&#x5B8C;&#x5168;&#x4EC5;&#x51ED;&#x8FD9;&#x672C;&#x4E0D;&#x9002;&#x5408;&#x5C0F;&#x767D;&#x7684;&#x5165;&#x95E8;&#x4E66;&#x5728;&#x5543;&#xFF0C;&#x5FC3;&#x4E2D;&#x65E0;&#x6570;&#x4E2A;&#x5BF9;&#x4F5C;&#x8005;&#x80E1;&#x5199;&#x4E00;&#x901A;&#x7684;&#x9A82;&#x5A18;&#x548C;&#x60F3;&#x653E;&#x5F03;&#x7684;&#x5FC3;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x4E00;&#x5B57;&#x4E00;&#x53E5;&#x5730;&#x9605;&#x8BFB;&#x5E76;&#x7167;&#x7740;&#x4E66;&#x4E0A;&#x63CF;&#x8FF0;&#x7684;&#x6B65;&#x9AA4;&#x4EB2;&#x624B;&#x5B9E;&#x73B0; demo&#xFF0C;&#x7136;&#x800C;&#x6BD4;&#x8F83;&#x795E;&#x5947;&#x7684;&#x4E8B;&#x60C5;&#x53D1;&#x751F;&#x4E86;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x6210;&#x529F;&#x5B9E;&#x73B0;&#x7684;&#x529F;&#x80FD;&#x90FD;&#x50CF;&#x662F;&#x4E00;&#x9488;&#x5174;&#x594B;&#x5242;&#xFF0C;&#x523A;&#x6FC0;&#x7740;&#x539F;&#x672C;&#x60F3;&#x653E;&#x5F03;&#x7684;&#x5FC3;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x4E00;&#x70B9;&#x70B9;&#x5174;&#x594B;&#x523A;&#x6FC0;&#xFF0C;&#x6108;&#x52A0;&#x53D1;&#x73B0;&#xFF0C;&#x81EA;&#x5DF1;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7F16;&#x7A0B;&#x53BB;&#x63A7;&#x5236;&#x7535;&#x8111;&#x53BB;&#x8BBE;&#x8BA1;&#x5B8C;&#x6210;&#x81EA;&#x5DF1;&#x7684;&#x60F3;&#x6CD5;&#xFF0C;&#x6BCF;&#x4E00;&#x5904;&#x7EC6;&#x8282;&#x90FD;&#x662F;&#x7531;&#x81EA;&#x5DF1;&#x53CC;&#x624B;&#x4EB2;&#x81EA;&#x7CBE;&#x51C6;&#x63A7;&#x5236;&#xFF0C;&#x6210;&#x5C31;&#x611F;&#x60A0;&#x7136;&#x800C;&#x751F;&#xFF0C;&#x7F16;&#x7A0B;&#x8FD9;&#x4E2A;&#x771F;&#x7684;&#x662F;&#x4EE4;&#x4EBA;&#x7CBE;&#x795E;&#x6296;&#x64DE;&#xFF0C;&#x56E0;&#x6B64;&#x6574;&#x4E2A;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7EE7;&#x7EED;&#x5B66;&#x4E60;&#x4E0B;&#x53BB;&#x7684;&#x70ED;&#x60C5;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x51CF;&#x5C11;&#x3002; &#x56DE;&#x60F3;&#x8D77;&#x6765;&#xFF0C;&#x5F53;&#x65F6;&#x80FD;&#x591F;&#x5B8C;&#x6574;&#x5730;&#x770B;&#x5B8C;&#x7F51;&#x9875;&#x7F16;&#x7A0B;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#xFF0C;&#x6839;&#x672C;&#x539F;&#x56E0;&#x5728;&#x4E8E;&#x6211;&#x6709;&#x4E00;&#x53F0;&#x4E2A;&#x4EBA;&#x7535;&#x8111;&#xFF0C;&#x9047;&#x5230;&#x4E0D;&#x61C2;&#x7684;&#x6982;&#x5FF5;&#x53EF;&#x4EE5;&#x53CA;&#x65F6;&#x5FEB;&#x901F;&#x5730;&#x4E0A;&#x673A;&#x5B9E;&#x64CD;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x6210;&#x529F;&#x6F14;&#x793A;&#x7684;&#x529F;&#x80FD;&#x90FD;&#x662F;&#x4E00;&#x6B21;&#x60CA;&#x559C;&#x53D1;&#x73B0;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x5174;&#x594B;&#x523A;&#x6FC0;&#x7D2F;&#x79EF;&#x4E0B;&#x6765;&#x5C31;&#x4F7F;&#x5F97;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x53D8;&#x5F97;&#x5F88;&#x6709;&#x8DA3;&#x5473;&#xFF0C;&#x5E76;&#x4E14;&#x5B66;&#x4E60;&#x65F6;&#x95F4;&#x8D8A;&#x957F;&#x8D8A;&#x52A0;&#x53D1;&#x73B0;&#xFF0C;&#x539F;&#x6765;&#x7F16;&#x7A0B;&#x662F;&#x4E00;&#x79CD;&#x5DE5;&#x5177;&#xFF0C;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x7684;&#x60F3;&#x6CD5;&#xFF0C;&#x8BA9;&#x751F;&#x6D3B;&#x53D8;&#x5F97;&#x66F4;&#x7F8E;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>随笔杂谈</category>
      </categories>
      <tags>
        <tag>转行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[相遇即是缘分]]></title>
    <url>%2F2016%2F02%2F29%2F001%2F</url>
    <content type="text"><![CDATA[&#x771F;&#x662F;&#x5DE7;&#x4E86;&#xFF01; 2016 &#x5E74; 02 &#x6708; 21 &#x65E5;&#xFF0C;&#x6CE8;&#x518C;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x3002; 2018 &#x5E74; 12 &#x6708; 21 &#x65E5;&#xFF0C;&#x53D1;&#x5E03; github &#x535A;&#x5BA2;&#x3002; &#x5C0F;&#x4E09;&#x5E74;&#x7684;&#x65F6;&#x95F4;&#x8FC7;&#x53BB;&#x4E86;&#xFF0C;&#x91CD;&#x6E29;&#x4E86;&#x4E00;&#x904D;&#x4E0B;&#x9762;&#x7684;&#x6587;&#x5B57;&#xFF0C;&#x600E;&#x4E00;&#x4E2A;&#x571F;&#x5B57;&#x4E86;&#x5F97;&#xFF0C; &#x90A3;&#x65F6;&#x5FEB;&#x8981;&#x6BD5;&#x4E1A;&#x4E86;&#xFF0C;&#x5C31;&#x8981;&#x6B65;&#x5165;&#x793E;&#x4F1A;&#x81EA;&#x5DF1;&#x6253;&#x62FC;&#x4E86;&#xFF0C;&#x6587;&#x5B57;&#x91CC;&#x8FD8;&#x662F;&#x900F;&#x7740;&#x5F88;&#x5F3A;&#x7684;&#x7A1A;&#x5AE9;&#x548C;&#x6124;&#x9752;&#xFF0C;&#x770B;&#x7740;&#x633A;&#x611F;&#x6168;&#x7684;&#x3002; &#x8981;&#x5B66;&#x4E60;&#x7684;&#x4E1C;&#x897F;&#x592A;&#x591A;&#x4E86;&#xFF0C;&#x90FD;&#x6765;&#x4E0D;&#x53CA;&#x6292;&#x53D1;&#x60C5;&#x611F;&#x4E86;&#xFF0C;&#x6E9C;&#x4E86;~ 2016 &#x5E74; 2 &#x6708; 21 &#x65E5;&#x665A; 20&#xFF1A;00&#xFF0C;&#x5185;&#x5FC3;&#x4E00;&#x76F4;&#x6709;&#x4E00;&#x4E2A;&#x58F0;&#x97F3;&#x5728;&#x547C;&#x5524;&#x6211;&#x505A;&#x51FA;&#x4E00;&#x4E2A;&#x4E3E;&#x52A8; &#x2014;&#x2014; &#x6CE8;&#x518C;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF0C;&#x8FD9;&#x4E2A;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x7684;&#x529F;&#x80FD;&#x662F;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x81EA;&#x5DF1;&#x7684;&#x5FC3;&#x8DEF;&#x5386;&#x7A0B;&#xFF0C;&#x6211;&#x770B;&#x89C1;&#x4E00;&#x4E9B;&#x4E2A;&#x4EBA;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x7684;&#x6587;&#x7AE0;&#x5341;&#x5206;&#x4E13;&#x4E1A;&#x4E13;&#x4E00;&#xFF0C;&#x800C;&#x6211;&#xFF0C;&#x4E00;&#x4E2A;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x5C0F;&#x4EBA;&#x7269;&#xFF0C;&#x6CA1;&#x6709;&#x592A;&#x591A;&#x7684;&#x4E13;&#x4E1A;&#x6027;&#x77E5;&#x8BC6;&#x4F53;&#x7CFB;&#x4E66;&#x5199;&#x4EF7;&#x503C;&#x542B;&#x91CF;&#x9AD8;&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x6240;&#x5199;&#x7684;&#x6587;&#x7AE0;&#x57FA;&#x672C;&#x4E0A;&#x4E3A;&#x4E2A;&#x4EBA;&#x6587;&#x7AE0;&#xFF0C;&#x4EE5;&#x524D;&#x6709;&#x535A;&#x5BA2;&#xFF0C;&#x540E;&#x6765;&#x6709;&#x5FAE;&#x535A;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x5FAE;&#x4FE1;&#xFF0C;&#x6211;&#x53EA;&#x662F;&#x7528;&#x4E86;&#x76EE;&#x524D;&#x6700;&#x6F6E;&#x6D41;&#x7684;&#x5A92;&#x4F53;&#x5F62;&#x5F0F;&#x6765;&#x6292;&#x53D1;&#x5C0F;&#x60C5;&#x7EEA;&#x800C;&#x5DF2;&#xFF0C;&#x5E76;&#x671F;&#x671B;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x4E0E;&#x5C4F;&#x5E55;&#x524D;&#x7684;&#x4F60;&#x76F8;&#x9047;&#x3002;&#x6211;&#x603B;&#x89C9;&#x5F97;&#x4E00;&#x5207;&#x7684;&#x76F8;&#x9047;&#x90FD;&#x662F;&#x7F18;&#x5206;&#xFF0C;&#x6211;&#x76F8;&#x4FE1;&#x7F18;&#x5206;&#x4E5F;&#x662F;&#x6709;&#x56E0;&#x679C;&#x5173;&#x7CFB;&#x7684;&#xFF0C;&#x6211;&#x5E0C;&#x671B;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x70B9;&#x70B9;&#x52AA;&#x529B;&#x548C;&#x6210;&#x957F;&#x80FD;&#x5E2E;&#x52A9;&#x5230;&#x8EAB;&#x8FB9;&#x7684;&#x4EBA;&#xFF0C;&#x5E76;&#x5728;&#x6211;&#x4EEC;&#x6709;&#x751F;&#x4E4B;&#x5E74;&#x80FD;&#x591F;&#x76F8;&#x4E92;&#x6210;&#x957F;&#xFF0C;&#x5171;&#x540C;&#x8FDB;&#x6B65;&#xFF01; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>随笔杂谈</category>
      </categories>
      <tags>
        <tag>编程随想</tag>
      </tags>
  </entry>
</search>
